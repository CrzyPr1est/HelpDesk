<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Mvc</name>
  </assembly>
  <members>
    <member name="T:System.Web.Mvc.AcceptVerbsAttribute">
      <summary>Представляет атрибут, указывающий HTTP-команды, на которые будет отвечать метод действия.</summary>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" />, используя список HTTP-команд, на которые будет отвечать метод действия.</summary>
      <param name="verbs">HTTP-команды, на которые будет отвечать метод действия.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="verbs" /> имеет значение null или нулевую длину.</exception>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.Web.Mvc.HttpVerbs)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" />, используя HTTP-команды, на которые будет отвечать метод действия.</summary>
      <param name="verbs">HTTP-команды, на которые будет отвечать метод действия.</param>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Определяет, допустима ли указанная информация метода для заданного контекста контроллера.</summary>
      <returns>Значение true, если сведения о методе допустимы. В противном случае — значение false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="methodInfo">Информация метода.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerContext " /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AcceptVerbsAttribute.Verbs">
      <summary>Получает или задает список HTTP-команд, на которые будет отвечать метод действия.</summary>
      <returns>Список HTTP-команд, на которые будет отвечать метод действия.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionDescriptor">
      <summary>Предоставляет сведения о методе действия, например о его имени, контроллере, параметрах, атрибутах и фильтрах.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ActionDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ActionName">
      <summary>Получает имя метода действия.</summary>
      <returns>Имя метода действия.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ControllerDescriptor">
      <summary>Получает дескриптор контроллера.</summary>
      <returns>Дескриптор контроллера.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Выполняет метод действия, используя указанные параметры и контекст контроллера.</summary>
      <returns>Результат выполнения метода действия.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="parameters">Параметры метода действия.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает массив настраиваемых атрибутов, определенных для данного члена, за исключением именованных атрибутов.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
      <exception cref="T:System.TypeLoadException">Невозможно загрузить тип пользовательского атрибута.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Для данного члена определено более одного атрибута типа <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Возвращает массив настраиваемых атрибутов, определенных для данного члена и принадлежащих указанному типу.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты указанного типа отсутствуют.</returns>
      <param name="attributeType">Тип пользовательских атрибутов.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
      <exception cref="T:System.TypeLoadException">Невозможно загрузить тип пользовательского атрибута.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Для данного члена определено более одного атрибута типа <paramref name="attributeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="attritubeType" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Получает атрибуты фильтра.</summary>
      <returns>Атрибуты фильтра.</returns>
      <param name="useCache">Значение true, если нужно использовать кэш. В противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilters">
      <summary>Возвращает фильтры, связанные с данным методом действия.</summary>
      <returns>Фильтры, связанные с данным методом действия.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetParameters">
      <summary>Возвращает параметры метода действия.</summary>
      <returns>Параметры метода действия.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetSelectors">
      <summary>Возвращает селекторы метода действия.</summary>
      <returns>Селекторы метода действия.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Определяет, указан ли для данного члена один или несколько экземпляров определенного типа атрибута.</summary>
      <returns>Значение true, если для данного члена определен параметр <paramref name="attributeType" />; в противном случае — значение false.</returns>
      <param name="attributeType">Тип настраиваемого атрибута.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="attritubeType" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.UniqueId">
      <summary>Получает уникальный идентификатор для дескриптора действия с использованием отложенной инициализации.</summary>
      <returns>Уникальный идентификатор.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutedContext">
      <summary>Предоставляет контекст для метода ActionExecuted класса <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ActionExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Boolean,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ActionExecutedContext" />.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionDescriptor">Дескриптор метода действия.</param>
      <param name="canceled">Значение true, если действие отменено.</param>
      <param name="exception">Объект исключения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="actionDescriptor" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ActionDescriptor">
      <summary>Получает или задает дескриптор действия.</summary>
      <returns>Дескриптор действия.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Canceled">
      <summary>Получает или задает значение, указывающее, что данный объект <see cref="T:System.Web.Mvc.ActionExecutedContext" /> отменяется.</summary>
      <returns>Значение true, если контекст отменен. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Exception">
      <summary>Получает или задает исключение, появившееся во время выполнения метода действия (если имеется).</summary>
      <returns>Исключение, появившееся во время выполнения метода действия.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ExceptionHandled">
      <summary>Получает или задает значение, указывающее, обработано ли исключение.</summary>
      <returns>Значение true, если исключение обработано. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Result">
      <summary>Получает или задает результат, возвращаемый методом действия.</summary>
      <returns>Результат, возвращаемый методом действия.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutingContext">
      <summary>Предоставляет контекст для метода ActionExecuting класса <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ActionExecutingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ActionExecutingContext" />, используя указанные контекст контроллера, дескриптор действия и параметры метода действия.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
      <param name="actionParameters">Параметры метода действия.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="ActionParameters" /> или <paramref name="actionDescriptor" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionDescriptor">
      <summary>Получает или задает дескриптор действия.</summary>
      <returns>Дескриптор действия.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionParameters">
      <summary>Получает или задает параметры метода действия.</summary>
      <returns>Параметры метода действия.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.Result">
      <summary>Получает или задает результат, возвращаемый методом действия.</summary>
      <returns>Результат, возвращаемый методом действия.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionFilterAttribute">
      <summary>Представляет базовый класс для атрибутов фильтра.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Вызывается инфраструктурой MVC ASP.NET после выполнения метода действия.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Вызывается инфраструктурой MVC ASP.NET до выполнения метода действия.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Вызывается инфраструктурой MVC ASP.NET после выполнения результата действия.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Вызывается инфраструктурой MVC ASP.NET до выполнения результата действия.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionMethodSelectorAttribute">
      <summary>Представляет атрибут, влияющий на выбор метода действия.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ActionMethodSelectorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Определяет, допустим ли выбор метода действия для указанного контекста контроллера.</summary>
      <returns>Значение true, если выбор метода действия допустим в указанном контексте контроллера; в противном случае — значение false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="methodInfo">Сведения о методе действия.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionNameAttribute">
      <summary>Представляет атрибут, используемый для имени действия.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ActionNameAttribute" />.</summary>
      <param name="name">Имя действия.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Определяет, допустимо ли имя действия в указанном контексте контроллера.</summary>
      <returns>Значение true, если имя действия допустимо в указанном контексте контроллера; в противном случае — значение false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionName">Имя действия.</param>
      <param name="methodInfo">Сведения о методе действия.</param>
    </member>
    <member name="P:System.Web.Mvc.ActionNameAttribute.Name">
      <summary>Получает или задает имя действия.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionNameSelectorAttribute">
      <summary>Представляет атрибут, влияющий на выбор метода действия.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ActionNameSelectorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Определяет, допустимо ли имя действия в указанном контексте контроллера.</summary>
      <returns>Значение true, если имя действия допустимо в указанном контексте контроллера; в противном случае — значение false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionName">Имя действия.</param>
      <param name="methodInfo">Сведения о методе действия.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionResult">
      <summary>Представляет результат метода действия.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Разрешает обработку результата выполнения метода действия пользовательским типом, наследуемым от класса <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Контекст, в котором выполняется результат.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionSelector">
      <summary>Представляет делегат, который содержит логику для выбора метода действия.</summary>
    </member>
    <member name="T:System.Web.Mvc.AdditionalMetadataAttribute">
      <summary>Предоставляет класс, реализующий интерфейс <see cref="T:System.Web.Mvc.IMetadataAware" /> для поддержки дополнительных метаданных. </summary>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.#ctor(System.String,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AdditionalMetadataAttribute" />.</summary>
      <param name="name">Имя метаданных модели.</param>
      <param name="value">Значение метаданных модели.</param>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Name">
      <summary>Получает имя дополнительного атрибута метаданных.</summary>
      <returns>Имя дополнительного атрибута метаданных.</returns>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Предоставляет метаданные в процессе создания метаданных модели.</summary>
      <param name="metadata">Метаданные.</param>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.TypeId">
      <summary>Получает тип дополнительного атрибута метаданных.</summary>
      <returns>Тип дополнительного атрибута метаданных.</returns>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Value">
      <summary>Получает значение дополнительного атрибута метаданных.</summary>
      <returns>Значение дополнительного атрибута метаданных.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper">
      <summary>Представляет поддержку для визуализации HTML в сценариях AJAX в представлении.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AjaxHelper" />, используя указанные контекст представления и контейнер данных представления.</summary>
      <param name="viewContext">Контекст представления.</param>
      <param name="viewDataContainer">Контейнер данных представления.</param>
      <exception cref="T:System.ArgumentNullException">Один или оба параметра имеют значение null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AjaxHelper" />, используя указанные контекст представления, контейнер данных представления и коллекцию маршрутов.</summary>
      <param name="viewContext">Контекст представления.</param>
      <param name="viewDataContainer">Контейнер данных представления.</param>
      <param name="routeCollection">Коллекция URL-маршрутов.</param>
      <exception cref="T:System.ArgumentNullException">Один параметр или несколько имеют значение null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.GlobalizationScriptPath">
      <summary>Получает или задает корневой путь для расположения, используемого для файлов сценариев глобализации.</summary>
      <returns>Расположение папки, где хранятся файлы сценариев глобализации.Расположение по умолчанию — "~/Scripts/Globalization".</returns>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.JavaScriptStringEncode(System.String)">
      <summary>Сериализует указанное сообщение и возвращает результирующую строку в формате JSON.</summary>
      <returns>Сериализованное сообщение в виде строки формата JSON.</returns>
      <param name="message">Сериализуемое сообщение.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.RouteCollection">
      <summary>Получает коллекцию URL-маршрутов для приложения.</summary>
      <returns>Коллекция маршрутов для приложения.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewBag">
      <summary>Получает ViewBag.</summary>
      <returns>ViewBag.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewContext">
      <summary>Получает контекстную информацию о представлении.</summary>
      <returns>Контекст представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewData">
      <summary>Получает текущий словарь данных представления.</summary>
      <returns>Словарь данных представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewDataContainer">
      <summary>Получает контейнер данных представления.</summary>
      <returns>Контейнер данных представления.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper`1">
      <summary>Представляет поддержку для визуализации HTML в сценариях AJAX в строго типизированном представлении.</summary>
      <typeparam name="TModel">Тип модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AjaxHelper`1" />, используя указанные контекст представления и контейнер данных представления.</summary>
      <param name="viewContext">Контекст представления.</param>
      <param name="viewDataContainer">Контейнер данных представления.</param>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AjaxHelper`1" />, используя указанные контекст представления, контейнер данных представления и коллекцию URL-маршрутов.</summary>
      <param name="viewContext">Контекст представления.</param>
      <param name="viewDataContainer">Контейнер данных представления.</param>
      <param name="routeCollection">Коллекция URL-маршрутов.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewBag">
      <summary>Получает ViewBag.</summary>
      <returns>ViewBag.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewData">
      <summary>Получает строго типизированную версию словаря данных представления.</summary>
      <returns>Строго типизированный словарь данных представления.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxRequestExtensions">
      <summary>Представляет класс, который расширяет класс <see cref="T:System.Web.HttpRequestBase" />, добавляя возможность определения того, является ли HTTP-запрос AJAX-запросом.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxRequestExtensions.IsAjaxRequest(System.Web.HttpRequestBase)">
      <summary>Определяет, является ли указанный HTTP-запрос AJAX-запросом.</summary>
      <returns>Значение true, если указанный HTTP-запрос является AJAX-запросом; в противном случае — значение false.</returns>
      <param name="request">HTTP-запрос.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="request" /> имеет значение null (Nothing в Visual Basic).</exception>
    </member>
    <member name="T:System.Web.Mvc.AllowAnonymousAttribute">
      <summary>Представляет атрибут, с помощью контроллеры и действия можно пометить как пропускающие <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> во время авторизации.</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowAnonymousAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AllowAnonymousAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.AllowHtmlAttribute">
      <summary>Разрешает включение HTML-разметки в запрос при создании привязки модели посредством пропуска проверки запроса для данного свойства.(Настоятельно рекомендуется выполнять в приложении явную проверку всех моделей с отключенной проверкой запросов с целью недопущения несанкционированного использования скриптов.)</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AllowHtmlAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Данный метод поддерживает инфраструктуру проверки ASP.NET MVC и не предназначен для непосредственного использования из кода.</summary>
      <param name="metadata">Метаданные модели.</param>
    </member>
    <member name="T:System.Web.Mvc.AreaReference">
      <summary>Управляет интерпретацией имени контроллера при создании <see cref="T:System.Web.Mvc.RemoteAttribute" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.AreaReference.UseCurrent">
      <summary>Ищите контроллер в текущей области.</summary>
    </member>
    <member name="F:System.Web.Mvc.AreaReference.UseRoot">
      <summary>Ищите контроллер в корневой области.</summary>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistration">
      <summary>Предоставляет способ для регистрации одной и более областей в приложении MVC ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AreaRegistration" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistration.AreaName">
      <summary>Получает имя регистрируемой области.</summary>
      <returns>Имя регистрируемой области.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas">
      <summary>Регистрирует все области в приложении MVC ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas(System.Object)">
      <summary>Регистрирует все области в приложении MVC ASP.NET, используя указанные определенные пользователем сведения.</summary>
      <param name="state">Объект, содержащий определенные пользователем сведения для передачи в данную область.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
      <summary>Регистрирует область в приложении MVC ASP.NET, используя указанные сведения о контексте области.</summary>
      <param name="context">Инкапсулирует сведения, необходимые для регистрации области.</param>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistrationContext">
      <summary>Инкапсулирует сведения, необходимые для регистрации области в приложении MVC ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AreaRegistrationContext" />, используя указанные имя области и коллекцию маршрутов.</summary>
      <param name="areaName">Имя регистрируемой области.</param>
      <param name="routes">Коллекция маршрутов для приложения.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AreaRegistrationContext" />, используя указанные имя области, коллекцию маршрутов и определяемые пользователем данные.</summary>
      <param name="areaName">Имя регистрируемой области.</param>
      <param name="routes">Коллекция маршрутов для приложения.</param>
      <param name="state">Объект, содержащий определенные пользователем сведения для передачи в данную область.</param>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.AreaName">
      <summary>Получает имя регистрируемой области.</summary>
      <returns>Имя регистрируемой области.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String)">
      <summary>Сопоставляет указанный URL-маршрут и связывает его с областью, заданной свойством <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />.</summary>
      <returns>Ссылка на сопоставленный маршрут.</returns>
      <param name="name">Имя маршрута.</param>
      <param name="url">Шаблон URL-адреса для маршрута.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="url" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object)">
      <summary>Сопоставляет указанный URL-маршрут и связывает его с областью, заданной свойством <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, используя указанные значения по умолчанию маршрута.</summary>
      <returns>Ссылка на сопоставленный маршрут.</returns>
      <param name="name">Имя маршрута.</param>
      <param name="url">Шаблон URL-адреса для маршрута.</param>
      <param name="defaults">Объект, содержащий значения маршрута по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="url" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object)">
      <summary>Сопоставляет указанный URL-маршрут и связывает его с областью, заданной свойством <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, используя указанные значения по умолчанию маршрута и ограничение.</summary>
      <returns>Ссылка на сопоставленный маршрут.</returns>
      <param name="name">Имя маршрута.</param>
      <param name="url">Шаблон URL-адреса для маршрута.</param>
      <param name="defaults">Объект, содержащий значения маршрута по умолчанию.</param>
      <param name="constraints">Набор выражений, задающих допустимые значения для параметра URL-адреса.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="url" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Сопоставляет указанный URL-маршрут и связывает его с областью, заданной свойством <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, используя указанные значения по умолчанию маршрута, ограничения и пространства имен.</summary>
      <returns>Ссылка на сопоставленный маршрут.</returns>
      <param name="name">Имя маршрута.</param>
      <param name="url">Шаблон URL-адреса для маршрута.</param>
      <param name="defaults">Объект, содержащий значения маршрута по умолчанию.</param>
      <param name="constraints">Набор выражений, задающих допустимые значения для параметра URL-адреса.</param>
      <param name="namespaces">Перечислимый набор пространств имен для приложения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="url" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.String[])">
      <summary>Сопоставляет указанный URL-маршрут и связывает его с областью, заданной свойством <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, используя указанные значения по умолчанию маршрута и пространства имен.</summary>
      <returns>Ссылка на сопоставленный маршрут.</returns>
      <param name="name">Имя маршрута.</param>
      <param name="url">Шаблон URL-адреса для маршрута.</param>
      <param name="defaults">Объект, содержащий значения маршрута по умолчанию.</param>
      <param name="namespaces">Перечислимый набор пространств имен для приложения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="url" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.String[])">
      <summary>Сопоставляет указанный URL-маршрут и связывает его с областью, заданной свойством <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, используя указанные пространства имен.</summary>
      <returns>Ссылка на сопоставленный маршрут.</returns>
      <param name="name">Имя маршрута.</param>
      <param name="url">Шаблон URL-адреса для маршрута.</param>
      <param name="namespaces">Перечислимый набор пространств имен для приложения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="url" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Namespaces">
      <summary>Получает пространства имен для приложения.</summary>
      <returns>Перечислимый набор пространств имен для приложения.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Routes">
      <summary>Получает коллекцию определенных маршрутов для приложения.</summary>
      <returns>Коллекция определенных маршрутов для приложения.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.State">
      <summary>Получает объект, содержащий определенные пользователем сведения для передачи в данную область.</summary>
      <returns>Объект, содержащий определенные пользователем сведения для передачи в данную область.</returns>
    </member>
    <member name="T:System.Web.Mvc.AssociatedMetadataProvider">
      <summary>Предоставляет абстрактный класс для реализации поставщика метаданных.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.#ctor">
      <summary>Вызывается из конструкторов в производном классе, чтобы инициализировать класс <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>При переопределении в производном классе создает метаданные модели для свойства.</summary>
      <returns>Метаданные модели для свойства.</returns>
      <param name="attributes">Набор атрибутов.</param>
      <param name="containerType">Тип контейнера.</param>
      <param name="modelAccessor">Метод доступа модели.</param>
      <param name="modelType">Тип модели.</param>
      <param name="propertyName">Имя свойства.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Получает список атрибутов.</summary>
      <returns>Список атрибутов.</returns>
      <param name="containerType">Тип контейнера.</param>
      <param name="propertyDescriptor">Дескриптор свойства.</param>
      <param name="attributes">Контейнер атрибутов.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Возвращает список свойств для модели.</summary>
      <returns>Список свойств для модели.</returns>
      <param name="container">Контейнер модели.</param>
      <param name="containerType">Тип контейнера.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)">
      <summary>Возвращает метаданные для заданного свойства, используя тип контейнера и дескриптор свойства.</summary>
      <returns>Метаданные для заданного свойства с использованием типа контейнера и дескриптора свойств.</returns>
      <param name="modelAccessor">Метод доступа модели.</param>
      <param name="containerType">Тип контейнера.</param>
      <param name="propertyDescriptor">Дескриптор свойства</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Возвращает метаданные для заданного свойства, используя тип контейнера и имя свойства.</summary>
      <returns>Метаданные для заданного свойства с использованием типа контейнера и имени свойства.</returns>
      <param name="modelAccessor">Метод доступа модели.</param>
      <param name="containerType">Тип контейнера.</param>
      <param name="propertyName">Имя свойства.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Возвращает метаданные для заданного свойства, используя тип модели.</summary>
      <returns>Метаданные для заданного свойства с использованием типа модели.</returns>
      <param name="modelAccessor">Метод доступа модели.</param>
      <param name="modelType">Тип модели.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)">
      <summary>Возвращает дескриптор типа для заданного типа.</summary>
      <returns>Дескриптор типа.</returns>
      <param name="type">Тип.</param>
    </member>
    <member name="T:System.Web.Mvc.AssociatedValidatorProvider">
      <summary>Предоставляет абстрактный класс для классов, реализующих поставщик проверки.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.#ctor">
      <summary>Вызывается из конструкторов в производных классах, чтобы инициализировать класс <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>Возвращает дескриптор типа для заданного типа.</summary>
      <returns>Дескриптор типа для указанного типа.</returns>
      <param name="type">Тип поставщика проверки.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Возвращает проверяющие элементы управления для модели, используя метаданные и контекст контроллера.</summary>
      <returns>Проверяющие элементы управления для модели.</returns>
      <param name="metadata">Метаданные.</param>
      <param name="context">Контекст контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Возвращает проверяющие элементы управления для модели, используя метаданные, контекст контроллера и список атрибутов.</summary>
      <returns>Проверяющие элементы управления для модели.</returns>
      <param name="metadata">Метаданные.</param>
      <param name="context">Контекст контроллера.</param>
      <param name="attributes">Список атрибутов.</param>
    </member>
    <member name="T:System.Web.Mvc.AsyncController">
      <summary>Предоставляется для обеспечения обратной совместимости с ASP.NET MVC 3.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AsyncController" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.AsyncTimeoutAttribute">
      <summary>Представляет атрибут, используемый для установки значения времени ожидания (в миллисекундах) для асинхронного метода.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />.</summary>
      <param name="duration">Значение времени ожидания в миллисекундах.</param>
    </member>
    <member name="P:System.Web.Mvc.AsyncTimeoutAttribute.Duration">
      <summary>Получает время ожидания в миллисекундах.</summary>
      <returns>Время ожидания в миллисекундах.</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Вызывается ASP.NET до выполнения асинхронного метода действия.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="T:System.Web.Mvc.AuthorizationContext">
      <summary>Инкапсулирует сведения, необходимые для использования атрибута <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AuthorizationContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AuthorizationContext" />, используя указанный контекст контроллера.</summary>
      <param name="controllerContext">Контекст, в котором выполняется результат.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AuthorizationContext" />, используя указанные контекст контроллера и дескриптор действия.</summary>
      <param name="controllerContext">Контекст, в котором выполняется результат.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
      <param name="actionDescriptor">Объект, предоставляющий сведения о методе действия, например о его имени, контроллере, параметрах, атрибутах и фильтрах.</param>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.ActionDescriptor">
      <summary>Предоставляет сведения о методе действия, помеченном атрибутом <see cref="T:System.Web.Mvc.AuthorizeAttribute" />, например о его имени, контроллере, параметрах, атрибутах и фильтрах.</summary>
      <returns>Дескриптор действия для метода действия, помеченного атрибутом <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.Result">
      <summary>Получает или задает результат, возвращаемый методом действия.</summary>
      <returns>Результат, возвращаемый методом действия.</returns>
    </member>
    <member name="T:System.Web.Mvc.AuthorizeAttribute">
      <summary>Указывает, что доступ к контроллеру или методу действия предоставляется только пользователям, соответствующим требованиям к проверке подлинности.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.AuthorizeCore(System.Web.HttpContextBase)">
      <summary>В случае переопределения предоставляет точку входа для пользовательской проверки авторизации.</summary>
      <returns>Значение true, если пользователь авторизован. В противном случае — значение false.</returns>
      <param name="httpContext">Контекст HTTP, который инкапсулирует все НТТР-данные об индивидуальном НТТР-запросе.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="httpContext" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Обрабатывает HTTP-запрос, не прошедший авторизацию.</summary>
      <param name="filterContext">Инкапсулирует сведения для использования объекта <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.Объект <paramref name="filterContext" /> содержит контроллер, контекст HTTP, контекст запроса, результат действия и данные маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Вызывается, когда процесс запрашивает авторизацию.</summary>
      <param name="filterContext">Контекст фильтра, инкапсулирующий сведения для использования объекта <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="filterContext" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnCacheAuthorization(System.Web.HttpContextBase)">
      <summary>Вызывается, когда модуль кэширования запрашивает авторизацию.</summary>
      <returns>Ссылка на состояние проверки.</returns>
      <param name="httpContext">Контекст HTTP, который инкапсулирует все НТТР-данные об индивидуальном НТТР-запросе.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="httpContext" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Roles">
      <summary>Получает или задает роли пользователей, авторизованных для получения доступа к контроллеру или методу действия.</summary>
      <returns>Роли пользователей, авторизованных для получения доступа к контроллеру или методу действия.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.TypeId">
      <summary>Получает уникальный идентификатор этого атрибута.</summary>
      <returns>Уникальный идентификатор атрибута.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Users">
      <summary>Получает или задает пользователей, авторизованных для получения доступа к контроллеру или методу действия.</summary>
      <returns>Пользователи, авторизованные для получения доступа к контроллеру или методу действия.</returns>
    </member>
    <member name="T:System.Web.Mvc.BindAttribute">
      <summary>Представляет атрибут, служащий для предоставления сведений о том, как должна осуществляться привязка модели к параметру.</summary>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.BindAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Exclude">
      <summary>Получает или задает разделенный запятыми список имен свойств, для которых привязка не разрешена.</summary>
      <returns>Список исключения.</returns>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Include">
      <summary>Получает или задает разделенный запятыми список имен свойств, для которых привязка разрешена.</summary>
      <returns>Список включения.</returns>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.IsPropertyAllowed(System.String)">
      <summary>Определяет, разрешено ли указанное свойство.</summary>
      <returns>Значение true, если указанное свойство допустимо. В противном случае — значение false.</returns>
      <param name="propertyName">Имя свойства.</param>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Prefix">
      <summary>Получает или задает префикс, который должен использоваться при визуализации исправлений для привязки к аргументу макрокоманды или к свойству модели.</summary>
      <returns>Префикс, подлежащий использованию.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerCompiledView">
      <summary>Представляет базовый класс для представлений, скомпилированных классом BuildManager перед визуализацией в обработчике представлений.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.BuildManagerCompiledView" />, используя контекст указанного контроллера и путь к представлению.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="viewPath">Путь к представлению.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.BuildManagerCompiledView" />, используя указанный контекст контроллера, путь к представлению и активатор страницы представления.</summary>
      <param name="controllerContext">Сведения о контексте для текущего контроллера.Эти сведения включают данные об HTTP-контексте, контексте запроса, данных маршрута, контексте представления родительского действия и других параметрах.</param>
      <param name="viewPath">Путь к представлению, которое будет визуализироваться.</param>
      <param name="viewPageActivator">Объект, который отвечает за динамическое создание страницы представления во время выполнения. </param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerContext" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="viewPath" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Визуализирует указанный контекст представления, используя заданный объект модуля записи.</summary>
      <param name="viewContext">Сведения, относящиеся к визуализации представления, включая данные представления, временные данные и контекст формы.</param>
      <param name="writer">Объект модуля записи.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="viewContext" /> равен null.</exception>
      <exception cref="T:SInvalidOperationException">Не удалось создать экземпляр типа представления.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>При переопределении в производном классе визуализирует указанный контекст представления, используя указанный объект модуля записи и экземпляр объекта.</summary>
      <param name="viewContext">Сведения, относящиеся к визуализации представления, включая данные представления, временные данные и контекст формы.</param>
      <param name="writer">Объект модуля записи.</param>
      <param name="instance">Объект, содержащий дополнительные сведения, которые можно использовать в представлении.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerCompiledView.ViewPath">
      <summary>Получает или задает путь к представлению.</summary>
      <returns>Путь к представлению.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerViewEngine">
      <summary>Предоставляет базовый класс для обработчиков представлений.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.BuildManagerViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.BuildManagerViewEngine" />, используя указанный активатор страницы представления.</summary>
      <param name="viewPageActivator">Активатор страницы представления.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Получает значение, указывающее, существует ли файл в заданной виртуальной файловой системе (в указанном пути).</summary>
      <returns>Значение true, если файл существует в виртуальной файловой системе; в противном случае false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="virtualPath">Виртуальный путь.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerViewEngine.IsPrecompiledNonUpdateableSite"></member>
    <member name="P:System.Web.Mvc.BuildManagerViewEngine.ViewPageActivator">
      <summary>Получает активатор страницы представления.</summary>
      <returns>Активатор страницы представления.</returns>
    </member>
    <member name="T:System.Web.Mvc.ByteArrayModelBinder">
      <summary>Отображает запрос браузера в массив байтов.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ByteArrayModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Выполняет привязку модели, используя указанные контекст контроллера и контекст привязки.</summary>
      <returns>Объект привязанных данных.Реализации<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">Контекст, в котором функционирует контроллер.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
      <param name="bindingContext">Контекст, в котором привязана модель.Контекст содержит такие сведения, как объект модели, имя модели, тип модели, фильтр свойств и поставщик значений.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="bindingContext" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.CachedAssociatedMetadataProvider`1">
      <summary>Предоставляет абстрактный класс для реализации поставщика метаданных с кэшированием.</summary>
      <typeparam name="TModelMetadata"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.CachedAssociatedMetadataProvider`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CacheItemPolicy">
      <summary>Получает политику элемента кэша.</summary>
      <returns>Политика элемента кэша.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CacheKeyPrefix">
      <summary>Получает префикс ключа кэша.</summary>
      <returns>Префикс ключа кэша.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>При переопределении в производном классе создает метаданные кэшированной модели для свойства.</summary>
      <returns>Метаданные кэшированной модели для свойства.</returns>
      <param name="attributes">Атрибуты.</param>
      <param name="containerType">Тип контейнера.</param>
      <param name="modelAccessor">Метод доступа модели.</param>
      <param name="modelType">Тип модели.</param>
      <param name="propertyName">Имя свойства.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadataFromPrototype(`0,System.Func{System.Object})">
      <summary>Создает метаданные прототипа, применяя прототип и доступ модели для получения финальных метаданных.</summary>
      <returns>Метаданные прототипа.</returns>
      <param name="prototype">Прототип.</param>
      <param name="modelAccessor">Метод доступа модели.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Создает метаданные прототипа.</summary>
      <returns>Прототип метаданных.</returns>
      <param name="attributes">Атрибуты.</param>
      <param name="containerType">Тип контейнера.</param>
      <param name="modelType">Тип модели.</param>
      <param name="propertyName">Имя свойства.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Получает метаданные для свойств.</summary>
      <returns>Метаданные для свойств.</returns>
      <param name="container">Контейнер.</param>
      <param name="containerType">Тип контейнера.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)">
      <summary>Возвращает метаданные для заданного свойства.</summary>
      <returns>Метаданные для указанного свойства.</returns>
      <param name="modelAccessor">Метод доступа модели.</param>
      <param name="containerType">Тип контейнера.</param>
      <param name="propertyDescriptor">Дескриптор свойства.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Возвращает метаданные для заданного свойства.</summary>
      <returns>Метаданные для указанного свойства.</returns>
      <param name="modelAccessor">Метод доступа модели.</param>
      <param name="containerType">Тип контейнера.</param>
      <param name="propertyName">Имя свойства.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Возвращает кэшированное метаданные для заданного свойства, используя тип модели.</summary>
      <returns>Кэшированные метаданные для заданного свойства с использованием типа модели.</returns>
      <param name="modelAccessor">Метод доступа модели.</param>
      <param name="modelType">Тип контейнера.</param>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.PrototypeCache">
      <summary>Получает прототип кэша.</summary>
      <returns>Прототип кэша.</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes">
      <summary>Предоставляет контейнер для кэширования атрибутов <see cref="N:System.ComponentModel.DataAnnotations" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.#ctor(System.Attribute[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes" />.</summary>
      <param name="attributes">Атрибуты.</param>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DataType">
      <summary>Получает тип данных.</summary>
      <returns>Тип данных.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Display">
      <summary>Возвращает отображение.</summary>
      <returns>Отображение.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayColumn">
      <summary>Возвращает столбец отображения.</summary>
      <returns>Столбец отображения.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayFormat">
      <summary>Возвращает формат отображения.</summary>
      <returns>Формат отображения.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayName">
      <summary>Получает отображаемое имя.</summary>
      <returns>Отображаемое имя.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Editable">
      <summary>Указывает, допускает ли поле данных редактирование.</summary>
      <returns>Значение true, если поле редактируется. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.HiddenInput">
      <summary>Возвращает скрытый элемент ввода.</summary>
      <returns>Скрытый элемент ввода.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.ReadOnly">
      <summary>Указывает, является ли поле данных доступным только для чтения.</summary>
      <returns>Значение true, если поле доступно только для чтения. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Required">
      <summary>Указывает, является ли поле данных обязательным.</summary>
      <returns>Значение true, если поле обязательно. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.ScaffoldColumn">
      <summary>Указывает, использует ли поле данных формирование шаблонов.</summary>
      <returns>Значение true, если поле использует формирование шаблонов. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.UIHint">
      <summary>Возвращает подсказку пользовательского интерфейса.</summary>
      <returns>Подсказка пользовательского интерфейса.</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata">
      <summary>Предоставляет контейнер для кэширования <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadata" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />, используя прототип и метод доступа к модели.</summary>
      <param name="prototype">Прототип.</param>
      <param name="modelAccessor">Метод доступа модели.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" /> с помощью поставщика, типа контейнера, типа модели, имени свойства и атрибутов.</summary>
      <param name="provider">Поставщик.</param>
      <param name="containerType">Тип контейнера.</param>
      <param name="modelType">Тип модели.</param>
      <param name="propertyName">Имя свойства.</param>
      <param name="attributes">Атрибуты.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeConvertEmptyStringToNull">
      <summary>Получает значение, указывающее, должны ли преобразовываться пустые строки, которые передаются обратно в формы, в значение Nothing.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Значение, указывающее, должны ли преобразовываться пустые строки, которые передаются обратно в формы, в значение Nothing. </returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDataTypeName">
      <summary>Получает метаданные о типе данных.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Метаданные о типе данных.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDescription">
      <summary>Получает описание модели.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Описание модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDisplayFormatString">
      <summary>Получает строку формата отображения для модели.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Строка формата отображения для модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDisplayName">
      <summary>Получает отображаемое имя для модели.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Отображаемое имя модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeEditFormatString">
      <summary>Получает строку формата правки для модели.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Строка формата правки для модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHasNonDefaultEditFormat">
      <summary>Получает значение, указывающее, использует ли модель формат правки, не являющийся используемым по умолчанию.</summary>
      <returns>Значение, указывающее, используется ли формат правки, не являющийся используемым по умолчанию.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHideSurroundingHtml">
      <summary>Получает значение, указывающее, должен ли объект модели визуализироваться с помощью связанных HTML-элементов.Получает значение, указывающее, должен ли объект модели визуализироваться с помощью связанных HTML-элементов.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Значение, указывающее, должен ли объект модели визуализироваться с помощью связанных HTML-элементов.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHtmlEncode"></member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeIsReadOnly">
      <summary>Получает значение, указывающее, доступна ли модель только для чтения.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Значение, указывающее, действительно ли модель доступна только для чтения.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeIsRequired">
      <summary>Получает значение, указывающее, действительно ли модель обязательна.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Значение, указывающее, действительно ли модель обязательна.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeNullDisplayText">
      <summary>Получает строку для отображения значений NULL.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Строка для отображения значений NULL.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeOrder">
      <summary>Получает значение, представляющее порядок текущих метаданных.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Значение, представляющее порядок текущих метаданных.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShortDisplayName">
      <summary>Получает короткое отображаемое имя.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Короткое отображаемое имя.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShowForDisplay">
      <summary>Получает значение, которое указывает, должно ли данное свойство отображаться в представлениях, доступных только для чтения, таких как представление списка или подробное представление.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Значение, которое указывает, должно ли данное свойство отображаться в представлениях, доступных только для чтения, таких как представление списка или подробное представление.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShowForEdit">
      <summary>Получает или задает значение, показывающее, должна ли отображаться модель в доступных для изменения представлениях.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeSimpleDisplayText">
      <summary>Получает строку простого отображения для модели.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Строка простого отображения для модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeTemplateHint">
      <summary>Получает подсказку с указанием, какой шаблон рекомендуется использовать для данной модели.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Подсказка с указанием, какой шаблон рекомендуется использовать для данной модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeWatermark">
      <summary>Получает значение, которое можно использовать в качестве водяного знака.Если значение кэшируется, возвращается кэшированное значение; в противном случае значение извлекается из модели метаданных и сохраняется в кэше.</summary>
      <returns>Значение, которое можно использовать в качестве водяного знака.</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider">
      <summary>Реализует поставщик метаданных модели по умолчанию с кэшированием для ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Mvc.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Возвращает контейнер реальных экземпляров класса кэшированных метаданных на основе прототипа и метода доступа модели.</summary>
      <returns>Контейнер реальных экземпляров класса кэшированных метаданных.</returns>
      <param name="prototype">Прототип.</param>
      <param name="modelAccessor">Метод доступа модели.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Возвращает контейнер прототипов-экземпляров класса метаданных.</summary>
      <returns>Контейнер прототипов-экземпляров класса метаданных.</returns>
      <param name="attributes">Тип атрибутов.</param>
      <param name="containerType">Тип контейнера.</param>
      <param name="modelType">Тип модели.</param>
      <param name="propertyName">Имя свойства.</param>
    </member>
    <member name="T:System.Web.Mvc.CachedModelMetadata`1">
      <summary>Предоставляет контейнер для метаданных из кэша.</summary>
      <typeparam name="TPrototypeCache">Тип контейнера.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,`0)">
      <summary>Конструктор для создание реальных экземпляров класса метаданных на основе прототипа.</summary>
      <param name="provider">Поставщик.</param>
      <param name="containerType">Тип контейнера.</param>
      <param name="modelType">Тип модели.</param>
      <param name="propertyName">Имя свойства.</param>
      <param name="prototypeCache">Прототип.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.#ctor(System.Web.Mvc.CachedModelMetadata{`0},System.Func{System.Object})">
      <summary>Конструктор для создания прототипов экземпляров класса метаданных.</summary>
      <param name="prototype">Прототип.</param>
      <param name="modelAccessor">Метод доступа модели.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeConvertEmptyStringToNull">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает кэшированное значение, указывающее, должны ли преобразовываться пустые строки, которые передаются обратно в формы, в значение null.</summary>
      <returns>Кэшированное значение, указывающее, должны ли преобразовываться пустые строки, которые передаются обратно в формы, в значение null.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDataTypeName">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает метаданные о типе данных.</summary>
      <returns>Метаданные о типе данных.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDescription">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает описание модели.</summary>
      <returns>Описание модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDisplayFormatString">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает строку формата отображения для модели.</summary>
      <returns>Строка формата отображения для модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDisplayName">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает отображаемое имя модели.</summary>
      <returns>Отображаемое имя модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeEditFormatString">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает строку формата правки для модели.</summary>
      <returns>Строка формата правки для модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHasNonDefaultEditFormat">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.</summary>
      <returns>Значение, указывающее, используется ли формат правки, не являющийся используемым по умолчанию.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHideSurroundingHtml">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает кэшированное значение, указывающее, должен ли объект модели визуализироваться с помощью связанных HTML-элементов.</summary>
      <returns>Кэшированное значение, указывающее, должен ли объект модели визуализироваться с помощью связанных HTML-элементов.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHtmlEncode"></member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeIsReadOnly">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает кэшированное значение, указывающее, является ли модель доступной только для чтения.</summary>
      <returns>Кэшированное значение, указывающее, действительно ли модель доступна только для чтения.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeIsRequired">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает кэшированное значение, указывающее, является ли модель обязательной.</summary>
      <returns>Кэшированное значение, указывающее, действительно ли модель обязательна.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeNullDisplayText">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает кэшированную строку для значений NULL.</summary>
      <returns>Кэшированная строка для отображения значений NULL.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeOrder">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает кэшированное значение, представляющее порядок текущих метаданных.</summary>
      <returns>Кэшированное значение, представляющее порядок текущих метаданных.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShortDisplayName">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает короткое отображаемое имя.</summary>
      <returns>Короткое отображаемое имя.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShowForDisplay">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает кэшированное значение, которое указывает, должно ли данное свойство отображаться в представлениях, доступных только для чтения, таких как представление списка или подробное представление.</summary>
      <returns>Кэшированное значение, которое указывает, должно ли данное свойство отображаться в представлениях, доступных только для чтения, таких как представление списка или подробное представление.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShowForEdit">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает кэшированное значение, показывающее, должна ли отображаться модель в доступных для изменения представлениях.</summary>
      <returns>Кэшированное значение, показывающее, должна ли отображаться модель в доступных для изменения представлениях.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeSimpleDisplayText">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает кэшированную строку простого отображения для модели.</summary>
      <returns>Кэшированная строка простого отображения для модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeTemplateHint">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает кэшированную подсказку, в которой указывается, какой шаблон рекомендуется использовать для данной модели.</summary>
      <returns>Кэшированная подсказка с указанием, какой шаблон рекомендуется использовать для данной модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeWatermark">
      <summary>Этот метод защищен и не может быть вызван напрямую.Этот метод предназначен для переопределения в производном классе, например <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Получает или задает кэшированное значение, которое может использоваться как водяной знак.</summary>
      <returns>Кэшированное значение, которое можно использовать в качестве водяного знака.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ConvertEmptyStringToNull">
      <summary>Получает или задает кэшированное значение, указывающее, должны ли преобразовываться пустые строки, которые передаются обратно в формы, в значение NULL.</summary>
      <returns>Кэшированное значение, указывающее, должны ли преобразовываться пустые строки, которые передаются обратно в формы, в значение NULL.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DataTypeName">
      <summary>Получает или задает метаданные о типе данных.</summary>
      <returns>Метаданные о типе данных.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Description">
      <summary>Получает или задает описание модели.</summary>
      <returns>Описание модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DisplayFormatString">
      <summary>Получает или задает строку формата отображения для модели.</summary>
      <returns>Строка формата отображения для модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DisplayName">
      <summary>Получает или задает отображаемое имя модели.</summary>
      <returns>Отображаемое имя модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.EditFormatString">
      <summary>Получает или задает строку формата правки для модели.</summary>
      <returns>Строка формата правки для модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.GetSimpleDisplayText">
      <summary>Получает или задает строку простого отображения для модели.</summary>
      <returns>Строка простого отображения для модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.HideSurroundingHtml">
      <summary>Получает или задает значение, указывающее, должен ли объект модели визуализироваться с помощью связанных HTML-элементов.</summary>
      <returns>Значение, указывающее, должен ли объект модели визуализироваться с помощью связанных HTML-элементов.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.HtmlEncode"></member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.IsReadOnly">
      <summary>Получает или задает значение, указывающее, является ли модель доступной только для чтения.</summary>
      <returns>Значение, указывающее, действительно ли модель доступна только для чтения.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.IsRequired">
      <summary>Получает или задает значение, указывающее, является ли модель обязательной.</summary>
      <returns>Значение, указывающее, действительно ли модель обязательна.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.NullDisplayText">
      <summary>Получает или задает строку для отображения значений NULL.</summary>
      <returns>Строка для отображения значений NULL.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Order">
      <summary>Получает или задает значение, представляющее порядок текущих метаданных.</summary>
      <returns>Значение порядка текущих метаданных.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.PrototypeCache">
      <summary>Возвращает или задает прототип кэша.</summary>
      <returns>Прототип кэша.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShortDisplayName">
      <summary>Получает или задает короткое отображаемое имя.</summary>
      <returns>Короткое отображаемое имя.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShowForDisplay">
      <summary>Получает или задает значение, которое указывает, должно ли данное свойство отображаться в представлениях, доступных только для чтения, таких как представление списка или подробное представление.</summary>
      <returns>Значение true, если модель должна отображаться в режиме "только для чтения". В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShowForEdit">
      <summary>Получает или задает значение, показывающее, должна ли отображаться модель в доступных для изменения представлениях.</summary>
      <returns>Значение true, если модель должна отображаться в режиме, допускающем изменение. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.SimpleDisplayText">
      <summary>Получает или задает строку простого отображения для модели.</summary>
      <returns>Строка простого отображения для модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.TemplateHint">
      <summary>Получает или задает подсказку, в которой указывается, какой шаблон рекомендуется использовать для данной модели.</summary>
      <returns>Подсказка с указанием, какой шаблон рекомендуется использовать для данной модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Watermark">
      <summary>Получает или задает значение, которое может использоваться как водяной знак.</summary>
      <returns>Значение, которое можно использовать в качестве водяного знака.</returns>
    </member>
    <member name="T:System.Web.Mvc.CancellationTokenModelBinder">
      <summary>Предоставляет механизм, позволяющий распространять уведомления о том, что операции связывателя модели должны быть отменены.</summary>
    </member>
    <member name="M:System.Web.Mvc.CancellationTokenModelBinder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.CancellationTokenModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CancellationTokenModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Возвращает маркер отмены по умолчанию.</summary>
      <returns>Маркер отмены по умолчанию.Реализации<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="bindingContext">Контекст привязки.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionOnlyAttribute">
      <summary>Представляет атрибут, используемый для указания того, что метод действия должен вызываться только как дочернее действие.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ChildActionOnlyAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Вызывается, когда требуется авторизация.</summary>
      <param name="filterContext">Объект, инкапсулирующий сведения, необходимые для разрешения доступа к дочернему действию.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProvider">
      <summary>Представляет поставщик значений для значений из дочерних действий.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ChildActionValueProvider" />.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.GetValue(System.String)">
      <summary>Извлекает объект значения, используя указанный ключ.</summary>
      <returns>Объект значения для заданного ключа.</returns>
      <param name="key">Ключ.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProviderFactory">
      <summary>Представляет фабрику для создания объектов поставщиков значений для дочерних действий.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ChildActionValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Возвращает объект <see cref="T:System.Web.Mvc.ChildActionValueProvider" /> для заданного контекста контроллера.</summary>
      <returns>Объект <see cref="T:System.Web.Mvc.ChildActionValueProvider" />.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
    </member>
    <member name="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider">
      <summary>Возвращает проверяющие элементы управления модели для типа клиентских данных.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Возвращает проверяющие элементы управления модели для типа клиентских данных.</summary>
      <returns>Проверяющие элементы управления модели для типов клиентских данных.</returns>
      <param name="metadata">Метаданные.</param>
      <param name="context">Контекст.</param>
    </member>
    <member name="P:System.Web.Mvc.ClientDataTypeModelValidatorProvider.ResourceClassKey">
      <summary>Получает ключ класса ресурсов.</summary>
      <returns>Ключ класса ресурсов.</returns>
    </member>
    <member name="T:System.Web.Mvc.CompareAttribute">
      <summary>Предоставляет атрибут, сравнивающий два свойства модели.</summary>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.CompareAttribute" />.</summary>
      <param name="otherProperty">Свойство, сравниваемое с текущим свойством.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatErrorMessage(System.String)">
      <summary>Применяет к сообщению об ошибке форматирование на основе поля данных, в котором произошла ошибка сравнения.</summary>
      <returns>Форматированное сообщение об ошибке.</returns>
      <param name="name">Имя поля, ставшего причиной сбоя при проверке.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Форматирует свойство для клиентской проверки, добавляя в начало символ звездочки (*) и точку.</summary>
      <returns>Строка "*." добавляется в начало свойства.</returns>
      <param name="property">Свойство.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Получает список правил проверки клиента для сравнения значений для свойства с использованием указанных метаданных модели и контекста контроллера.</summary>
      <returns>Список правил проверки клиента для сравнения значений.</returns>
      <param name="metadata">Метаданные модели.</param>
      <param name="context">Контекст контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Определяет, равен ли заданный объект сравниваемому объекту.</summary>
      <returns>Значение null, если значение сравниваемого свойства равно значению параметра; в противном случае результат проверки, который содержит сообщение об ошибке, указывающее на то, что сравнение завершилось с ошибкой.</returns>
      <param name="value">Значение сравниваемого объекта.</param>
      <param name="validationContext">Контекст проверки.</param>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherProperty">
      <summary>Получает свойство, сравниваемое с текущим свойством.</summary>
      <returns>Свойство, сравниваемое с текущим свойством.</returns>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherPropertyDisplayName">
      <summary>Получает отображаемое имя других свойств.</summary>
      <returns>Отображаемое имя других свойств.</returns>
    </member>
    <member name="T:System.Web.Mvc.ContentResult">
      <summary>Представляет определенный пользователем тип содержимого, являющийся результатом выполнения метода действия.</summary>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ContentResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.Content">
      <summary>Получает или задает содержимое.</summary>
      <returns>Содержимое.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentEncoding">
      <summary>Получает или задает кодировку содержимого.</summary>
      <returns>Кодировка содержимого.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentType">
      <summary>Получает или задает тип содержимого.</summary>
      <returns>Тип содержимого.</returns>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Разрешает обработку результата выполнения метода действия пользовательским типом, наследуемым от класса <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Контекст, в котором выполняется результат.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Controller">
      <summary>Предоставляет методы, реагирующие на HTTP-запросы, направляемые на веб-сайт MVC ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Controller" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Controller.ActionInvoker">
      <summary>Получает средство вызова действий для контроллера.</summary>
      <returns>Средство вызова действий.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.AsyncManager">
      <summary>Обеспечивает асинхронные операции.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Mvc.Async.AsyncManager" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Начинает выполнение указанного контекста запроса</summary>
      <returns>Возвращает экземпляр IAsyncController.</returns>
      <param name="requestContext">Контекст запроса.</param>
      <param name="callback">Асинхронный обратный вызов.</param>
      <param name="state">Состояние.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)">
      <summary>Начинает вызов действия в текущем контексте контроллера.</summary>
      <returns>Возвращает экземпляр IAsyncController.</returns>
      <param name="callback">Обратный вызов.</param>
      <param name="state">Состояние.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Binders">
      <summary>Получает или задает связыватель.</summary>
      <returns>Связыватель.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String)">
      <summary>Создает результирующий объект содержимого, используя строку.</summary>
      <returns>Экземпляр результирующего содержимого.</returns>
      <param name="content">Содержимое, записываемое в ответ.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String)">
      <summary>Создает результирующий объект содержимого, используя строку и тип содержимого.</summary>
      <returns>Экземпляр результирующего содержимого.</returns>
      <param name="content">Содержимое, записываемое в ответ.</param>
      <param name="contentType">Тип содержимого (тип MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)">
      <summary>Создает результирующий объект содержимого, используя строку, тип содержимого и кодировку содержимого.</summary>
      <returns>Экземпляр результирующего содержимого.</returns>
      <param name="content">Содержимое, записываемое в ответ.</param>
      <param name="contentType">Тип содержимого (тип MIME).</param>
      <param name="contentEncoding">Кодировка содержимого.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateActionInvoker">
      <summary>Создает средство вызова действий.</summary>
      <returns>Средство вызова действий.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateTempDataProvider">
      <summary>Создает поставщика временных данных.</summary>
      <returns>Поставщик временных данных.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.DisableAsyncSupport">
      <summary>Определяет, следует ли отключить поддержку асинхронных операций для контроллера.</summary>
      <returns>Значение true, чтобы отключить поддержку асинхронных операций для контроллера; в противном случае — false.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Web.Mvc.Controller" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые и, если указано, управляемые ресурсы.</summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)">
      <summary>Заканчивает вызов действия в текущем контексте контроллера.</summary>
      <param name="asyncResult">Асинхронный результат.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)">
      <summary>Завершает ядро выполнения.</summary>
      <param name="asyncResult">Асинхронный результат.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ExecuteCore">
      <summary>Вызывает действие в текущем контексте контроллера.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String)">
      <summary>Создает объект FileContentResult, используя содержимое файла и тип файла.</summary>
      <returns>Результирующий объект содержимого файла.</returns>
      <param name="fileContents">Двоичное содержимое, отправляемое в ответ.</param>
      <param name="contentType">Тип содержимого (тип MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)">
      <summary>Создает объект FileContentResult, используя содержимое файла, тип содержимого и имя конечного файла.</summary>
      <returns>Результирующий объект содержимого файла.</returns>
      <param name="fileContents">Двоичное содержимое, отправляемое в ответ.</param>
      <param name="contentType">Тип содержимого (тип MIME).</param>
      <param name="fileDownloadName">Имя файла для использования в диалоговом окне загрузки файла, отображаемом в браузере.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String)">
      <summary>Создает объект FileStreamResult, используя объект Stream и тип содержимого.</summary>
      <returns>Результирующий объект содержимого файла.</returns>
      <param name="fileStream">Поток, отправляемый в ответ.</param>
      <param name="contentType">Тип содержимого (тип MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)">
      <summary>Создает объект FileStreamResult, используя объект Stream, тип содержимого и имя конечного файла.</summary>
      <returns>Результирующий объект файлового потока.</returns>
      <param name="fileStream">Поток, отправляемый в ответ.</param>
      <param name="contentType">Тип содержимого (тип MIME).</param>
      <param name="fileDownloadName">Имя файла для использования в диалоговом окне загрузки файла, отображаемом в браузере.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String)">
      <summary>Создает объект FilePathResult, используя имя файла и тип содержимого.</summary>
      <returns>Результирующий объект файлового потока.</returns>
      <param name="fileName">Путь к файлу для отправки в ответ.</param>
      <param name="contentType">Тип содержимого (тип MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String,System.String)">
      <summary>Создает объект FilePathResult, используя имя файла, тип содержимого и имя загрузки файла.</summary>
      <returns>Результирующий объект файлового потока.</returns>
      <param name="fileName">Путь к файлу для отправки в ответ.</param>
      <param name="contentType">Тип содержимого (тип MIME).</param>
      <param name="fileDownloadName">Имя файла для использования в диалоговом окне загрузки файла, отображаемом в браузере.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.HandleUnknownAction(System.String)">
      <summary>Вызывается, когда запрос соответствует этому контроллеру, но в контроллере не найден метод с указанным именем действия.</summary>
      <param name="actionName">Имя действия, которое требовалось выполнить.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.HttpContext">
      <summary>Получает связанные с НТТР сведения об индивидуальном НТТР-запросе.</summary>
      <returns>Контекст HTTP.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound">
      <summary>Возвращает экземпляр класса <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound(System.String)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</returns>
      <param name="statusDescription">Описание состояния.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)">
      <summary>Инициализирует данные, которые могут быть недоступны на момент вызова конструктора.</summary>
      <param name="requestContext">Контекст HTTP и данные маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.JavaScript(System.String)">
      <summary>Создает объект <see cref="T:System.Web.Mvc.JavaScriptResult" />.</summary>
      <returns>Объект <see cref="T:System.Web.Mvc.JavaScriptResult" />, записывающий скрипт в ответ.</returns>
      <param name="script">Код JavaScript для выполнения на клиенте.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object)">
      <summary>Создает объект <see cref="T:System.Web.Mvc.JsonResult" />, который сериализует указанный объект в нотацию объектов JavaScript (JSON).</summary>
      <returns>Результирующий объект JSON, который сериализует указанный объект в формат JSON.Результирующий объект, подготовленный данным методом, записывается в ответ платформой ASP.NET MVC при выполнении этого объекта.</returns>
      <param name="data">Граф объекта JavaScript, сериализацию которого необходимо выполнить.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String)">
      <summary>Создает объект <see cref="T:System.Web.Mvc.JsonResult" />, который сериализует указанный объект в формат нотации объектов JavaScript (JSON).</summary>
      <returns>Результирующий объект JSON, который сериализует указанный объект в формат JSON.</returns>
      <param name="data">Граф объекта JavaScript, сериализацию которого необходимо выполнить.</param>
      <param name="contentType">Тип содержимого (тип MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)">
      <summary>Создает объект <see cref="T:System.Web.Mvc.JsonResult" />, который сериализует указанный объект в формат нотации объектов JavaScript (JSON).</summary>
      <returns>Результирующий объект JSON, который сериализует указанный объект в формат JSON.</returns>
      <param name="data">Граф объекта JavaScript, сериализацию которого необходимо выполнить.</param>
      <param name="contentType">Тип содержимого (тип MIME).</param>
      <param name="contentEncoding">Кодировка содержимого.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Создает объект <see cref="T:System.Web.Mvc.JsonResult" />, сериализующий указанный объект в формат JavaScript Object Notation (JSON) с использованием типа содержимого, кодировки содержимого и поведения JSON-запроса.</summary>
      <returns>Результирующий объект, который сериализует указанный объект в формат JSON.</returns>
      <param name="data">Граф объекта JavaScript, сериализацию которого необходимо выполнить.</param>
      <param name="contentType">Тип содержимого (тип MIME).</param>
      <param name="contentEncoding">Кодировка содержимого.</param>
      <param name="behavior">Поведение JSON-запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Создает объект <see cref="T:System.Web.Mvc.JsonResult" />, сериализующий указанный объект в формат JavaScript Object Notation (JSON) с использованием указанных типа содержимого и поведения JSON-запроса.</summary>
      <returns>Результирующий объект, который сериализует указанный объект в формат JSON.</returns>
      <param name="data">Граф объекта JavaScript, сериализацию которого необходимо выполнить.</param>
      <param name="contentType">Тип содержимого (тип MIME).</param>
      <param name="behavior">Поведение JSON-запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Создает объект JsonResult, сериализующий указанный объект в формат JavaScript Object Notation (JSON) с использованием указанного поведения JSON-запроса.</summary>
      <returns>Результирующий объект, который сериализует указанный объект в формат JSON.</returns>
      <param name="data">Граф объекта JavaScript, сериализацию которого необходимо выполнить.</param>
      <param name="behavior">Поведение JSON-запроса.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ModelState">
      <summary>Получает объект словаря состояния модели, содержащий состояние модели и проверку привязки модели.</summary>
      <returns>Словарь состояния модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Вызывается после вызова метода действия.</summary>
      <param name="filterContext">Сведения о текущем запросе и действии.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Вызывается перед вызовом метода действия.</summary>
      <param name="filterContext">Сведения о текущем запросе и действии.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>Вызывается при выполнении авторизации.</summary>
      <param name="filterContext">Сведения о текущем запросе и действии.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>Вызывается при запросе авторизации.</summary>
      <param name="filterContext">Сведения о текущем запросе и действии.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Вызывается при выполнении авторизации.</summary>
      <param name="filterContext">Сведения о текущем запросе и действии.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Вызывается, когда в действии происходит необработанное исключение.</summary>
      <param name="filterContext">Сведения о текущем запросе и действии.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Вызывается после выполнения результата действия, возвращенного методом действия.</summary>
      <param name="filterContext">Сведения о текущем запросе и результате действия.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Вызывается перед выполнением результата действия, возвращенного методом действия.</summary>
      <param name="filterContext">Сведения о текущем запросе и результате действия.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView">
      <summary>Создает объект <see cref="T:System.Web.Mvc.PartialViewResult" />, выполняющий визуализацию частичного представления.</summary>
      <returns>Объект результата частичного представления.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.Object)">
      <summary>Создает объект <see cref="T:System.Web.Mvc.PartialViewResult" />, выполняющий визуализацию частичного представления, используя заданную модель.</summary>
      <returns>Объект результата частичного представления.</returns>
      <param name="model">Модель, которая визуализируется частичным представлением.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String)">
      <summary>Создает объект <see cref="T:System.Web.Mvc.PartialViewResult" />, выполняющий визуализацию частичного представления, используя заданное имя представления.</summary>
      <returns>Объект результата частичного представления.</returns>
      <param name="viewName">Имя представления, отображаемого для запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String,System.Object)">
      <summary>Создает объект <see cref="T:System.Web.Mvc.PartialViewResult" />, выполняющий визуализацию частичного представления, используя заданное имя представления и модель.</summary>
      <returns>Объект результата частичного представления.</returns>
      <param name="viewName">Имя представления, отображаемого для запроса.</param>
      <param name="model">Модель, которая визуализируется частичным представлением.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Profile">
      <summary>Получает профиль HTTP-контекста.</summary>
      <returns>Профиль HTTP-контекста.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Redirect(System.String)">
      <summary>Создает объект <see cref="T:System.Web.Mvc.RedirectResult" />, перенаправляющий на указанный URL-адрес.</summary>
      <returns>Результирующий объект перенаправления.</returns>
      <param name="url">URL-адрес, на который выполняется перенаправление.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectPermanent(System.String)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Web.Mvc.RedirectResult" /> со свойством Permanent, имеющим значение true.</summary>
      <returns>Экземпляр класса <see cref="T:System.Web.Mvc.RedirectResult" /> со свойством Permanent, имеющим значение "true".</returns>
      <param name="url">URL-адрес, на который выполняется перенаправление.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String)">
      <summary>Перенаправляет заданное действие, используя имя действия.</summary>
      <returns>Результирующий объект перенаправления.</returns>
      <param name="actionName">Имя действия.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)">
      <summary>Перенаправляет заданное действие, используя имя действия и значения маршрута.</summary>
      <returns>Результирующий объект перенаправления.</returns>
      <param name="actionName">Имя действия.</param>
      <param name="routeValues">Параметры маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)">
      <summary>Перенаправляет заданное действие, используя имя действия и имя контроллера.</summary>
      <returns>Результирующий объект перенаправления.</returns>
      <param name="actionName">Имя действия.</param>
      <param name="controllerName">Имя контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)">
      <summary>Перенаправляет заданное действие, используя имя действия, имя контроллера и словарь маршрута.</summary>
      <returns>Результирующий объект перенаправления.</returns>
      <param name="actionName">Имя действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Параметры маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Перенаправляет заданное действие, используя имя действия, имя контроллера и значения маршрута.</summary>
      <returns>Результирующий объект перенаправления.</returns>
      <param name="actionName">Имя действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Параметры маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Перенаправляет заданное действие, используя имя действия и словарь маршрута.</summary>
      <returns>Результирующий объект перенаправления.</returns>
      <param name="actionName">Имя действия.</param>
      <param name="routeValues">Параметры маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Web.Mvc.RedirectResult" /> со свойством Permanent, имеющим значение "true", используя заданное имя действия.</summary>
      <returns>Экземпляр класса <see cref="T:System.Web.Mvc.RedirectResult" /> со свойством Permanent, имеющим значение true и использующим указанные имя действия, имя контроллера и значения маршрута.</returns>
      <param name="actionName">Имя действия.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Web.Mvc.RedirectResult" />, для свойства Permanent которого задано значение true, с использованием указанного имени действия и значений маршрута.</summary>
      <returns>Экземпляр <see cref="T:System.Web.Mvc.RedirectResult" /> класса, для свойства Permanent которого задано значение true, с использованием указанного имени действия и значений маршрута.</returns>
      <param name="actionName">Имя действия.</param>
      <param name="routeValues">Значения маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Web.Mvc.RedirectResult" />, для свойства Permanent которого задано значение true, используя указанные имя действия и имя контроллера.</summary>
      <returns>Экземпляр класса <see cref="T:System.Web.Mvc.RedirectResult" /> со свойством Permanent, имеющим значение true, использующий указанные имя действия и имя контроллера.</returns>
      <param name="actionName">Имя действия.</param>
      <param name="controllerName">Имя контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Web.Mvc.RedirectResult" /> со свойством Permanent, имеющим значение true, используя указанные имя действия, имя контроллера и значения маршрута.</summary>
      <returns>Экземпляр класса <see cref="T:System.Web.Mvc.RedirectResult" /> со свойством Permanent, имеющим значение true и использующим указанные имя действия, имя контроллера и значения маршрута.</returns>
      <param name="actionName">Имя действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Значения маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Web.Mvc.RedirectResult" /> со свойством Permanent, имеющим значение true, используя указанные имя действия, имя контроллера и значения маршрута.</summary>
      <returns>Экземпляр класса <see cref="T:System.Web.Mvc.RedirectResult" /> со свойством Permanent, имеющим значение true и использующим указанные имя действия, имя контроллера и значения маршрута.</returns>
      <param name="actionName">Имя действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Значения маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Web.Mvc.RedirectResult" />, для свойства Permanent которого задано значение true, с использованием указанного имени действия и значений маршрута.</summary>
      <returns>Экземпляр <see cref="T:System.Web.Mvc.RedirectResult" /> класса, для свойства Permanent которого задано значение true, с использованием указанного имени действия и значений маршрута.</returns>
      <param name="actionName">Имя действия.</param>
      <param name="routeValues">Значения маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Object)">
      <summary>Перенаправляет на заданный маршрут, используя заданные значения маршрута.</summary>
      <returns>Результирующий объект перенаправления на маршрут.</returns>
      <param name="routeValues">Параметры маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String)">
      <summary>Перенаправляет на заданный маршрут, используя имя маршрута.</summary>
      <returns>Результирующий объект перенаправления на маршрут.</returns>
      <param name="routeName">Имя маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)">
      <summary>Перенаправляет на заданный маршрут, используя имя маршрута и значения маршрута.</summary>
      <returns>Результирующий объект перенаправления на маршрут.</returns>
      <param name="routeName">Имя маршрута.</param>
      <param name="routeValues">Параметры маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Перенаправляет на заданный маршрут, используя имя маршрута и словарь маршрута.</summary>
      <returns>Результирующий объект перенаправления на маршрут.</returns>
      <param name="routeName">Имя маршрута.</param>
      <param name="routeValues">Параметры маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
      <summary>Перенаправляет на заданный маршрут, используя заданный словарь маршрута.</summary>
      <returns>Результирующий объект перенаправления на маршрут.</returns>
      <param name="routeValues">Параметры маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)">
      <summary>Возвращает экземпляр класса RedirectResult со свойством Permanent, имеющим значение «true», используя заданные значения маршрута.</summary>
      <returns>Возвращает экземпляр класса RedirectResult со свойством Permanent, имеющим значение «true».</returns>
      <param name="routeValues">Имя маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)">
      <summary>Возвращает экземпляр класса RedirectResult со свойством Permanent, имеющим значение «true», используя заданное имя маршрута.</summary>
      <returns>Возвращает экземпляр класса RedirectResult со свойством Permanent, имеющим значение «true», используя заданное имя маршрута.</returns>
      <param name="routeName">Имя маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)">
      <summary>Возвращает экземпляр класса RedirectResult со свойством Permanent, имеющим значение «true», используя заданное имя маршрута и значения маршрута.</summary>
      <returns>Экземпляр класса RedirectResult со свойством Permanent, имеющим значение «true», использующий заданное имя маршрута и значения маршрута.</returns>
      <param name="routeName">Имя маршрута.</param>
      <param name="routeValues">Значения маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Возвращает экземпляр класса RedirectResult со свойством Permanent, имеющим значение «true», используя заданное имя маршрута и значения маршрута.</summary>
      <returns>Экземпляр класса RedirectResult со свойством Permanent, имеющим значение «true».</returns>
      <param name="routeName">Имя маршрута.</param>
      <param name="routeValues">Значения маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
      <summary>Возвращает экземпляр класса RedirectResult со свойством Permanent, имеющим значение «true», используя заданные значения маршрута.</summary>
      <returns>Экземпляр класса RedirectResult со свойством Permanent, имеющим значение «true», использующий заданные значения маршрута.</returns>
      <param name="routeValues">Значения маршрута.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Request">
      <summary>Получает объект HttpRequestBase для текущего HTTP-запроса.</summary>
      <returns>Объект запроса.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Resolver">
      <summary>Представляет заменяемый сопоставитель зависимостей, предоставляющий службы.По умолчанию он использует <see cref="P:System.Web.Mvc.DependencyResolver.CurrentCache" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Controller.Response">
      <summary>Получает объект HttpResponseBase для текущего HTTP-ответа.</summary>
      <returns>Объект HttpResponseBase для текущего HTTP-ответа.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.RouteData">
      <summary>Получает данные маршрута для текущего запроса.</summary>
      <returns>Данные маршрута.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Server">
      <summary>Получает объект HttpServerUtilityBase, предоставляющий методы, используемые при обработке веб-запросов.</summary>
      <returns>Объект HTTP-сервера.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Session">
      <summary>Получает объект HttpSessionStateBase для текущего HTTP-запроса.</summary>
      <returns>Объект состояния сеанса HTTP для текущего HTTP-запроса.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Этот метод вызывает метод BeginExecute.</summary>
      <returns>Результат операции.</returns>
      <param name="requestContext">Контекст запроса.</param>
      <param name="callback">Асинхронный обратный вызов.</param>
      <param name="state">Состояние объекта.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)">
      <summary>Этот метод вызывает метод EndExecute.</summary>
      <param name="asyncResult">Асинхронный результат операции.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>Этот метод вызывает метод OnAuthentication.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>Этот метод вызывает метод OnAuthenticationChallenge.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Этот метод вызывает метод OnActionExecuted.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Этот метод вызывает метод OnActionExecuting.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Этот метод вызывает метод OnAuthorization.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Этот метод вызывает метод OnException.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Этот метод вызывает метод OnResultExecuted.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Этот метод вызывает метод OnResultExecuting.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.TempDataProvider">
      <summary>Получает объект поставщика временных данных, используемый для хранения данных для следующего запроса.</summary>
      <returns>Поставщик временных данных.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0)">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных текущим поставщиком значений контроллера.</summary>
      <returns>Значение true, если обновление выполнено успешно. В противном случае — false.</returns>
      <param name="model">Обновляемый экземпляр модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="model" /> или свойства ValueProvider равно null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных текущим поставщиком значений контроллера, и префикса.</summary>
      <returns>Значение true, если обновление выполнено успешно. В противном случае — false.</returns>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="prefix">Префикс, который должен использоваться при поиске значений в поставщике значений.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="model" /> или свойства ValueProvider равно null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных текущим поставщиком значений контроллера, префикса и включенных параметров.</summary>
      <returns>Значение true, если обновление выполнено успешно. В противном случае — false.</returns>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="prefix">Префикс, который должен использоваться при поиске значений в поставщике значений.</param>
      <param name="includeProperties">Список обновляемых свойств модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="model" /> или свойства ValueProvider равно null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных текущим поставщиком значений контроллера, префикса, списка исключаемых свойств и списка включаемых свойств.</summary>
      <returns>Значение true, если обновление выполнено успешно. В противном случае — false.</returns>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="prefix">Префикс, который должен использоваться при поиске значений в поставщике значений.</param>
      <param name="includeProperties">Список обновляемых свойств модели.</param>
      <param name="excludeProperties">Список свойств, которые следует явно исключить из обновления.Эти свойства исключаются, даже если они указаны в списке параметров includeProperties.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="model" /> или свойства ValueProvider равно null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных поставщиком значений, префикса, списка исключаемых свойств и списка включаемых свойств.</summary>
      <returns>Значение true, если обновление выполнено успешно. В противном случае — false.</returns>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="prefix">Префикс, который должен использоваться при поиске значений в поставщике значений.</param>
      <param name="includeProperties">Список обновляемых свойств модели.</param>
      <param name="excludeProperties">Список свойств, которые следует явно исключить из обновления.Эти свойства исключаются, даже если они указаны в списке параметров includeProperties.</param>
      <param name="valueProvider">Словарь значений, который используется для обновления модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных поставщиком значений, префикса и включенных параметров.</summary>
      <returns>Значение true, если обновление выполнено успешно. В противном случае — false.</returns>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="prefix">Префикс, который должен использоваться при поиске значений в поставщике значений.</param>
      <param name="includeProperties">Список обновляемых свойств модели.</param>
      <param name="valueProvider">Словарь значений, который используется для обновления модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных поставщиком значений, и списка включаемых свойств.</summary>
      <returns>Значение true, если обновление выполнено успешно. В противном случае — false.</returns>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="prefix">Список обновляемых свойств модели.</param>
      <param name="valueProvider">Словарь значений, который используется для обновления модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных текущим поставщиком значений контроллера, и включенных параметров.</summary>
      <returns>Значение true, если обновление выполнено успешно. В противном случае — false.</returns>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="includeProperties">Список обновляемых свойств модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных поставщиком значений, и списка включаемых свойств.</summary>
      <returns>Значение true, если обновление выполнено успешно. В противном случае — false.</returns>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="includeProperties">Список обновляемых свойств модели.</param>
      <param name="valueProvider">Словарь значений, который используется для обновления модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Обновляет указанный экземпляр модели, используя значения, предоставленные поставщиком значений.</summary>
      <returns>Значение true, если обновление выполнено успешно. В противном случае — false.</returns>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="valueProvider">Словарь значений, который используется для обновления модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object)">
      <summary>Проверяет указанный экземпляр модели.</summary>
      <returns>Значение true, если проверка модели выполнена успешно. В противном случае — false.</returns>
      <param name="model">Проверяемая модель.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)">
      <summary>Проверяет указанный экземпляр модели, используя префикс HTML.</summary>
      <returns>Значение true, если проверка модели выполнена успешно. В противном случае — false.</returns>
      <param name="model">Проверяемая модель.</param>
      <param name="prefix">Префикс, используемый при поиске значений в поставщике моделей.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0)">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных текущим поставщиком значений контроллера.</summary>
      <param name="model">Обновляемый экземпляр модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных текущим поставщиком значений контроллера, и префикса.</summary>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="prefix">Префикс, который должен использоваться при поиске значений в поставщике значений.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных текущим поставщиком значений контроллера, префикса и включенных параметров.</summary>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="prefix">Префикс, который должен использоваться при поиске значений в поставщике значений.</param>
      <param name="includeProperties">Список обновляемых свойств модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных текущим поставщиком значений контроллера, префикса, списка исключаемых свойств и списка включаемых свойств.</summary>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="prefix">Префикс, который должен использоваться при поиске значений в поставщике значений.</param>
      <param name="includeProperties">Список обновляемых свойств модели.</param>
      <param name="excludeProperties">Список свойств, которые следует явно исключить из обновления.Эти свойства исключаются, даже если они указаны в списке includeProperties.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных поставщиком значений, префикса, списка исключаемых свойств и списка включаемых свойств.</summary>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="prefix">Префикс, который должен использоваться при поиске значений в поставщике значений.</param>
      <param name="includeProperties">Список обновляемых свойств модели.</param>
      <param name="excludeProperties">Список свойств, которые следует явно исключить из обновления.Эти свойства исключаются, даже если они указаны в списке параметров includeProperties.</param>
      <param name="valueProvider">Словарь значений, который используется для обновления модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных поставщиком значений, префикса и списка включаемых свойств.</summary>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="prefix">Префикс, который должен использоваться при поиске значений в поставщике значений.</param>
      <param name="includeProperties">Список обновляемых свойств модели.</param>
      <param name="valueProvider">Словарь значений, который используется для обновления модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных поставщиком значений, префикса и списка включаемых свойств.</summary>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="prefix">Список обновляемых свойств модели.</param>
      <param name="valueProvider">Словарь значений, который используется для обновления модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных текущим поставщиком значений объекта контроллера.</summary>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="includeProperties">Список обновляемых свойств модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Обновляет указанный экземпляр модели с помощью значений, предоставленных поставщиком значений, префикса и списка включаемых свойств.</summary>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="includeProperties">Список обновляемых свойств модели.</param>
      <param name="valueProvider">Словарь значений, который используется для обновления модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Обновляет указанный экземпляр модели, используя значения, предоставленные поставщиком значений.</summary>
      <param name="model">Обновляемый экземпляр модели.</param>
      <param name="valueProvider">Словарь значений, который используется для обновления модели.</param>
      <typeparam name="TModel">Тип объекта модели.</typeparam>
    </member>
    <member name="P:System.Web.Mvc.Controller.Url">
      <summary>Получает объект вспомогательного метода URL-адреса, используемый для создания URL-адресов с помощью маршрутизации.</summary>
      <returns>Вспомогательный объект технологии URL.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.User">
      <summary>Получает сведения о безопасности пользователя для текущего HTTP-запроса.</summary>
      <returns>Сведения о безопасности пользователя для текущего HTTP-запроса.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object)">
      <summary>Проверяет указанный экземпляр модели.</summary>
      <param name="model">Проверяемая модель.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)">
      <summary>Проверяет указанный экземпляр модели, используя префикс HTML.</summary>
      <param name="model">Проверяемая модель.</param>
      <param name="prefix">Префикс, используемый при поиске значений в поставщике моделей.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View">
      <summary>Создает объект <see cref="T:System.Web.Mvc.ViewResult" />, выполняющий визуализацию представления в ответ.</summary>
      <returns>Результат метода <see cref="M:System.Web.Mvc.Controller.View" />, выполняющего визуализацию представления в ответе.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Object)">
      <summary>Используя модель, создает объект <see cref="T:System.Web.Mvc.ViewResult" />, который выполняет визуализацию представления в ответ.</summary>
      <returns>Результат представления.</returns>
      <param name="model">Модель, которая визуализируется представлением.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String)">
      <summary>Используя имя представления, создает объект <see cref="T:System.Web.Mvc.ViewResult" />, который выполняет визуализацию представления.</summary>
      <returns>Результат представления.</returns>
      <param name="viewName">Имя представления, отображаемого для запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.Object)">
      <summary>Создает объект <see cref="T:System.Web.Mvc.ViewResult" />, выполняющий визуализацию заданного объекта IView.</summary>
      <returns>Результат представления.</returns>
      <param name="viewName">Представление, отображаемое для ответа.</param>
      <param name="model">Модель, которая визуализируется представлением.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String)">
      <summary>Используя имя представления и имя главной страницы, создает объект <see cref="T:System.Web.Mvc.ViewResult" />, который выполняет визуализацию представления в ответ.</summary>
      <returns>Результат представления.</returns>
      <param name="viewName">Имя представления, отображаемого для запроса.</param>
      <param name="masterName">Имя главной страницы или шаблона для использования при визуализации представления.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String,System.Object)">
      <summary>Используя имя представления, имя главной страницы и модель, создает объект <see cref="T:System.Web.Mvc.ViewResult" />, который выполняет визуализацию представления.</summary>
      <returns>Результат представления.</returns>
      <param name="viewName">Имя представления, отображаемого для запроса.</param>
      <param name="masterName">Имя главной страницы или шаблона для использования при визуализации представления.</param>
      <param name="model">Модель, которая визуализируется представлением.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView)">
      <summary>Создает объект <see cref="T:System.Web.Mvc.ViewResult" />, выполняющий визуализацию заданного объекта IView.</summary>
      <returns>Результат представления.</returns>
      <param name="view">Представление, отображаемое для ответа.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)">
      <summary>Создает объект <see cref="T:System.Web.Mvc.ViewResult" />, выполняющий визуализацию заданного объекта <see cref="T:System.Web.Mvc.IView" />.</summary>
      <returns>Результат представления.</returns>
      <param name="view">Представление, отображаемое для ответа.</param>
      <param name="model">Модель, которая визуализируется представлением.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ViewEngineCollection">
      <summary>Получает коллекцию обработчиков представлений.</summary>
      <returns>Коллекция обработчиков представлений.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerActionInvoker">
      <summary>Представляет класс, ответственный за вызов методов действия контроллера.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ControllerActionInvoker" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerActionInvoker.Binders">
      <summary>Получает или задает связыватели моделей, связанный с действием.</summary>
      <returns>Связыватели моделей, связанные с действием.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.CreateActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Object)">
      <summary>Создает результат действия.</summary>
      <returns>Объект результата действия.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
      <param name="actionReturnValue">Возвращаемое значение действия.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.FindAction(System.Web.Mvc.ControllerContext,System.Web.Mvc.ControllerDescriptor,System.String)">
      <summary>Выполняет поиск сведений о методе действия.</summary>
      <returns>Сведения о методе действия.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="controllerDescriptor">Дескриптор контроллера.</param>
      <param name="actionName">Имя действия.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Извлекает сведения о контроллере, используя указанный контекст контроллера.</summary>
      <returns>Сведения о контроллере.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Извлекает сведения о фильтрах действий.</summary>
      <returns>Сведения о фильтрах действий.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ParameterDescriptor)">
      <summary>Получает значение указанного параметра метода действия.</summary>
      <returns>Значение параметра метода действия.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="parameterDescriptor">Дескриптор параметра.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValues(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Получает значения параметров метода действия.</summary>
      <returns>Значения параметров метода действия.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Вызывает указанное действие, используя заданный контекст контроллера.</summary>
      <returns>Результат выполнения действия.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionName">Имя вызываемого действия.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerContext" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="actionName" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Поток был прерван во время вызова действия.</exception>
      <exception cref="T:System.Exception">Произошла неопознанная ошибка во время вызова действия.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Вызывает указанный метод действия, используя заданные параметры и контекст контроллера.</summary>
      <returns>Результат выполнения метода действия.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
      <param name="parameters">Параметры.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Вызывает указанный метод действия, используя заданные параметры, контекст контроллера и фильтры действий.</summary>
      <returns>Контекст для метода ActionExecuted класса <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="filters">Фильтры действий.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
      <param name="parameters">Параметры.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Вызывает указанный результат действия, используя заданный контекст контроллера.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionResult">Результат действия.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IResultFilter},System.Web.Mvc.ActionResult)">
      <summary>Вызывает указанный результат действия, используя заданные фильтры действий и контекст контроллера.</summary>
      <returns>Контекст для метода ResultExecuted класса <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="filters">Фильтры действий.</param>
      <param name="actionResult">Результат действия.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthenticationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.Filters.IAuthenticationFilter},System.Web.Mvc.ActionDescriptor)"></member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthenticationFiltersChallenge(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.Filters.IAuthenticationFilter},System.Web.Mvc.ActionDescriptor,System.Web.Mvc.ActionResult)"></member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthorizationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IAuthorizationFilter},System.Web.Mvc.ActionDescriptor)">
      <summary>Вызывает указанные фильтры авторизации, используя заданный дескриптор действия и контекст контроллера.</summary>
      <returns>Контекст для объекта <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="filters">Фильтры авторизации.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeExceptionFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IExceptionFilter},System.Exception)">
      <summary>Вызывает указанные фильтры исключений, используя заданное исключение и контекст контроллера.</summary>
      <returns>Контекст для объекта <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="filters">Фильтры исключений.</param>
      <param name="exception">Исключение.</param>
    </member>
    <member name="T:System.Web.Mvc.ControllerBase">
      <summary>Представляет базовый класс для всех контроллеров MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ControllerBase" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ControllerContext">
      <summary>Возвращает или задает контекст контроллера.</summary>
      <returns>Контекст контроллера.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)">
      <summary>Выполняет указанный контекст запроса.</summary>
      <param name="requestContext">Контекст запроса.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="requestContext" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.ExecuteCore">
      <summary>Выполняет запрос.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Initialize(System.Web.Routing.RequestContext)">
      <summary>Инициализирует указанный контекст запроса.</summary>
      <param name="requestContext">Контекст запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)">
      <summary>Выполняет указанный контекст запроса.</summary>
      <param name="requestContext">Контекст запроса.</param>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.TempData">
      <summary>Получает или задает словарь для временных данных.</summary>
      <returns>Словарь для временных данных.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValidateRequest">
      <summary>Получает или задает значение, указывающее, включена ли проверка запросов для данного запроса.</summary>
      <returns>Значение true, если проверка запросов включена для данного запроса; в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValueProvider">
      <summary>Получает или задает поставщик значений для контроллера.</summary>
      <returns>Поставщик значений для контроллера.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewBag">
      <summary>Получает или динамический словарь данных представления.</summary>
      <returns>Динамический словарь для данных представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewData">
      <summary>Получает или задает словарь для данных представления.</summary>
      <returns>Словарь для данных представления.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerBuilder">
      <summary>Представляет класс, ответственный за динамическое построение контроллера.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ControllerBuilder" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.Current">
      <summary>Получает объект текущего построителя контроллера.</summary>
      <returns>Текущий построитель контроллера.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.DefaultNamespaces">
      <summary>Получает пространства имен по умолчанию.</summary>
      <returns>Пространства имен по умолчанию.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.GetControllerFactory">
      <summary>Получает связанную фабрику контроллеров.</summary>
      <returns>Фабрика контроллеров.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Type)">
      <summary>Задает фабрику контроллеров, используя указанный тип.</summary>
      <param name="controllerFactoryType">Тип фабрики контроллеров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerFactoryType" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Невозможно присвоить фабрику контроллеров из типа в параметре <paramref name="controllerFactoryType" />.</exception>
      <exception cref="T:System.InvalidOperationException">При задании фабрики контроллеров возникла ошибка.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Web.Mvc.IControllerFactory)">
      <summary>Задает указанную фабрику контроллеров.</summary>
      <param name="controllerFactory">Фабрика контроллеров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerFactory" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ControllerContext">
      <summary>Инкапсулирует сведения об HTTP-запросе, соответствующем указанным экземплярам <see cref="T:System.Web.Routing.RouteBase" /> и <see cref="T:System.Web.Mvc.ControllerBase" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ControllerContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.HttpContextBase,System.Web.Routing.RouteData,System.Web.Mvc.ControllerBase)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ControllerContext" />, используя указанные контекст HTTP, данные URL-маршрута и контроллер.</summary>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="routeData">Данные маршрута.</param>
      <param name="controller">Контроллер.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ControllerContext" />, используя указанный контекст контроллера.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerContext" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Routing.RequestContext,System.Web.Mvc.ControllerBase)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ControllerContext" />, используя указанные контекст запроса и контроллер.</summary>
      <param name="requestContext">Контекст запроса.</param>
      <param name="controller">Контроллер.</param>
      <exception cref="T:System.ArgumentNullException">Один или оба параметра имеют значение null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.Controller">
      <summary>Получает или задает контроллер.</summary>
      <returns>Контроллер.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.DisplayMode">
      <summary>Возвращает режим отображения.</summary>
      <returns>Режим отображения.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.HttpContext">
      <summary>Получает или задает контекст HTTP.</summary>
      <returns>Контекст HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.IsChildAction">
      <summary>Получает значение, указывающее, является ли связанный метод действия дочерним действием.</summary>
      <returns>Значение true, если связанный метод действия является дочерним действием; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.ParentActionViewContext">
      <summary>Получает объект, содержащей сведения о контексте представления для родительского метода действия.</summary>
      <returns>Объект, содержащей сведения о контексте представления для родительского метода действия.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RequestContext">
      <summary>Получает или задает контекст запроса.</summary>
      <returns>Контекст запроса.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RouteData">
      <summary>Получает или задает данные URL-маршрута.</summary>
      <returns>Данные URL-маршрута.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerDescriptor">
      <summary>Инкапсулирует сведения, описывающие контроллер, например его имя, тип и действия.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ControllerDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerName">
      <summary>Получает имя контроллера.</summary>
      <returns>Имя контроллера.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerType">
      <summary>Получает тип контроллера.</summary>
      <returns>Тип контроллера.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Выполняет поиск метода действия, используя указанные имя и контекст контроллера.</summary>
      <returns>Сведения о методе действия.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionName">Имя действия.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCanonicalActions">
      <summary>Извлекает список дескрипторов методов действий в контроллере.</summary>
      <returns>Список дескрипторов методов действий в контроллере.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Извлекает настраиваемые атрибуты, определенные для данного члена, за исключением именованных атрибутов.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
      <exception cref="T:System.TypeLoadException">Невозможно загрузить тип пользовательского атрибута.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Для данного члена определено более одного атрибута типа <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Извлекает настраиваемые атрибуты указанного типа, определенные для данного члена, за исключением именованных атрибутов.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="attributeType">Тип пользовательских атрибутов.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
      <exception cref="T:System.TypeLoadException">Невозможно загрузить тип пользовательского атрибута.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Для данного члена определено более одного атрибута типа <paramref name="attributeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="attributeType" /> имеет значение null (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Получает атрибуты фильтра.</summary>
      <returns>Атрибуты фильтра.</returns>
      <param name="useCache">Значение true, если нужно использовать кэш. В противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Извлекает значение, указывающее, определен ли для данного члена один или несколько экземпляров заданного настраиваемого атрибута.</summary>
      <returns>Значение true, если для данного члена определен параметр <paramref name="attributeType" />; в противном случае — значение false.</returns>
      <param name="attributeType">Тип настраиваемого атрибута.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="attributeType" /> имеет значение null (Nothing в Visual Basic).</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.UniqueId">
      <summary>При реализации в производном классе получает уникальный идентификатор для дескриптора контроллера с использованием отложенной инициализации.</summary>
      <returns>Уникальный идентификатор.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerInstanceFilterProvider">
      <summary>Добавляет контроллер в экземпляр <see cref="T:System.Web.Mvc.FilterProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ControllerInstanceFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Возвращает коллекцию фильтров экземпляров контролеров.</summary>
      <returns>Коллекция фильтров экземпляров контролеров.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
    </member>
    <member name="T:System.Web.Mvc.CustomModelBinderAttribute">
      <summary>Представляет атрибут, вызывающий настраиваемый связыватель модели.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.CustomModelBinderAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.GetBinder">
      <summary>Извлекает сопоставленный связыватель модели.</summary>
      <returns>Ссылка на объект, реализующий интерфейс <see cref="T:System.Web.Mvc.IModelBinder" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadata">
      <summary>Предоставляет контейнер для общих метаданных, класса <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" /> и класса <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" /> для модели данных.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.#ctor(System.Web.Mvc.DataAnnotationsModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String,System.ComponentModel.DataAnnotations.DisplayColumnAttribute)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" />.</summary>
      <param name="provider">Поставщик метаданных модели данных заметок.</param>
      <param name="containerType">Тип контейнера.</param>
      <param name="modelAccessor">Метод доступа модели.</param>
      <param name="modelType">Тип модели.</param>
      <param name="propertyName">Имя свойства.</param>
      <param name="displayColumnAttribute">Атрибут отображаемого столбца.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.GetSimpleDisplayText">
      <summary>Возвращает простой текст для данных модели.</summary>
      <returns>Простой текст для данных модели.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider">
      <summary>Реализует поставщик модели метаданных по умолчанию для ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Получает метаданные для заданного свойства.</summary>
      <returns>Метаданные для свойства.</returns>
      <param name="attributes">Атрибуты.</param>
      <param name="containerType">Тип контейнера.</param>
      <param name="modelAccessor">Метод доступа модели.</param>
      <param name="modelType">Тип модели.</param>
      <param name="propertyName">Имя свойства.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidationFactory">
      <summary>Представляет метод, создающий экземпляр <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator">
      <summary>Предоставляет проверяющий элемент управления модели.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />.</summary>
      <param name="metadata">Метаданные для модели.</param>
      <param name="context">Контекст контроллера для модели.</param>
      <param name="attribute">Атрибут проверки для модели.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.Attribute">
      <summary>Получает атрибут проверки для проверяющего элемента управления модели.</summary>
      <returns>Атрибут проверки для проверяющего элемента управления модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.ErrorMessage">
      <summary>Получает сообщение об ошибке для сбоя проверки.</summary>
      <returns>Сообщение об ошибке для сбоя проверки.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.GetClientValidationRules">
      <summary>Получает коллекцию правил проверки клиента.</summary>
      <returns>Коллекция правил проверки клиента.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.IsRequired">
      <summary>Получает значение, указывающее, является ли проверка модели обязательной.</summary>
      <returns>Значение true, если проверка модели является обязательной. В противном случае — значение false.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.Validate(System.Object)">
      <summary>Возвращает список сообщений об ошибках проверки для модели.</summary>
      <returns>Список сообщений об ошибках проверки для модели или пустой список, если ошибок не было.</returns>
      <param name="container">Контейнер для модели.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator`1">
      <summary>Предоставляет проверяющий элемент управления модели для указанного типа проверки.</summary>
      <typeparam name="TAttribute"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator`1.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />.</summary>
      <param name="metadata">Метаданные для модели.</param>
      <param name="context">Контекст контроллера для модели.</param>
      <param name="attribute">Атрибут проверки для модели.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator`1.Attribute">
      <summary>Возвращает атрибут проверки от проверяющего элемента модели.</summary>
      <returns>Атрибут проверки от проверяющего элемента модели.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider">
      <summary>Реализует поставщика проверки по умолчанию для ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidatorProvider.AddImplicitRequiredAttributeForValueTypes">
      <summary>Получает или задает значение, указывающее, являются ли обязательными типы значений, не допускающие значения null.</summary>
      <returns>Значение true, если типы значений, не допускающие значения null, являются обязательными. В противном случае — значение false.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Получает список проверяющих элементов управления.</summary>
      <returns>Список проверяющих элементов управления.</returns>
      <param name="metadata">Метаданные.</param>
      <param name="context">Контекст.</param>
      <param name="attributes">Список атрибутов проверки.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>Регистрирует адаптер для предоставления проверки на стороне клиента.</summary>
      <param name="attributeType">Тип атрибута проверки.</param>
      <param name="adapterType">Тип адаптера.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Регистрирует фабрику адаптеров для поставщика проверки.</summary>
      <param name="attributeType">Тип атрибута.</param>
      <param name="factory">Фабрика, которая будет использоваться при создании объекта <see cref="T:System.Web.Mvc.ModelValidator" /> для заданного атрибута.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>Регистрирует адаптер по умолчанию.</summary>
      <param name="adapterType">Тип адаптера.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Регистрирует фабрику адаптеров по умолчанию.</summary>
      <param name="factory">Фабрика, которая будет использоваться при создании объекта <see cref="T:System.Web.Mvc.ModelValidator" /> для адаптера по умолчанию.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>Регистрирует адаптер для предоставления проверки объектов по умолчанию.</summary>
      <param name="adapterType">Тип адаптера.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Регистрирует фабрику адаптеров для поставщика проверки объектов по умолчанию.</summary>
      <param name="factory">Фабрика.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>Регистрирует адаптер для предоставления проверки объектов.</summary>
      <param name="modelType">Тип модели.</param>
      <param name="adapterType">Тип адаптера.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Регистрирует фабрику адаптеров для поставщика проверки объектов.</summary>
      <param name="modelType">Тип модели.</param>
      <param name="factory">Фабрика.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>Предоставляет фабрику для проверяющих элементов управления на основе <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider">
      <summary>Предоставляет контейнер для проверяющего элемента управления сведений об ошибках модели.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Получает список средств проверки сведений об ошибках модели.</summary>
      <returns>Список проверяющих элементов управления сведений об ошибках модели.</returns>
      <param name="metadata">Метаданные модели.</param>
      <param name="context">Контекст контроллера.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultControllerFactory">
      <summary>Представляет фабрику контроллеров, регистрируемую по умолчанию.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.DefaultControllerFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor(System.Web.Mvc.IControllerActivator)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.DefaultControllerFactory" />, используя активатор контроллера.</summary>
      <param name="controllerActivator">Объект, реализующий интерфейс активатора контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Создает указанный контроллер, используя заданный контекст запроса.</summary>
      <returns>Контроллер.</returns>
      <param name="requestContext">Контекст HTTP-запроса, включающий в себя контекст HTTP и данные маршрута.</param>
      <param name="controllerName">Имя контроллера.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="requestContext" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="controllerName" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)">
      <summary>Извлекает экземпляр контроллера для заданного контекста запроса и типа контроллера.</summary>
      <returns>Экземпляр контроллера.</returns>
      <param name="requestContext">Контекст HTTP-запроса, включающий в себя контекст HTTP и данные маршрута.</param>
      <param name="controllerType">Тип контроллера.</param>
      <exception cref="T:System.Web.HttpException">Параметр <paramref name="controllerType" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Невозможно присвоить тип <paramref name="controllerType" />.</exception>
      <exception cref="T:System.InvalidOperationException">Невозможно создать экземпляр <paramref name="controllerType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)">
      <summary>Возвращает или задает поведение сеанса контроллера.</summary>
      <returns>Поведение сеанса контроллера.</returns>
      <param name="requestContext">Контекст запроса.</param>
      <param name="controllerType">Тип контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerType(System.Web.Routing.RequestContext,System.String)">
      <summary>Извлекает тип контроллера для заданного имени и контекста запроса.</summary>
      <returns>Тип контроллера.</returns>
      <param name="requestContext">Контекст HTTP-запроса, включающий в себя контекст HTTP и данные маршрута.</param>
      <param name="controllerName">Имя контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Освобождает указанный контроллер.</summary>
      <param name="controller">Освобождаемый контроллер.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.System#Web#Mvc#IControllerFactory#GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Данный API обеспечивает поддержку инфраструктуры ASP.NET MVC и не предназначен для непосредственного использования в коде.Этот метод вызывает метод <see cref="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)" />.</summary>
      <returns>Поведение сеанса контроллера.</returns>
      <param name="requestContext">Контекст запроса.</param>
      <param name="controllerName">Имя контроллера.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultModelBinder">
      <summary>Сопоставляет запрос браузера с объектом данных.Этот класс предоставляет конкретную реализацию связывателя модели.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.DefaultModelBinder" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.Binders">
      <summary>Получает или задает связыватели моделей для приложения.</summary>
      <returns>Связыватели моделей для приложения.</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Выполняет привязку модели, используя указанные контекст контроллера и контекст привязки.</summary>
      <returns>Объект привязки.</returns>
      <param name="controllerContext">Контекст, в котором функционирует контроллер.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
      <param name="bindingContext">Контекст, в котором привязана модель.Контекст содержит такие сведения, как объект модели, имя модели, тип модели, фильтр свойств и поставщик значений.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="bindingContext " /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor)">
      <summary>Привязывает указанное свойство, используя заданные контекст контроллера и контекст привязки, а также заданный дескриптор свойства.</summary>
      <param name="controllerContext">Контекст, в котором функционирует контроллер.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
      <param name="bindingContext">Контекст, в котором привязана модель.Контекст содержит такие сведения, как объект модели, имя модели, тип модели, фильтр свойств и поставщик значений.</param>
      <param name="propertyDescriptor">Описывает свойство, которое требуется привязать.Дескриптор предоставляет информацию, такую как тип компонента, тип свойства и значение свойства.Также предоставляет методы для получения или задания значения свойства.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
      <summary>Создает заданный тип модели, используя указанные контекст контроллера и контекст привязки.</summary>
      <returns>Объект данных указанного типа.</returns>
      <param name="controllerContext">Контекст, в котором функционирует контроллер.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
      <param name="bindingContext">Контекст, в котором привязана модель.Контекст содержит такие сведения, как объект модели, имя модели, тип модели, фильтр свойств и поставщик значений.</param>
      <param name="modelType">Тип возвращаемого объекта модели.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.Int32)">
      <summary>Создает индекс (подындекс) на основе категории компонентов, составляющих больший индекс, где указанное значение индекса является целым числом.</summary>
      <returns>Имя подиндекса.</returns>
      <param name="prefix">Префикс для подындекса.</param>
      <param name="index">Значение индекса.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.String)">
      <summary>Создает индекс (подындекс) на основе категории компонентов, составляющих больший индекс, где указанное значение индекса является строкой.</summary>
      <returns>Имя подиндекса.</returns>
      <param name="prefix">Префикс для подындекса.</param>
      <param name="index">Значение индекса.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubPropertyName(System.String,System.String)">
      <summary>Создает имя подсвойства, используя указанные префикс и имя свойства.</summary>
      <returns>Имя подсвойства.</returns>
      <param name="prefix">Префикс для подсвойства.</param>
      <param name="propertyName">Имя свойства.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetFilteredModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Возвращает набор свойств, соответствующих ограничениям фильтра свойств, установленным заданным параметром <paramref name="binding context" />.</summary>
      <returns>Перечислимый набор дескрипторов свойств.</returns>
      <param name="controllerContext">Контекст, в котором функционирует контроллер.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
      <param name="bindingContext">Контекст, в котором привязана модель.Контекст содержит такие сведения, как объект модели, имя модели, тип модели, фильтр свойств и поставщик значений.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Возвращает свойства модели, используя указанные контекст контроллера и контекст привязки.</summary>
      <returns>Коллекция дескрипторов свойств.</returns>
      <param name="controllerContext">Контекст, в котором функционирует контроллер.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
      <param name="bindingContext">Контекст, в котором привязана модель.Контекст содержит такие сведения, как объект модели, имя модели, тип модели, фильтр свойств и поставщик значений.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetPropertyValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Web.Mvc.IModelBinder)">
      <summary>Возвращает значение свойства, используя заданные контекст контроллера, контекст привязки, дескриптор свойства и связыватель свойства.</summary>
      <returns>Объект, представляющий значение свойства.</returns>
      <param name="controllerContext">Контекст, в котором функционирует контроллер.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
      <param name="bindingContext">Контекст, в котором привязана модель.Контекст содержит такие сведения, как объект модели, имя модели, тип модели, фильтр свойств и поставщик значений.</param>
      <param name="propertyDescriptor">Дескриптор свойства, к которому выполняется доступ.Дескриптор предоставляет информацию, такую как тип компонента, тип свойства и значение свойства.Также предоставляет методы для получения или задания значения свойства.</param>
      <param name="propertyBinder">Объект, который обеспечивает способ привязки свойства.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetTypeDescriptor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Возвращает объект дескриптора для типа, заданного контекстом контроллера и контекстом привязки.</summary>
      <returns>Объект дескриптора пользовательского типа.</returns>
      <param name="controllerContext">Контекст, в котором функционирует контроллер.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
      <param name="bindingContext">Контекст, в котором привязана модель.Контекст содержит такие сведения, как объект модели, имя модели, тип модели, фильтр свойств и поставщик значений.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.IsModelValid(System.Web.Mvc.ModelBindingContext)">
      <summary>Определяет, является ли модель данных допустимой для заданного контекста привязки.</summary>
      <returns>Значение true, если модель допустима. В противном случае — значение false.</returns>
      <param name="bindingContext">Контекст, в котором привязана модель.Контекст содержит такие сведения, как объект модели, имя модели, тип модели, фильтр свойств и поставщик значений.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="bindingContext" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Вызывается, когда модель обновлена.</summary>
      <param name="controllerContext">Контекст, в котором функционирует контроллер.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
      <param name="bindingContext">Контекст, в котором привязана модель.Контекст содержит такие сведения, как объект модели, имя модели, тип модели, фильтр свойств и поставщик значений.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Вызывается, когда модель обновляется.</summary>
      <returns>Значение true, если модель обновляется. В противном случае — значение false.</returns>
      <param name="controllerContext">Контекст, в котором функционирует контроллер.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
      <param name="bindingContext">Контекст, в котором привязана модель.Контекст содержит такие сведения, как объект модели, имя модели, тип модели, фильтр свойств и поставщик значений.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Вызывается, когда указанное свойство проверено.</summary>
      <param name="controllerContext">Контекст, в котором функционирует контроллер.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
      <param name="bindingContext">Контекст, в котором привязана модель.Контекст содержит такие сведения, как объект модели, имя модели, тип модели, фильтр свойств и поставщик значений.</param>
      <param name="propertyDescriptor">Описывает свойство, которое требуется проверить.Дескриптор предоставляет информацию, такую как тип компонента, тип свойства и значение свойства.Также предоставляет методы для получения или задания значения свойства.</param>
      <param name="value">Значение, которое требуется задать для свойства.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Вызывается, когда указанное свойство проверяется.</summary>
      <returns>Значение true, если свойство проверяется. В противном случае — значение false.</returns>
      <param name="controllerContext">Контекст, в котором функционирует контроллер.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
      <param name="bindingContext">Контекст, в котором привязана модель.Контекст содержит такие сведения, как объект модели, имя модели, тип модели, фильтр свойств и поставщик значений.</param>
      <param name="propertyDescriptor">Описывает проверяемое свойство.Дескриптор предоставляет информацию, такую как тип компонента, тип свойства и значение свойства.Также предоставляет методы для получения или задания значения свойства.</param>
      <param name="value">Значение, которое требуется задать для свойства.</param>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.ResourceClassKey">
      <summary>Получает или задает имя файла ресурсов (ключа класса), содержащего локализованные значения строк.</summary>
      <returns>Имя файла ресурсов (ключа класса).</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.SetProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Задает указанное свойство, используя заданные контекст контроллера, контекст привязки и значение свойства.</summary>
      <param name="controllerContext">Контекст, в котором функционирует контроллер.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
      <param name="bindingContext">Контекст, в котором привязана модель.Контекст содержит такие сведения, как объект модели, имя модели, тип модели, фильтр свойств и поставщик значений.</param>
      <param name="propertyDescriptor">Описывает свойство, которое требуется задать.Дескриптор предоставляет информацию, такую как тип компонента, тип свойства и значение свойства.Также предоставляет методы для получения или задания значения свойства.</param>
      <param name="value">Значение, которое требуется задать для свойства.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultViewLocationCache">
      <summary>Представляет кэш в памяти для расположений представлений.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.DefaultViewLocationCache" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor(System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.DefaultViewLocationCache" />, используя указанный интервал времени кэширования.</summary>
      <param name="timeSpan">Интервал времени кэширования.</param>
      <exception cref="T:System.InvalidOperationException">Атрибут Ticks параметра <paramref name="timeSpan" /> представляет собой отрицательное число.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Извлекает расположение представления по умолчанию, используя указанные контекст HTTP и ключ кэша.</summary>
      <returns>Расположение представления по умолчанию.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="key">Ключ кэша.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="httpContext" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Вставляет представление по указанному виртуальному пути, используя заданные контекст HTTP, ключ кэша и виртуальный путь.</summary>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="key">Ключ кэша.</param>
      <param name="virtualPath">Виртуальный путь.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="httpContext" /> равен null.</exception>
    </member>
    <member name="F:System.Web.Mvc.DefaultViewLocationCache.Null">
      <summary>Создает пустой кэш расположений представлений.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultViewLocationCache.TimeSpan">
      <summary>Получает или задает интервал времени кэширования.</summary>
      <returns>Интервал времени кэширования.</returns>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolver">
      <summary>Предоставляет точку регистрации для сопоставителей зависимостей, реализующих <see cref="T:System.Web.Mvc.IDependencyResolver" /> или интерфейс локатора общей службы IServiceLocator.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.DependencyResolver" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.Current">
      <summary>Получает реализацию сопоставителя зависимостей.</summary>
      <returns>Реализация сопоставителя зависимостей.</returns>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.InnerCurrent">
      <summary>Данный API обеспечивает поддержку инфраструктуры ASP.NET MVC и не предназначен для непосредственного использования в коде.</summary>
      <returns>Реализация сопоставителя зависимостей.</returns>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})">
      <summary>Данный API обеспечивает поддержку инфраструктуры ASP.NET MVC и не предназначен для непосредственного использования в коде.</summary>
      <param name="getService">Функция, которая предоставляет службу.</param>
      <param name="getServices">Функция, которая предоставляет службы.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Object)">
      <summary>Данный API обеспечивает поддержку инфраструктуры ASP.NET MVC и не предназначен для непосредственного использования в коде.</summary>
      <param name="commonServiceLocator">Локатор общей службы.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Данный API обеспечивает поддержку инфраструктуры ASP.NET MVC и не предназначен для непосредственного использования в коде.</summary>
      <param name="resolver">Объект, который реализует сопоставитель зависимостей.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})">
      <summary>Предоставляет пункт регистрации для сопоставителей зависимостей, используя указанный делегат службы и указанные делегаты коллекции служб.</summary>
      <param name="getService">Делегат службы.</param>
      <param name="getServices">Делегаты служб.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Object)">
      <summary>Предоставляет пункт регистрации для сопоставителей зависимостей, применяя предоставленный локатор общей службы, если используется интерфейс локатора службы.</summary>
      <param name="commonServiceLocator">Локатор общей службы.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Предоставляет пункт регистрации для сопоставителей зависимостей, используя указанный интерфейс сопоставителя зависимостей.</summary>
      <param name="resolver">Сопоставитель зависимостей.</param>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolverExtensions">
      <summary>Предоставляет типобезопасную реализацию <see cref="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)" /> и <see cref="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetService``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Разрешает однократно зарегистрированные службы, поддерживающие создание произвольных объектов.</summary>
      <returns>Запрошенная служба или объект.</returns>
      <param name="resolver">Экземпляр сопоставителя зависимостей, который расширяется данным методом.</param>
      <typeparam name="TService">Тип запрошенной службы или объекта.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetServices``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Разрешает многократно зарегистрированные службы.</summary>
      <returns>Запрошенные службы.</returns>
      <param name="resolver">Экземпляр сопоставителя зависимостей, который расширяется данным методом.</param>
      <typeparam name="TService">Тип запрашиваемых служб.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.DictionaryValueProvider`1">
      <summary>Представляет базовый класс для поставщиков значений, значения которых берутся из коллекции, реализующей интерфейс <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.#ctor(System.Collections.Generic.IDictionary{System.String,`0},System.Globalization.CultureInfo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.DictionaryValueProvider`1" />.</summary>
      <param name="dictionary">Пары "имя-значение", используемые для инициализации поставщика значений.</param>
      <param name="culture">Сведения о конкретных языке и региональных параметрах, например названия используемых языка и региональных параметров, системы записи и календаря.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="dictionary" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.ContainsPrefix(System.String)">
      <summary>Определяет, содержит ли коллекция указанный префикс.</summary>
      <returns>Значение true, если коллекция содержит заданный префикс. В противном случае — значение false.</returns>
      <param name="prefix">Искомый префикс.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="prefix" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetKeysFromPrefix(System.String)">
      <summary>Получает ключи из префикса.</summary>
      <returns>Ключи из префикса.</returns>
      <param name="prefix">Префикс.</param>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetValue(System.String)">
      <summary>Возвращает объект значения, используя указанные ключ и контекст контроллера.</summary>
      <returns>Объект значения для заданного ключа.</returns>
      <param name="key">Ключ извлекаемого объекта значения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelMetadataProvider">
      <summary>Предоставляет пустой поставщик метаданных для моделей данных, которым не требуются метаданные.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.EmptyModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Web.Mvc.ModelMetadata" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Web.Mvc.ModelMetadata" />.</returns>
      <param name="attributes">Атрибуты.</param>
      <param name="containerType">Тип контейнера.</param>
      <param name="modelAccessor">Метод доступа модели.</param>
      <param name="modelType">Тип модели.</param>
      <param name="propertyName">Имя модели.</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelValidatorProvider">
      <summary>Предоставляет пустой поставщик проверки для моделей, которым не требуется проверяющий элемент управления.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.EmptyModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Получает пустой проверяющий элемент управления модели.</summary>
      <returns>Пустой проверяющий элемент управления модели.</returns>
      <param name="metadata">Метаданные.</param>
      <param name="context">Контекст.</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyResult">
      <summary>Представляет пустой результат, например метод действия контроллера, который ничего не возвращает.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.EmptyResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Выполняет указанный контекст результата.</summary>
      <param name="context">Контекст результата.</param>
    </member>
    <member name="T:System.Web.Mvc.ExceptionContext">
      <summary>Предоставляет контекст для использования класса <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ExceptionContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor(System.Web.Mvc.ControllerContext,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ExceptionContext" /> для указанного исключения, используя заданный контекст контроллера.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="exception">Исключение.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="exception" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Exception">
      <summary>Возвращает или задает объект исключения.</summary>
      <returns>Объект исключения.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.ExceptionHandled">
      <summary>Получает или задает значение, указывающее, выполнена ли обработка исключения.</summary>
      <returns>Значение true, если исключение обработано. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Result">
      <summary>Получает или задает результат действия.</summary>
      <returns>Результат действия.</returns>
    </member>
    <member name="T:System.Web.Mvc.ExpressionHelper">
      <summary>Предоставляет вспомогательный класс для получения имени модели из выражения.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.Linq.Expressions.LambdaExpression)">
      <summary>Получает имя модели из лямбда-выражения.</summary>
      <returns>Имя модели.</returns>
      <param name="expression">Выражение.</param>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.String)">
      <summary>Получает имя модели из строкового выражения.</summary>
      <returns>Имя модели.</returns>
      <param name="expression">Выражение.</param>
    </member>
    <member name="T:System.Web.Mvc.FieldValidationMetadata">
      <summary>Предоставляет контейнер для метаданных проверки поля на стороне клиента.</summary>
    </member>
    <member name="M:System.Web.Mvc.FieldValidationMetadata.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FieldValidationMetadata" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.FieldName">
      <summary>Получает или задает имя поля данных.</summary>
      <returns>Имя поля данных.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ReplaceValidationMessageContents">
      <summary>Получает или задает значение, указывающее, должно ли содержимое сообщения проверки заменяться ошибкой клиентской проверки.</summary>
      <returns>Значение true, если содержимое сообщения проверки должно заменяться ошибкой клиентской проверки; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationMessageId">
      <summary>Получает или задает идентификатор сообщения проверяющего элемента управления.</summary>
      <returns>Идентификатор сообщения проверяющего элемента управления.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationRules">
      <summary>Получает правила клиентской проверки.</summary>
      <returns>Правила клиентской проверки.</returns>
    </member>
    <member name="T:System.Web.Mvc.FileContentResult">
      <summary>Отправляет в ответ содержимое двоичного файла.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.#ctor(System.Byte[],System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FileContentResult" />, используя указанные содержимое файла и тип контента.</summary>
      <param name="fileContents">Массив байтов, отправляемый в ответ.</param>
      <param name="contentType">Тип контента, используемый для ответа.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="fileContents" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileContentResult.FileContents">
      <summary>Двоичное содержимое, отправляемое в ответ.</summary>
      <returns>Содержимое файла.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Записывает содержимое файла в ответ.</summary>
      <param name="response">Ответ.</param>
    </member>
    <member name="T:System.Web.Mvc.FilePathResult">
      <summary>Отправляет в ответ содержимое файла.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FilePathResult" />, используя указанные имя файла и тип контента.</summary>
      <param name="fileName">Имя файла, отправляемого в ответ.</param>
      <param name="contentType">Тип контента ответа.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="fileName" /> имеет значение null или пуст.</exception>
    </member>
    <member name="P:System.Web.Mvc.FilePathResult.FileName">
      <summary>Получает или задает путь к файлу, который отправляется в ответ.</summary>
      <returns>Путь к файлу, который отправляется в ответ.</returns>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Записывает файл в ответ.</summary>
      <param name="response">Ответ.</param>
    </member>
    <member name="T:System.Web.Mvc.FileResult">
      <summary>Представляет базовый класс, используемый для отправки в ответ содержимого двоичного файла.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileResult.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FileResult" />.</summary>
      <param name="contentType">Тип содержимого.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="contentType" /> имеет значение null или пуст.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.ContentType">
      <summary>Получает тип контента, используемый для ответа.</summary>
      <returns>Тип содержимого.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Разрешает обработку результата выполнения метода действия пользовательским типом, наследуемым от класса <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Контекст, в котором выполняется результат.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.FileDownloadName">
      <summary>Получает или задает заголовок местоположения содержимого, чтобы диалоговое окно загрузки файла отображалось в браузере с указанным именем файла.</summary>
      <returns>Имя файла.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Записывает файл в ответ.</summary>
      <param name="response">Ответ.</param>
    </member>
    <member name="T:System.Web.Mvc.FileStreamResult">
      <summary>Отправляет в ответ двоичное содержимое, используя экземпляр <see cref="T:System.IO.Stream" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FileStreamResult" />.</summary>
      <param name="fileStream">Поток, отправляемый в ответ.</param>
      <param name="contentType">Тип контента, используемый для ответа.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="fileStream" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileStreamResult.FileStream">
      <summary>Получает поток, который будет отправлен в ответ.</summary>
      <returns>Файловый поток.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Записывает файл в ответ.</summary>
      <param name="response">Ответ.</param>
    </member>
    <member name="T:System.Web.Mvc.Filter">
      <summary>Представляет класс метаданных, содержащий ссылку на реализацию одного или нескольких интерфейсов фильтра, порядок фильтров и область фильтра.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filter.#ctor(System.Object,System.Web.Mvc.FilterScope,System.Nullable{System.Int32})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Filter" />.</summary>
      <param name="instance">Экземпляр.</param>
      <param name="scope">Область.</param>
      <param name="order">Порядок.</param>
    </member>
    <member name="F:System.Web.Mvc.Filter.DefaultOrder">
      <summary>Представляет константу, используемую для указания порядка фильтров по умолчанию.</summary>
    </member>
    <member name="P:System.Web.Mvc.Filter.Instance">
      <summary>Получает экземпляр этого класса.</summary>
      <returns>Экземпляр этого класса.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Order">
      <summary>Получает порядок, в котором применяется фильтр.</summary>
      <returns>Порядок, в котором применяется фильтр.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Scope">
      <summary>Получает порядок области для фильтра.</summary>
      <returns>Порядок области для фильтра.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttribute">
      <summary>Представляет базовый класс для атрибутов фильтра действий и результата.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FilterAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.AllowMultiple">
      <summary>Извлекает или задает значение, указывающее, можно ли задать для данного экземпляра несколько атрибутов файла.</summary>
      <returns>Значение true, если можно указать несколько экземпляров атрибута фильтра; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.Order">
      <summary>Получает или задает порядок, в котором выполняются фильтры действий.</summary>
      <returns>Порядок, в котором выполняются фильтры действий.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttributeFilterProvider">
      <summary>Определяет поставщик фильтра для атрибутов фильтра.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" /> и дополнительно кэширует экземпляры атрибута.</summary>
      <param name="cacheAttributeInstances">Значение true для кэширования экземпляров атрибутов; в противном случае — false.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetActionAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Получает коллекцию настраиваемых атрибутов действия.</summary>
      <returns>Коллекция настраиваемых атрибутов действия.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetControllerAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Получает коллекцию атрибутов контроллера.</summary>
      <returns>Коллекция атрибутов контроллера.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Объединяет все фильтры всех поставщиков фильтров в одну коллекцию.</summary>
      <returns>Фильтры коллекции из всех поставщиков фильтров.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterInfo">
      <summary>Инкапсулирует сведения о доступных фильтрах действий.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FilterInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor(System.Collections.Generic.IEnumerable{System.Web.Mvc.Filter})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FilterInfo" />, используя указанную коллекцию фильтров.</summary>
      <param name="filters">Коллекция фильтров.</param>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ActionFilters">
      <summary>Получает все фильтры действий в приложении.</summary>
      <returns>Фильтры действий.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthenticationFilters">
      <summary>Получает все фильтры проверки подлинности в приложении.</summary>
      <returns>Список фильтров проверки подлинности.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthorizationFilters">
      <summary>Получает все фильтры авторизации в приложении.</summary>
      <returns>Фильтры авторизации.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ExceptionFilters">
      <summary>Получает все фильтры исключений в приложении.</summary>
      <returns>Фильтры исключений.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ResultFilters">
      <summary>Получает все фильтры результатов в приложении.</summary>
      <returns>Фильтры результатов.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterProviderCollection">
      <summary>Представляет коллекцию поставщиков фильтров для приложения.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FilterProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IFilterProvider})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FilterProviderCollection" /> с указанным списком поставщиков фильтров.</summary>
      <param name="providers">Список поставщиков фильтров.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.ClearItems">
      <summary>Удаляет все элементы из коллекции.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Возвращает коллекцию поставщиков фильтров.</summary>
      <returns>Коллекция поставщиков фильтров.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IFilterProvider)">
      <summary>Вставляет элемент в коллекцию по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить элемент.</param>
      <param name="item">Объект, который нужно вставить.Значение может быть null для ссылочных типов.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.RemoveItem(System.Int32)">
      <summary>Удаляет элемент из коллекции по указанному индексу.</summary>
      <param name="index">Индекс (с нуля) элемента, который требуется удалить.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.SetItem(System.Int32,System.Web.Mvc.IFilterProvider)">
      <summary>Заменяет элемент по указанному индексу.</summary>
      <param name="index">Индекс (с нуля) элемента, который требуется заменить.</param>
      <param name="item">Новое значение элемента по указанному индексу.Значение может быть null для ссылочных типов.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterProviders">
      <summary>Предоставляет пункт регистрации для фильтров.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterProviders.Providers">
      <summary>Предоставляет пункт регистрации для фильтров.</summary>
      <returns>Коллекция фильтров.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterScope">
      <summary>Определяет значения, указывающие порядок запуска фильтров ASP.NET MVC с одинаковым типом фильтра и порядком фильтра.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Action">
      <summary>Указывает порядок до <see cref="F:System.Web.Mvc.FilterScope.Last" /> и после <see cref="F:System.Web.Mvc.FilterScope.Controller" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Controller">
      <summary>Указывает порядок до <see cref="F:System.Web.Mvc.FilterScope.Action" /> и после <see cref="F:System.Web.Mvc.FilterScope.Global" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.First">
      <summary>Указывает первый элемент.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Global">
      <summary>Указывает порядок до <see cref="F:System.Web.Mvc.FilterScope.Controller" /> и после <see cref="F:System.Web.Mvc.FilterScope.First" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Last">
      <summary>Указывает последний элемент.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormCollection">
      <summary>Содержит поставщики значений форм для приложения.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FormCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FormCollection" />.</summary>
      <param name="collection">Коллекция.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="collection" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.GetValue(System.String)">
      <summary>Получает указанный поставщик значений.</summary>
      <returns>Поставщик значений.</returns>
      <param name="name">Имя получаемого поставщика значений.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Получает значение, указывающее, содержит ли поставщик значений запись, имеющую указанный префикс.</summary>
      <returns>Значение true, если поставщик значений содержит запись, имеющую указанный префикс; в противном случае — значение false.</returns>
      <param name="prefix">Искомый префикс.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Получает значение от поставщика значений, используя указанный ключ.</summary>
      <returns>Значение от поставщика значений.</returns>
      <param name="key">Ключ.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.ToValueProvider">
      <summary>Возвращает словарь, содержащий поставщики значений.</summary>
      <returns>Словарь поставщиков значений.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormContext">
      <summary>Инкапсулирует сведения, необходимые для проверки и обработки входных данных из формы HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FormContext" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FieldValidators">
      <summary>Получает проверяющие элементы управления полей для формы.</summary>
      <returns>Словарь проверяющих элементов управления полей для формы.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FormId">
      <summary>Получает или задает идентификатор формы.</summary>
      <returns>Идентификатор формы.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetJsonValidationMetadata">
      <summary>Возвращает сериализованный объект, содержащий идентификатор формы и значения проверки полей для формы.</summary>
      <returns>Сериализованный объект, содержащий идентификатор формы и значения проверки полей для формы.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String)">
      <summary>Возвращает значение проверки для заданного поля ввода.</summary>
      <returns>Значение, по которому требуется проверить поле ввода.</returns>
      <param name="fieldName">Имя поля, для которого требуется извлечь значение проверки.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="fieldName" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String,System.Boolean)">
      <summary>Возвращает значение проверки для заданного поля ввода и значение, указывающее, что делать, если значение проверки не найдено.</summary>
      <returns>Значение, по которому требуется проверить поле ввода.</returns>
      <param name="fieldName">Имя поля, для которого требуется извлечь значение проверки.</param>
      <param name="createIfNotFound">Значение true для создания значения проверки, если оно не найдено; в противном случае — значение false.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="fieldName" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String)">
      <summary>Возвращает значение, указывающее, отображается ли заданное поле в форме.</summary>
      <returns>Значение true, если поле было отображено; в противном случае — значение false.</returns>
      <param name="fieldName">Имя поля.</param>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String,System.Boolean)">
      <summary>Задает значение, указывающее, отображается ли заданное поле в форме.</summary>
      <param name="fieldName">Имя поля.</param>
      <param name="value">Значение true, если поле отображалось в форме; в противном случае — значение false.</param>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ReplaceValidationSummary">
      <summary>Определяет, должны ли ошибки проверки клиента динамически добавляться в сводку проверки.</summary>
      <returns>Значение true, если ошибки проверки клиента должны добавляться в сводку проверки; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ValidationSummaryId">
      <summary>Получает или задает идентификатор для сводки проверки.</summary>
      <returns>Идентификатор для сводки проверки.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormMethod">
      <summary>Перечисляет типы HTTP-запросов для формы.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Get">
      <summary>Задает запрос GET.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Post">
      <summary>Задает запрос POST.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormValueProvider">
      <summary>Представляет поставщик значений для значений формы, содержащихся в объекте <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FormValueProvider" />.</summary>
      <param name="controllerContext">Объект, инкапсулирующий сведения о текущем HTTP-запросе.</param>
    </member>
    <member name="T:System.Web.Mvc.FormValueProviderFactory">
      <summary>Представляет класс, ответственный за создание нового экземпляра объекта поставщика значения формы.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.FormValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Возвращает объект поставщика значения формы для заданного контекста контроллера.</summary>
      <returns>Объект поставщика значения формы.</returns>
      <param name="controllerContext">Объект, инкапсулирующий сведения о текущем HTTP-запросе.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerContext" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilterCollection">
      <summary>Представляет класс, содержащий все глобальные фильтры.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.GlobalFilterCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object)">
      <summary>Добавляет указанный фильтр в глобальную коллекцию фильтров.</summary>
      <param name="filter">Фильтр.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object,System.Int32)">
      <summary>Добавляет указанный фильтр в глобальную коллекцию фильтров с использованием заданного порядка выполнения фильтров.</summary>
      <param name="filter">Фильтр.</param>
      <param name="order">Порядок выполнения для фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Clear">
      <summary>Удаляет все фильтры из глобальной коллекции фильтров.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Contains(System.Object)">
      <summary>Определяет, находится ли фильтр в глобальной коллекции фильтров.</summary>
      <returns>Значение true, если элемент <paramref name="filter" /> найден в глобальной коллекции фильтров; в обратном случае — значение false.</returns>
      <param name="filter">Фильтр.</param>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilterCollection.Count">
      <summary>Получает число фильтров в глобальной коллекции фильтров.</summary>
      <returns>Число фильтров в глобальной коллекции фильтров.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.GetEnumerator">
      <summary>Возвращает перечислитель, который используется для итерации по глобальной коллекции фильтров.</summary>
      <returns>Перечислитель, который используется для итерации по глобальной коллекции фильтров.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Remove(System.Object)">
      <summary>Удаляет все фильтры, которые соответствуют заданному фильтру.</summary>
      <param name="filter">Удаляемый фильтр.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Данный API обеспечивает поддержку инфраструктуры ASP.NET MVC и не предназначен для непосредственного использования в коде. </summary>
      <returns>Перечислитель, который используется для итерации по глобальной коллекции фильтров.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Web#Mvc#IFilterProvider#GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Данный API обеспечивает поддержку инфраструктуры ASP.NET MVC и не предназначен для непосредственного использования в коде.</summary>
      <returns>Перечислитель, который используется для итерации по глобальной коллекции фильтров.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilters">
      <summary>Представляет глобальную коллекцию фильтров.</summary>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilters.Filters">
      <summary>Получает или задает глобальную коллекцию фильтров.</summary>
      <returns>Глобальная коллекция фильтров.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorAttribute">
      <summary>Представляет атрибут, используемый для обработки исключения, вызываемого методом действия.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.ExceptionType">
      <summary>Получает или задает тип исключения.</summary>
      <returns>Тип исключения.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.Master">
      <summary>Получает или задает главное представление для отображения сведений об исключении.</summary>
      <returns>Главное представление.</returns>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Вызывается при появлении исключения.</summary>
      <param name="filterContext">Контекст фильтра действий.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="filterContext" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.TypeId">
      <summary>Получает уникальный идентификатор этого атрибута.</summary>
      <returns>Уникальный идентификатор атрибута.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.View">
      <summary>Получает или задает представление страницы для отображения сведений об исключении.</summary>
      <returns>Представление страницы.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorInfo">
      <summary>Инкапсулирует сведения для обработки ошибки, вызванной методом действия.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorInfo.#ctor(System.Exception,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HandleErrorInfo" />.</summary>
      <param name="exception">Исключение.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="actionName">Имя действия.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="exception" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="controllerName" /> или <paramref name="actionName" /> имеет значение null или пуст.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ActionName">
      <summary>Получает или задает имя действия, которое выполнялось, когда было вызвано исключение.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ControllerName">
      <summary>Получает или задает имя контроллера, содержащего метод действия, который вызвал исключение.</summary>
      <returns>Имя контроллера.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.Exception">
      <summary>Возвращает или задает объект исключения.</summary>
      <returns>Объект исключения.</returns>
    </member>
    <member name="T:System.Web.Mvc.HiddenInputAttribute">
      <summary>Представляет атрибут, используемый для указания того, должно ли значение свойства или поля представляться как скрытый элемент input.</summary>
    </member>
    <member name="M:System.Web.Mvc.HiddenInputAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HiddenInputAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.HiddenInputAttribute.DisplayValue">
      <summary>Получает или задает значение, указывающее, требуется ли отображать значение скрытого элемента input.</summary>
      <returns>Значение true, если значение отображается. В противном случае — значение false.</returns>
    </member>
    <member name="T:System.Web.Mvc.Html5DateRenderingMode">
      <summary>Перечисляет режим отображения даты для HTML5.</summary>
    </member>
    <member name="F:System.Web.Mvc.Html5DateRenderingMode.CurrentCulture">
      <summary>Текущее форматирование для языка и региональных параметров.</summary>
    </member>
    <member name="F:System.Web.Mvc.Html5DateRenderingMode.Rfc3339">
      <summary>Форматирование RFC 3339.</summary>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper">
      <summary>Поддерживает визуализацию элементов управления HTML в представлении.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HtmlHelper" />, используя указанные контекст представления и контейнер данных представления.</summary>
      <param name="viewContext">Контекст представления.</param>
      <param name="viewDataContainer">Контейнер данных представления.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <see cref="T:System.Web.Mvc.ViewContext" /> или viewDataContainer равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HtmlHelper" />, используя указанные контекст представления, контейнер данных представления и коллекцию маршрутов.</summary>
      <param name="viewContext">Контекст представления.</param>
      <param name="viewDataContainer">Контейнер данных представления.</param>
      <param name="routeCollection">Коллекция маршрутов.</param>
      <exception cref="T:System.ArgumentNullException">Один или несколько параметров имеют значение null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
      <summary>Заменяет символы подчеркивания (_) дефисами (-) в заданных атрибутах HTML.</summary>
      <returns>Атрибуты HTML с символами подчеркивания, замененными дефисами.</returns>
      <param name="htmlAttributes">Атрибуты HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken">
      <summary>Генерирует скрытое поле формы (токен борьбы с фальсификацией), которое проверяется при отправке формы.</summary>
      <returns>Созданное поле формы (токен борьбы с фальсификацией).</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String)">
      <summary>Генерирует скрытое поле формы (токен борьбы с фальсификацией), которое проверяется при отправке формы.Значение поля генерируется с использованием заданного расширяющего значения.</summary>
      <returns>Созданное поле формы (токен борьбы с фальсификацией).</returns>
      <param name="salt">Расширяющее значение, которое может быть любой непустой строкой.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String,System.String,System.String)">
      <summary>Генерирует скрытое поле формы (токен борьбы с фальсификацией), которое проверяется при отправке формы.Значение поля генерируется с использованием заданного расширяющего значения, домена и пути.</summary>
      <returns>Созданное поле формы (токен борьбы с фальсификацией).</returns>
      <param name="salt">Расширяющее значение, которое может быть любой непустой строкой.</param>
      <param name="domain">Домен приложения.</param>
      <param name="path">Виртуальный путь.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.Object)">
      <summary>Преобразует указанное значение атрибута в строку в кодировке HTML.</summary>
      <returns>Строка в кодировке HTML.Если значение параметра равно NULL или пустое, этот метод возвращает пустую строку.</returns>
      <param name="value">Кодируемый объект.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.String)">
      <summary>Преобразует указанное значение атрибута в строку в кодировке HTML.</summary>
      <returns>Строка в кодировке HTML.Если значение параметра равно NULL или пустое, этот метод возвращает пустую строку.</returns>
      <param name="value">Кодируемая строка.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ClientValidationEnabled">
      <summary>Получает или задает значение, показывающее, включена ли проверка клиента.</summary>
      <returns>Значение true, если клиентская проверка включена. В противном случае — значение false.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation">
      <summary>Разрешает поверку входных данных, выполняемую с помощью скрипта клиента в браузере.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation(System.Boolean)">
      <summary>Включает или отключает клиентскую проверку.</summary>
      <param name="enabled">Значение true для включения клиентской проверки; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript">
      <summary>Включает или отключает ненавязчивый JavaScript.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript(System.Boolean)">
      <summary>Включает или отключает ненавязчивый JavaScript.</summary>
      <param name="enabled">Значение true для включения ненавязчивого JavaScript; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.Object)">
      <summary>Преобразует значение заданного объекта в строку в кодировке HTML.</summary>
      <returns>Строка в кодировке HTML.</returns>
      <param name="value">Кодируемый объект.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.String)">
      <summary>Преобразует указанную строку в строку в кодировке HTML.</summary>
      <returns>Строка в кодировке HTML.</returns>
      <param name="value">Кодируемая строка.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.FormatValue(System.Object,System.String)">
      <summary>Форматирует значение.</summary>
      <returns>Форматируемое значение.</returns>
      <param name="value">Значение.</param>
      <param name="format">Строка формата.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String)">
      <summary>Создает идентификатор HTML-элемента с использованием указанного имени элемента.</summary>
      <returns>Идентификатор HTML-элемента.</returns>
      <param name="name">Имя элемента HTML.</param>
      <exception cref="T:System.ArgumentNullException">Параметр name равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String,System.String)">
      <summary>Создает идентификатор HTML-элемента, используя указанное имя элемента и строку, которой замещаются точки в имени.</summary>
      <returns>Идентификатор HTML-элемента.</returns>
      <param name="name">Имя элемента HTML.</param>
      <param name="idAttributeDotReplacement">Строка, заменяющая точки (.) в параметре name.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра name или idAttributeDotReplacement равно null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Создает элемент привязки HTML (элемент a) со ссылкой на указанный метод действия и позволяет пользователю указать протокол связи, имя узла и фрагмент URL-адреса.</summary>
      <returns>Элемент HTML, обеспечивающий ссылку на заданный метод действия.</returns>
      <param name="requestContext">Контекст HTTP-запроса.</param>
      <param name="routeCollection">Коллекция маршрутов URL-адресов.</param>
      <param name="linkText">Текстовая подпись, отображаемая для ссылки.</param>
      <param name="routeName">Имя маршрута, используемого для возврата виртуального пути.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="protocol">Протокол связи, например HTTP или HTTPS.Если этот параметр имеет значение NULL, по умолчанию используется протокол HTTP.</param>
      <param name="hostName">Имя узла.</param>
      <param name="fragment">Идентификатор фрагмента.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Создает элемент привязки HTML (элемент a), обеспечивающий ссылку на заданный метод действия.</summary>
      <returns>Элемент HTML, обеспечивающий ссылку на заданный метод действия.</returns>
      <param name="requestContext">Контекст HTTP-запроса.</param>
      <param name="routeCollection">Коллекция маршрутов URL-адресов.</param>
      <param name="linkText">Текстовая подпись, отображаемая для ссылки.</param>
      <param name="routeName">Имя маршрута, используемого для возврата виртуального пути.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Создает элемент привязки HTML (элемент a) со ссылкой на указанный URL-маршрут и позволяет пользователю указать протокол связи, имя узла и фрагмент URL-адреса.</summary>
      <returns>Элемент HTML, обеспечивающий ссылку на заданный маршрут URL-адреса.</returns>
      <param name="requestContext">Контекст HTTP-запроса.</param>
      <param name="routeCollection">Коллекция маршрутов URL-адресов.</param>
      <param name="linkText">Текстовая подпись, отображаемая для ссылки.</param>
      <param name="routeName">Имя маршрута, используемого для возврата виртуального пути.</param>
      <param name="protocol">Протокол связи, например HTTP или HTTPS.Если этот параметр имеет значение NULL, по умолчанию используется протокол HTTP.</param>
      <param name="hostName">Имя узла.</param>
      <param name="fragment">Идентификатор фрагмента.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Создает элемент привязки HTML (элемент a) со ссылкой на заданный URL-маршрут.</summary>
      <returns>Элемент HTML, обеспечивающий ссылку на заданный маршрут URL-адреса.</returns>
      <param name="requestContext">Контекст HTTP-запроса.</param>
      <param name="routeCollection">Коллекция маршрутов URL-адресов.</param>
      <param name="linkText">Текстовая подпись, отображаемая для ссылки.</param>
      <param name="routeName">Имя маршрута, используемого для возврата виртуального пути.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetFormMethodString(System.Web.Mvc.FormMethod)">
      <summary>Возвращает метод HTTP, обрабатывающий ввод формы (GET или POST) в виде строки.</summary>
      <returns>Строка метода формы, "get" или "post".</returns>
      <param name="method">Метод HTTP, обрабатывающий форму.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetInputTypeString(System.Web.Mvc.InputType)">
      <summary>Возвращает тип элемента управления ввода HTML в виде строки.</summary>
      <returns>Строка типа ввода ("checkbox", "hidden", "password", "radio" или "text").</returns>
      <param name="inputType">Перечислимый тип ввода.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String)">
      <summary>Получает коллекцию атрибутов ненавязчивой проверки JavaScript с помощью указанного атрибута HTML name.</summary>
      <returns>Коллекция атрибутов проверки ненавязчивого JavaScript.</returns>
      <param name="name">Атрибут HTML name.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String,System.Web.Mvc.ModelMetadata)">
      <summary>Получает коллекцию атрибутов ненавязчивой проверки JavaScript с помощью указанного атрибута HTML name и метаданных модели.</summary>
      <returns>Коллекция атрибутов проверки ненавязчивого JavaScript.</returns>
      <param name="name">Атрибут HTML name.</param>
      <param name="metadata">Метаданные модели.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.Html5DateRenderingMode">
      <summary>Возвращает или задает режим отображения даты в HTML5.</summary>
      <returns>Режим отображения даты в HTML5.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.String)">
      <summary>Возвращает скрытый элемент input, указывающий метод переопределения для заданного метода передачи данных по протоколу HTTP, который использовался клиентом.</summary>
      <returns>Переопределяющий метод, использующий метод передачи данных HTTP, использованный клиентом.</returns>
      <param name="httpMethod">Метод передачи данных по протоколу НТТР, который использовался клиентом (DELETE, HEAD или PUT).</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра httpVerb отличается от PUT, DELETE и HEAD.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.Web.Mvc.HttpVerbs)">
      <summary>Возвращает скрытый элемент input , указывающий метод переопределения для указанной команды, представляющей метод передачи данных по протоколу HTTP, используемый клиентом.</summary>
      <returns>Переопределяющий метод, использующий команду, представляющую метод передачи данных по протоколу НТТР, использованный клиентом.</returns>
      <param name="httpVerb">Команда, представляющая метод передачи данных по протоколу HTTP, использованный клиентом.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра httpVerb отличается от PUT, DELETE и HEAD.</exception>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.IdAttributeDotReplacement">
      <summary>Получает или задает символ, замещающий точки в атрибуте ID элемента.</summary>
      <returns>Символ, замещающий точки в атрибуте ID элемента.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.ObjectToDictionary(System.Object)">
      <summary>Создает словарь из объекта, добавляя каждое открытое свойство экземпляра в качестве ключа вместе со связанным значением в словаре.Кроме того, предоставляет открытые свойства из производных типов.Обычно это используется в объектах анонимного типа.</summary>
      <returns>Созданный словарь имен свойств и значений свойств.</returns>
      <param name="value">Объект для преобразования.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Raw(System.Object)">
      <summary>Возвращает разметку без кодировки HTML.</summary>
      <returns>Разметка HTML без кодировки.</returns>
      <param name="value">HTML-разметка.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Raw(System.String)">
      <summary>Возвращает разметку без кодировки HTML.</summary>
      <returns>Разметка HTML без кодировки.</returns>
      <param name="value">HTML-разметка.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.RouteCollection">
      <summary>Получает или задает коллекцию маршрутов для приложения.</summary>
      <returns>Коллекция маршрутов для приложения.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.SetValidationMessageElement(System.String)">
      <summary>Назначает имя элемента для помещения в оболочку сообщения проверки, созданного <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" />, и других перегрузок.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.SetValidationSummaryMessageElement(System.String)">
      <summary>Назначает имя элемента для помещения в оболочку сообщения верхнего уровня в <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" /> и других перегрузок.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.UnobtrusiveJavaScriptEnabled">
      <summary>Получает или задает значение, показывающее, включен ли ненавязчивый JavaScript.</summary>
      <returns>Значение true, если ненавязчивый JavaScript включен. В противном случае — значение false.</returns>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputCssClassName">
      <summary>Имя класса CSS, используемого для стиля текстового поля ввода данных при ошибке проверки.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputValidCssClassName">
      <summary>Имя класса CSS, используемого для стиля текстового поля ввода данных, если введенные данные допустимы.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageCssClassName">
      <summary>Имя класса CSS, используемого для стиля сообщения об ошибке при ошибке проверки.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ValidationMessageElement">
      <summary>Имя элемента для помещения в оболочку сообщения проверки, созданного <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" />, и других перегрузок.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageValidCssClassName">
      <summary>Имя класса CSS, используемого для стиля сообщения о проверке, если ввод был допустимым.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryCssClassName">
      <summary>Имя класса CSS, используемого для стиля сообщений об ошибках сводки проверки.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ValidationSummaryMessageElement">
      <summary>Имя элемента для помещения в оболочку сообщения верхнего уровня в <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" /> и других перегрузок.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryValidCssClassName">
      <summary>Имя класса CSS, используемого для стиля сводки проверки, если ввод был допустимым.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewBag">
      <summary>Получает пакет представления.</summary>
      <returns>Пакет представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewContext">
      <summary>Получает или задает контекстную информацию о представлении.</summary>
      <returns>Контекст представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewData">
      <summary>Получает текущий словарь данных представления.</summary>
      <returns>Словарь данных представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewDataContainer">
      <summary>Получает или задает контейнер данных представления.</summary>
      <returns>Контейнер данных представления.</returns>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper`1">
      <summary>Представляет поддержку для визуализации элементов управления HTML в строго типизированном представлении.</summary>
      <typeparam name="TModel">Тип модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HtmlHelper`1" />, используя указанные контекст представления и контейнер данных представления.</summary>
      <param name="viewContext">Контекст представления.</param>
      <param name="viewDataContainer">Контейнер данных представления.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HtmlHelper`1" />, используя указанные контекст представления, контейнер данных представления и коллекцию маршрутов.</summary>
      <param name="viewContext">Контекст представления.</param>
      <param name="viewDataContainer">Контейнер данных представления.</param>
      <param name="routeCollection">Коллекция маршрутов.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewBag">
      <summary>Получает пакет представления.</summary>
      <returns>Пакет представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewData">
      <summary>Получает словарь данных строго типизированного представления.</summary>
      <returns>Словарь данных строго типизированного представления.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpDeleteAttribute">
      <summary>Представляет атрибут, используемый для ограничения метода действия таким образом, чтобы этот метод обрабатывал только HTTP-запросы DELETE.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpDeleteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Определяет, допустим ли запрос DELETE метода действия для указанного контекста контроллера.</summary>
      <returns>Значение true, если запрос метода действия допустим для указанного контекста контроллера. Иначе — значение false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="methodInfo">Сведения о методе действия.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProvider">
      <summary>Представляет поставщик значений для использования со значениями, поступающими из коллекции файлов HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpFileCollectionValueProvider" />.</summary>
      <param name="controllerContext">Объект, инкапсулирующий сведения о текущем HTTP-запросе.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory">
      <summary>Представляет класс, ответственный за создание нового экземпляра объекта поставщика значений коллекции файлов HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Возвращает объект поставщика значения для заданного контекста контроллера.</summary>
      <returns>Поставщик значений коллекции файлов HTTP.</returns>
      <param name="controllerContext">Объект, инкапсулирующий сведения об HTTP-запросе.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerContext" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpGetAttribute">
      <summary>Представляет атрибут, используемый для ограничения метода действия таким образом, чтобы этот метод обрабатывал только HTTP-запросы GET.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpGetAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Определяет, допустим ли запрос GET метода действия для указанного контекста контроллера.</summary>
      <returns>Значение true, если запрос метода действия допустим для указанного контекста контроллера. Иначе — значение false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="methodInfo">Сведения о методе действия.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpHeadAttribute">
      <summary>Указывает, что HTTP-запрос должен использовать HTTP-метод HEAD.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpHeadAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpHeadAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpHeadAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Определяет, допустим ли запрос метода действия для указанного контекста контроллера.</summary>
      <returns>Значение true, если запрос метода действия допустим для указанного контекста контроллера. Иначе — значение false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="methodInfo">Сведения о методе действия.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpNotFoundResult">
      <summary>Определяет объект, используемый для указания того, что не удалось найти запрошенный ресурс.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpNotFoundResult" />, используя описание состояния.</summary>
      <param name="statusDescription">Описание состояния.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpOptionsAttribute">
      <summary>Представляет атрибут, используемый для ограничения метода действия таким образом, чтобы этот метод обрабатывал только HTTP-запросы OPTIONS.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpOptionsAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpOptionsAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpOptionsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Определяет, допустим ли запрос метода действия для указанного контекста контроллера.</summary>
      <returns>Значение true, если запрос метода действия допустим для указанного контекста контроллера. Иначе — значение false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="methodInfo">Сведения о методе действия.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPatchAttribute">
      <summary>Представляет атрибут, используемый для ограничения метода действия таким образом, чтобы этот метод обрабатывал только HTTP-запросы PATCH.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPatchAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpPatchAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPatchAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Определяет, допустим ли запрос метода действия для указанного контекста контроллера.</summary>
      <returns>Значение true, если запрос метода действия допустим для указанного контекста контроллера. Иначе — значение false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="methodInfo">Сведения о методе действия.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostAttribute">
      <summary>Представляет атрибут, используемый для ограничения метода действия таким образом, чтобы этот метод обрабатывал только HTTP-запросы POST.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpPostAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Определяет, допустим ли запрос POST метода действия для указанного контекста контроллера.</summary>
      <returns>Значение true, если запрос метода действия допустим для указанного контекста контроллера. Иначе — значение false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="methodInfo">Сведения о методе действия.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostedFileBaseModelBinder">
      <summary>Связывает модель с переданным файлом.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpPostedFileBaseModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Выполняет привязку модели.</summary>
      <returns>Значение привязки.Реализации<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="bindingContext">Контекст привязки.</param>
      <exception cref="T:System.ArgumentNullException">Один или оба параметра имеют значение null.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpPutAttribute">
      <summary>Представляет атрибут, используемый для ограничения метода действия таким образом, чтобы этот метод обрабатывал только HTTP-запросы PUT.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpPutAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Определяет, допустим ли запрос PUT метода действия для указанного контекста контроллера.</summary>
      <returns>Значение true, если запрос метода действия допустим для указанного контекста контроллера. Иначе — значение false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="methodInfo">Сведения о методе действия.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpRequestExtensions">
      <summary>Расширяет класс <see cref="T:System.Web.HttpRequestBase" />, который содержит значения HTTP, отправленные клиентом во время веб-запроса.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpRequestExtensions.GetHttpMethodOverride(System.Web.HttpRequestBase)">
      <summary>Извлекает переопределяющий метод передачи данных HTTP, использованный клиентом.</summary>
      <returns>Переопределяющий метод передачи данных HTTP, использованный клиентом.</returns>
      <param name="request">Объект, содержащий значения HTTP, отправленные клиентом во время веб-запроса.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="request" /> равен null.</exception>
      <exception cref="T:System.NotImplementedException">Переопределение метода передачи данных HTTP не было реализовано.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpStatusCodeResult">
      <summary>Предоставляет метод для возвращения результата действия с определенным кодом состояния и описанием HTTP-ответа.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> с помощью кода состояния.</summary>
      <param name="statusCode">Код состояния.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpStatusCodeResult" />, используя описание код состояния и описание состояния.</summary>
      <param name="statusCode">Код состояния.</param>
      <param name="statusDescription">Описание состояния.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Net.HttpStatusCode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> с помощью кода состояния.</summary>
      <param name="statusCode">Код состояния.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Net.HttpStatusCode,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpStatusCodeResult" />, используя описание код состояния и описание состояния.</summary>
      <param name="statusCode">Код состояния.</param>
      <param name="statusDescription">Описание состояния.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Разрешает обработку результата выполнения метода действия пользовательским типом, наследуемым от класса <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Контекст, в котором выполняется результат.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusCode">
      <summary>Получает код состояния HTTP.</summary>
      <returns>Код состояния HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusDescription">
      <summary>Получает описание состояния HTTP.</summary>
      <returns>Описание состояния HTTP.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpUnauthorizedResult">
      <summary>Представляет результат несанкционированного HTTP-запроса.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" />, используя описание состояния.</summary>
      <param name="statusDescription">Описание состояния.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpVerbs">
      <summary>Перечисляет HTTP-команды.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Delete">
      <summary>Запрашивает удаление указанного универсального кода ресурса (URI).</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Get">
      <summary>Извлекает сведения или сущность, определенные универсальным кодом ресурса (URI) запроса.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Head">
      <summary>Извлекает заголовки сообщений для сведений или сущности, определенных универсальным кодом ресурса (URI) запроса.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Options">
      <summary>Представляет запрос сведений о вариантах связи, доступных для цепочки запросов и ответов, по Request-URI.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Patch">
      <summary>Запрашивает применение набора изменений, описанных в объекте запроса, к ресурсу, на который указывает Request-URI.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Post">
      <summary>Публикует новую сущность в качестве дополнения к универсальному коду ресурса (URI).</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Put">
      <summary>Заменяет сущность, определенную универсальным кодом ресурса (URI).</summary>
    </member>
    <member name="T:System.Web.Mvc.IActionFilter">
      <summary>Определяет методы, используемые в фильтре действия.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Вызывается после выполнения метода действия.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Вызывается до выполнения метода действия.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="T:System.Web.Mvc.IActionInvoker">
      <summary>Определяет контракт для модуля вызова действия, который используется для вызова действия в ответ на HTTP-запрос.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Вызывает указанное действие, используя заданный контекст контроллера.</summary>
      <returns>Значение true, если действие найдено. В противном случае — значение false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionName">Имя действия.</param>
    </member>
    <member name="T:System.Web.Mvc.IActionInvokerFactory">
      <summary>Использовалось для создания экземпляра <see cref="T:System.Web.Mvc.IActionInvoker" /> для текущего запроса.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionInvokerFactory.CreateInstance">
      <summary>Создает экземпляр, вызывающий действие для текущего запроса.</summary>
      <returns>Созданный <see cref="T:System.Web.Mvc.IActionInvoker" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.IAuthorizationFilter">
      <summary>Определяет методы, которые требуются для фильтра авторизации.</summary>
    </member>
    <member name="M:System.Web.Mvc.IAuthorizationFilter.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Вызывается, когда требуется авторизация.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="T:System.Web.Mvc.IClientValidatable">
      <summary>Предоставляет платформе проверки ASP.NET MVC способ обнаружения того, поддерживает ли проверяющий элемент управления клиентскую проверку, во время выполнения.</summary>
    </member>
    <member name="M:System.Web.Mvc.IClientValidatable.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>При реализации в производном классе возвращает правила клиентской проверки для этого класса.</summary>
      <returns>Правила клиентской проверки для этого проверяющего элемента управления.</returns>
      <param name="metadata">Метаданные модели.</param>
      <param name="context">Контекст контроллера.</param>
    </member>
    <member name="T:System.Web.Mvc.IController">
      <summary>Определяет методы, которые требуются для контроллера.</summary>
    </member>
    <member name="M:System.Web.Mvc.IController.Execute(System.Web.Routing.RequestContext)">
      <summary>Выполняет указанный контекст запроса.</summary>
      <param name="requestContext">Контекст запроса.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerActivator">
      <summary>Предоставляет возможность точного управления созданием экземпляров контроллеров с помощью внедрения зависимости.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerActivator.Create(System.Web.Routing.RequestContext,System.Type)">
      <summary>При реализации в классе создает контроллер.</summary>
      <returns>Созданный контроллер.</returns>
      <param name="requestContext">Контекст запроса.</param>
      <param name="controllerType">Тип контроллера.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerFactory">
      <summary>Определяет методы, которые требуются для фабрики контроллеров.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Создает указанный контроллер, используя заданный контекст запроса.</summary>
      <returns>Контроллер.</returns>
      <param name="requestContext">Контекст запроса.</param>
      <param name="controllerName">Имя контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Получает или задает поведение сеанса контроллера.</summary>
      <returns>Поведение сеанса контроллера.</returns>
      <param name="requestContext">Контекст запроса.</param>
      <param name="controllerName">Имя контроллера, поведение сеанса которого нужно получить.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Освобождает указанный контроллер.</summary>
      <param name="controller">Контроллер.</param>
    </member>
    <member name="T:System.Web.Mvc.IDependencyResolver">
      <summary>Определяет методы, упрощающие поиск служб и разрешение зависимостей.</summary>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)">
      <summary>Разрешает однократно зарегистрированные службы, поддерживающие создание произвольных объектов.</summary>
      <returns>Запрошенная служба или объект.</returns>
      <param name="serviceType">Тип запрошенной службы или объекта.</param>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)">
      <summary>Разрешает многократно зарегистрированные службы.</summary>
      <returns>Запрошенные службы.</returns>
      <param name="serviceType">Тип запрашиваемых служб.</param>
    </member>
    <member name="T:System.Web.Mvc.IEnumerableValueProvider">
      <summary>Представляет специальный <see cref="T:System.Web.Mvc.IValueProvider" />, поддерживающий перечисление.</summary>
    </member>
    <member name="M:System.Web.Mvc.IEnumerableValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Получает ключи из префикса.</summary>
      <returns>Ключи.</returns>
      <param name="prefix">Префикс.</param>
    </member>
    <member name="T:System.Web.Mvc.IExceptionFilter">
      <summary>Определяет методы, которые требуются для фильтра исключений.</summary>
    </member>
    <member name="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Вызывается при появлении исключения.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="T:System.Web.Mvc.IFilterProvider">
      <summary>Предоставляет интерфейс для поиска фильтров.</summary>
    </member>
    <member name="M:System.Web.Mvc.IFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Возвращает перечислитель, содержащий все экземпляры <see cref="T:System.Web.Mvc.IFilterProvider" />, расположенные в локаторе службы.</summary>
      <returns>Перечислитель, содержащий все экземпляры <see cref="T:System.Web.Mvc.IFilterProvider" />, расположенные в локаторе службы.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
    </member>
    <member name="T:System.Web.Mvc.IMetadataAware">
      <summary>Предоставляет интерфейс для доступа к атрибутам класса <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.IMetadataAware.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>При реализации в классе предоставляет метаданные для процесса создания метаданных модели.</summary>
      <param name="metadata">Метаданные модели.</param>
    </member>
    <member name="T:System.Web.Mvc.IMethodInfoActionDescriptor">
      <summary>Дополнительный интерфейс для типов <see cref="T:System.Web.Mvc.ActionDescriptor" />, который предоставляет <see cref="P:System.Web.Mvc.IMethodInfoActionDescriptor.MethodInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.IMethodInfoActionDescriptor.MethodInfo">
      <summary>Получает значение MethodInfo</summary>
    </member>
    <member name="T:System.Web.Mvc.IModelBinder">
      <summary>Определяет методы, которые требуются для связывателя модели.</summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Привязывает модель к значению, используя указанный контекст контроллера и контекст привязки.</summary>
      <returns>Значение привязки.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="bindingContext">Контекст привязки.</param>
    </member>
    <member name="T:System.Web.Mvc.IModelBinderProvider">
      <summary>Определяет методы, разрешающие динамическую реализацию привязки модели для классов, реализующих интерфейс <see cref="T:System.Web.Mvc.IModelBinder" />. </summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinderProvider.GetBinder(System.Type)">
      <summary>Возвращает связыватель модели указанного типа.</summary>
      <returns>Связыватель модели указанного типа.</returns>
      <param name="modelType">Тип модели.</param>
    </member>
    <member name="T:System.Web.Mvc.IMvcFilter">
      <summary>Определяет члены, указывающие порядок фильтров и то, разрешено ли использовать несколько фильтров.</summary>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.AllowMultiple">
      <summary>При реализации в классе получает или задает значение, указывающее, разрешено ли использовать несколько фильтров.</summary>
      <returns>Значение true, если использование нескольких фильтров разрешено. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.Order">
      <summary>При реализации в классе получает порядок фильтра.</summary>
      <returns>Порядок фильтра.</returns>
    </member>
    <member name="T:System.Web.Mvc.InputType">
      <summary>Перечисляет типы элементов управления для ввода.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.CheckBox">
      <summary>Флажок.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Hidden">
      <summary>Скрытое поле.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Password">
      <summary>Поле пароля.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Radio">
      <summary>Переключатель.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Text">
      <summary>Текстовое поле.</summary>
    </member>
    <member name="T:System.Web.Mvc.IResultFilter">
      <summary>Определяет методы, которые требуются для фильтра результатов.</summary>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Вызывается после выполнения результата действия.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Вызывается до выполнения результата действия.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="T:System.Web.Mvc.IRouteWithArea">
      <summary>Связывает маршрут с областью в приложении MVC ASP.NET.</summary>
    </member>
    <member name="P:System.Web.Mvc.IRouteWithArea.Area">
      <summary>Получает имя области, с которой требуется связать маршрут.</summary>
      <returns>Имя области, с которой требуется связать маршрут.</returns>
    </member>
    <member name="T:System.Web.Mvc.ITempDataProvider">
      <summary>Определяет контракт для поставщиков временных данных, хранящих данные, которые просматриваются при следующем запросе.</summary>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Загружает временные данные.</summary>
      <returns>Временные данные.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Сохраняет временные данные.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="values">Значения.</param>
    </member>
    <member name="T:System.Web.Mvc.ITempDataProviderFactory">
      <summary>Использовалось для создания экземпляра <see cref="T:System.Web.Mvc.ITempDataProvider" /> для контроллера.</summary>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProviderFactory.CreateInstance">
      <summary>Создает экземпляр <see cref="T:System.Web.Mvc.ITempDataProvider" /> для контроллера.</summary>
      <returns>Созданный <see cref="T:System.Web.Mvc.ITempDataProvider" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.IUnvalidatedValueProvider">
      <summary>Представляет интерфейс <see cref="T:System.Web.Mvc.IValueProvider" />, который может пропускать проверку запросов.</summary>
    </member>
    <member name="M:System.Web.Mvc.IUnvalidatedValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Извлекает значение объекта, связанное с заданным ключом.</summary>
      <returns>Значения объекта для заданного ключа.</returns>
      <param name="key">Ключ.</param>
      <param name="skipValidation">Значение true, если проверка пропускается. В противном случае — значение false.</param>
    </member>
    <member name="T:System.Web.Mvc.IValueProvider">
      <summary>Определяет методы, которые требуются поставщику значений в MVC ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.ContainsPrefix(System.String)">
      <summary>Определяет, содержит ли коллекция указанный префикс.</summary>
      <returns>Значение true, если коллекция содержит заданный префикс. В противном случае — значение false.</returns>
      <param name="prefix">Искомый префикс.</param>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.GetValue(System.String)">
      <summary>Извлекает объект значения, используя указанный ключ.</summary>
      <returns>Объект значения для указанного ключа или NULL, если ключ не найден.</returns>
      <param name="key">Ключ извлекаемого объекта значения.</param>
    </member>
    <member name="T:System.Web.Mvc.IView">
      <summary>Определяет методы, которые требуются для представления.</summary>
    </member>
    <member name="M:System.Web.Mvc.IView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Визуализирует указанный контекст представления, используя заданный объект модуля записи.</summary>
      <param name="viewContext">Контекст представления.</param>
      <param name="writer">Объект модуля записи.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewDataContainer">
      <summary>Определяет методы, которые требуются для словаря данных представления.</summary>
    </member>
    <member name="P:System.Web.Mvc.IViewDataContainer.ViewData">
      <summary>Получает или задает словарь данных представления.</summary>
      <returns>Словарь данных представления.</returns>
    </member>
    <member name="T:System.Web.Mvc.IViewEngine">
      <summary>Определяет методы, которые требуются для обработчика представлений.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Находит указанное частичное представление, используя заданный контекст контроллера.</summary>
      <returns>Частичное представление.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="partialViewName">Имя частичного представления.</param>
      <param name="useCache">Значение true для указания того, что обработчик представлений возвращает кэшированное представление, если оно существует; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Находит указанное представление, используя заданный контекст контроллера.</summary>
      <returns>Представление страницы.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="viewName">Имя представления.</param>
      <param name="masterName">Имя главного представления.</param>
      <param name="useCache">Значение true для указания того, что обработчик представлений возвращает кэшированное представление, если оно существует; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Освобождает указанное представление, используя заданный контекст контроллера.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="view">Представление.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewLocationCache">
      <summary>Определяет методы, которые требуются для кэширования расположений представлений в памяти.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Получает расположение представления, используя указанные контекст HTTP и ключ кэша.</summary>
      <returns>Расположение представления.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="key">Ключ кэша.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Вставляет указанное расположение представления в кэш, используя заданные контекст HTTP и ключ кэша.</summary>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="key">Ключ кэша.</param>
      <param name="virtualPath">Виртуальный путь.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewPageActivator">
      <summary>Предоставляет возможность точного управления созданием экземпляров страниц представления с помощью внедрения зависимости.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewPageActivator.Create(System.Web.Mvc.ControllerContext,System.Type)">
      <summary>Предоставляет возможность точного управления созданием экземпляров страниц представления с помощью внедрения зависимости.</summary>
      <returns>Созданная страница представления.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="type">Тип контроллера.</param>
    </member>
    <member name="T:System.Web.Mvc.JavaScriptResult">
      <summary>Отправляет в ответ содержимое JavaScript.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.JavaScriptResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Разрешает обработку результата выполнения метода действия пользовательским типом, наследуемым от класса <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Контекст, в котором выполняется результат.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.JavaScriptResult.Script">
      <summary>Получает или задает сценарий.</summary>
      <returns>Сценарий.</returns>
    </member>
    <member name="T:System.Web.Mvc.JQueryFormValueProvider">
      <summary>ValueProvider формы JQuery используется для обработки данных формата JQuery в формах запроса.</summary>
    </member>
    <member name="M:System.Web.Mvc.JQueryFormValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Создает экземпляр ValueProvider формы JQuery</summary>
      <param name="controllerContext">Контекст, в котором работает значение ValueProvider.</param>
    </member>
    <member name="T:System.Web.Mvc.JQueryFormValueProviderFactory">
      <summary>Предоставляет необходимое значение ValueProvider для управления данными формы JQuery.</summary>
    </member>
    <member name="M:System.Web.Mvc.JQueryFormValueProviderFactory.#ctor">
      <summary>Создает новый экземпляр фабрики, который предоставляет значения ValueProvider формы JQuery.</summary>
    </member>
    <member name="M:System.Web.Mvc.JQueryFormValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Возвращает подходящее значение ValueProvider.</summary>
      <param name="controllerContext">Контекст, в котором должно работать значение ValueProvider.</param>
    </member>
    <member name="T:System.Web.Mvc.JsonRequestBehavior">
      <summary>Задает, разрешены ли HTTP-запросы GET от клиента.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.AllowGet">
      <summary>HTTP-запросы GET от клиента разрешены.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.DenyGet">
      <summary>HTTP-запросы GET от клиента запрещены.</summary>
    </member>
    <member name="T:System.Web.Mvc.JsonResult">
      <summary>Представляет класс, используемый для отправки в ответ содержимого в формате JSON.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.JsonResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentEncoding">
      <summary>Получает или задает кодировку содержимого.</summary>
      <returns>Кодировка содержимого.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentType">
      <summary>Получает или задает тип содержимого.</summary>
      <returns>Тип содержимого.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.Data">
      <summary>Получает или задает данные.</summary>
      <returns>Данные.</returns>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Разрешает обработку результата выполнения метода действия пользовательским типом, наследуемым от класса <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Контекст, в котором выполняется результат.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.JsonRequestBehavior">
      <summary>Получает или задает значение, указывающее, разрешены ли HTTP-запросы GET от клиента.</summary>
      <returns>Значение, указывающее, разрешены ли HTTP-запросы GET от клиента.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.MaxJsonLength">
      <summary>Возвращает или задает максимальную длину данных.</summary>
      <returns>Максимальная длина данных.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.RecursionLimit">
      <summary>Получает или задает предел рекурсии.</summary>
      <returns>Предел рекурсии.</returns>
    </member>
    <member name="T:System.Web.Mvc.JsonValueProviderFactory">
      <summary>Позволяет методам действия передавать и получать текст в формате JSON и осуществлять привязку модели текста JSON к параметрам методам действий.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.JsonValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Возвращает объект поставщика значений JSON для заданного контекста контроллера.</summary>
      <returns>Объект JSON поставщика значения для заданного контекста контроллера.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
    </member>
    <member name="T:System.Web.Mvc.LinqBinaryModelBinder">
      <summary>Отображает запрос браузера в объект LINQ <see cref="T:System.Data.Linq.Binary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.LinqBinaryModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Выполняет привязку модели, используя указанные контекст контроллера и контекст привязки.</summary>
      <returns>Объект привязанных данных.Если привязка модели невозможна, этот метод возвращает значение null.Реализации<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" />.</returns>
      <param name="controllerContext">Контекст, в котором функционирует контроллер.Сведения о контексте включают информацию о контроллере, HTTP-содержимом, контексте запроса и данных маршрута.</param>
      <param name="bindingContext">Контекст, в котором привязана модель.Контекст содержит такие сведения, как объект модели, имя модели, тип модели, фильтр свойств и поставщик значений.</param>
    </member>
    <member name="T:System.Web.Mvc.MaxLengthAttributeAdapter">
      <summary>Предоставляет адаптер для атрибута MaxLengthAttribute.</summary>
    </member>
    <member name="M:System.Web.Mvc.MaxLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.MaxLengthAttribute)">
      <summary>Инициализирует экземпляр нового класса MaxLengthAttribute.</summary>
      <param name="metadata">Метаданные модели.</param>
      <param name="context">Контекст контроллера.</param>
      <param name="attribute">Атрибут MaxLength.</param>
    </member>
    <member name="M:System.Web.Mvc.MaxLengthAttributeAdapter.GetClientValidationRules">
      <summary>Получает список правил клиентской проверки для проверки максимальной длины.</summary>
      <returns>Список правил клиентской проверки, используемый для проверки.</returns>
    </member>
    <member name="T:System.Web.Mvc.MinLengthAttributeAdapter">
      <summary>Предоставляет адаптер для атрибута MinLengthAttribute.</summary>
    </member>
    <member name="M:System.Web.Mvc.MinLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.MinLengthAttribute)">
      <summary>Инициализирует новый экземпляр класса MinLenghtAttribute.</summary>
      <param name="metadata">Метаданные модели.</param>
      <param name="context">Контекст контроллера.</param>
      <param name="attribute">Атрибут минимальной длины.</param>
    </member>
    <member name="M:System.Web.Mvc.MinLengthAttributeAdapter.GetClientValidationRules">
      <summary>Получает список правил клиентской проверки для проверки минимальной длины.</summary>
      <returns>Список правил клиентской проверки, используемый для проверки.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderAttribute">
      <summary>Представляет атрибут, используемый для сопоставления типа модели с типом построителя модели.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelBinderAttribute" />.</summary>
      <param name="binderType">Тип связывателя.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="binderType" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderAttribute.BinderType">
      <summary>Получает или задает тип связывателя.</summary>
      <returns>Тип связывателя.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.GetBinder">
      <summary>Извлекает экземпляр связывателя модели.</summary>
      <returns>Ссылка на объект, реализующий интерфейс <see cref="T:System.Web.Mvc.IModelBinder" />.</returns>
      <exception cref="T:System.InvalidOperationException">При создании экземпляра связывателя модели возникла ошибка.</exception>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderDictionary">
      <summary>Представляет класс, содержащий все связыватели моделей для приложения, перечисленные по типу связывателей.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelBinderDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Добавляет указанный элемент в словарь связывателя модели.</summary>
      <param name="item">Объект, который требуется добавить в экземпляр <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Type,System.Web.Mvc.IModelBinder)">
      <summary>Добавляет указанный элемент в словарь связывателя модели, используя заданный ключ.</summary>
      <param name="key">Ключ добавляемого элемента.</param>
      <param name="value">Добавляемое значение элемента.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IDictionary`2" /> доступен только для чтения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Элемент, имеющий такой ключ, уже существует в объекте <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Clear">
      <summary>Удаляет все элементы из словаря связывателя модели.</summary>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Определяет, содержит ли словарь связывателя модели указанное значение.</summary>
      <returns>Значение true, если <paramref name="item" /> найден в словаре связывателей модели. В противном случае — значение false.</returns>
      <param name="item">Объект, который требуется найти в объекте <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.ContainsKey(System.Type)">
      <summary>Определяет, содержит ли словарь связывателя модели элемент, имеющий указанный ключ.</summary>
      <returns>Значение true, если словарь связывателей модели содержит элемент с указанным ключом. В противном случае — значение false.</returns>
      <param name="key">Ключ, который требуется найти в объекте <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder}[],System.Int32)">
      <summary>Копирует элементы словаря связывателя модели в массив, начиная с указанного индекса.</summary>
      <param name="array">Одномерный массив, в который копируются элементы из коллекции <see cref="T:System.Collections.Generic.ICollection`1" />.Индексация в массиве должна вестись с нуля.</param>
      <param name="arrayIndex">Отсчитываемый с нуля индекс в массиве <paramref name="array" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="arrayIndex" /> меньше 0.</exception>
      <exception cref="T:System.ArgumentException">Массив <paramref name="array" /> является многомерным.– или – Параметр <paramref name="arrayIndex" /> равен или больше длины <paramref name="array" />.– или – Количество элементов в исходном объекте <see cref="T:System.Collections.Generic.ICollection`1" /> больше доступного пространства от индекса массива <paramref name="arrayIndex" /> до конца массива назначения. – или – Тип <paramref name="T" /> нельзя автоматически привести к типу массива назначения.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Count">
      <summary>Получает число элементов в словаре связывателя модели.</summary>
      <returns>Число элементов в словаре связывателя модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.DefaultBinder">
      <summary>Получает или задает связыватель модели по умолчанию.</summary>
      <returns>Связыватель модели по умолчанию.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type)">
      <summary>Извлекает связыватель модели указанного типа.</summary>
      <returns>Связыватель модели.</returns>
      <param name="modelType">Тип модели для извлечения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="modelType" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type,System.Boolean)">
      <summary>Извлекает связыватель модели указанного типа или связыватель модели по умолчанию.</summary>
      <returns>Связыватель модели.</returns>
      <param name="modelType">Тип модели для извлечения.</param>
      <param name="fallbackToDefault">Значение true для извлечения связывателя модели по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="modelType" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetEnumerator">
      <summary>Возвращает перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</summary>
      <returns>Перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.IsReadOnly">
      <summary>Получает значение, указывающее, доступен ли словарь связывателя модели только для чтения.</summary>
      <returns>Значение true, если словарь связывателей модели доступен только для чтения. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Item(System.Type)">
      <summary>Получает или задает указанный ключ в объекте, который реализует интерфейс <see cref="T:System.Web.Mvc.IModelBinder" />.</summary>
      <returns>Ключ указанного элемента.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Keys">
      <summary>Получает коллекцию, содержащую ключи в словаре связывателя модели.</summary>
      <returns>Коллекция, содержащая ключи в словаре связывателя модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Удаляет первое вхождение указанного элемента из словаря связывателя модели.</summary>
      <returns>Значение true, если <paramref name="item" /> успешно удален из словаря связывателей модели. В противном случае — значение false.Этот метод также возвращает значение false, если <paramref name="item" /> не найден в словаре связывателей модели.</returns>
      <param name="item">Объект, который необходимо удалить из объекта <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Type)">
      <summary>Удаляет элемент с заданным ключом из словаря связывателя модели.</summary>
      <returns>Значение true, если объект удален. В противном случае — значение false.Этот метод также возвращает значение false, если <paramref name="key" /> не найден в словаре связывателей модели.</returns>
      <param name="key">Ключ элемента, который необходимо удалить.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IDictionary`2" /> доступен только для чтения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который можно использовать для итерации по коллекции.</summary>
      <returns>Перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.TryGetValue(System.Type,System.Web.Mvc.IModelBinder@)">
      <summary>Получает значение, связанное с указанным ключом.</summary>
      <returns>Значение true, если объект, реализующий <see cref="T:System.Collections.Generic.IDictionary`2" />, содержит элемент с указанным ключом. В противном случае — значение false.</returns>
      <param name="key">Ключ значения, которое необходимо получить.</param>
      <param name="value">Этот метод возвращает значение, связанное с указанным ключом, если он найден; в противном случае возвращается значение по умолчанию для типа параметра <paramref name="value" />.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Values">
      <summary>Получает коллекцию, содержащую значения в словаре связывателя модели.</summary>
      <returns>Коллекция, содержащая значения в словаре связывателя модели.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviderCollection">
      <summary>Представляет коллекцию поставщиков модулей привязки модели.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IModelBinderProvider})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" />, используя список поставщиков привязки модели.</summary>
      <param name="list">Список поставщиков связывателей модели.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.ClearItems">
      <summary>Удаляет все элементы из коллекции.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.GetBinder(System.Type)">
      <summary>Возвращает связыватель модели указанного типа.</summary>
      <returns>Связыватель модели указанного типа.</returns>
      <param name="modelType">Тип связывателя модели.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Вставляет поставщик связывателей модели в ModelBinderProviderCollection по указанному индексу.</summary>
      <param name="index">Индекс.</param>
      <param name="item">Поставщик связывателей модели.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.RemoveItem(System.Int32)">
      <summary>Удаляет элемент из коллекции по указанному индексу.</summary>
      <param name="index">Индекс (с нуля) элемента, который требуется удалить.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.SetItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Заменяет элемент поставщика привязки модели по указанному индексу.</summary>
      <param name="index">Индекс.</param>
      <param name="item">Поставщик связывателей модели.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviders">
      <summary>Предоставляет контейнер для поставщиков связывателей модели.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderProviders.BinderProviders">
      <summary>Предоставляет пункт регистрации для поставщиков привязки модели для приложений, которые не используют внедрение зависимостей.</summary>
      <returns>Коллекция поставщиков связывателя модели.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinders">
      <summary>Предоставляет глобальный доступ к связывателям моделей для приложения.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinders.Binders">
      <summary>Получает связыватели моделей для приложения.</summary>
      <returns>Связыватели моделей для приложения.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBindingContext">
      <summary>Предоставляет контекст, в котором функционирует связыватель модели.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelBindingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor(System.Web.Mvc.ModelBindingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelBindingContext" />, используя контекст привязки.</summary>
      <param name="bindingContext">Контекст привязки.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>Возвращает или задает значение, указывающее, должен ли связыватель использовать пустой префикс.</summary>
      <returns>Значение true, если связыватель должен использовать пустой префикс. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.Model">
      <summary>Получает или задает модель.</summary>
      <returns>Модель.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelMetadata">
      <summary>Возвращает или задает метаданные модели.</summary>
      <returns>Метаданные модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelName">
      <summary>Возвращает или задает имя модели.</summary>
      <returns>Имя модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelState">
      <summary>Возвращает или задает состояние модели.</summary>
      <returns>Состояние модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelType">
      <summary>Возвращает или задает тип модели.</summary>
      <returns>Тип модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyFilter">
      <summary>Получает или задает фильтр свойств.</summary>
      <returns>Фильтр свойств.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyMetadata">
      <summary>Возвращает метаданные свойства.</summary>
      <returns>Метаданные свойства.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ValueProvider">
      <summary>Возвращает или задает поставщик значений.</summary>
      <returns>Поставщик значений.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelError">
      <summary>Представляет ошибку, которая происходит во время привязки модели.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelError" /> с использованием указанного исключения.</summary>
      <param name="exception">Исключение.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="exception" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelError" />, используя указанные исключение и сообщение об ошибке.</summary>
      <param name="exception">Исключение.</param>
      <param name="errorMessage">Сообщение об ошибке.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="exception" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelError" />, используя указанное сообщение об ошибке.</summary>
      <param name="errorMessage">Сообщение об ошибке.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelError.ErrorMessage">
      <summary>Возвращает или задает сообщение об ошибке.</summary>
      <returns>Сообщение об ошибке.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelError.Exception">
      <summary>Возвращает или задает объект исключения.</summary>
      <returns>Объект исключения.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelErrorCollection">
      <summary>Коллекция экземпляров <see cref="T:System.Web.Mvc.ModelError" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelErrorCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.Exception)">
      <summary>Добавляет указанный объект <see cref="T:System.Exception" /> в коллекцию ошибок модели.</summary>
      <param name="exception">Исключение.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.String)">
      <summary>Добавляет указанное сообщение об ошибке в коллекцию ошибок модели.</summary>
      <param name="errorMessage">Сообщение об ошибке.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadata">
      <summary>Предоставляет контейнер для общих метаданных, класса <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> и класса <see cref="T:System.Web.Mvc.ModelValidator" /> для модели данных.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.#ctor(System.Web.Mvc.ModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelMetadata" />.</summary>
      <param name="provider">Поставщик.</param>
      <param name="containerType">Тип контейнера.</param>
      <param name="modelAccessor">Метод доступа модели.</param>
      <param name="modelType">Тип модели.</param>
      <param name="propertyName">Имя модели.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.AdditionalValues">
      <summary>Получает словарь, содержащий дополнительные метаданные о модели.</summary>
      <returns>Словарь, содержащий дополнительные метаданные о модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Container">
      <summary>Ссылка на объект контейнера модели.Будет иметь значение, отличное от NULL, если модель представляет свойство.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ContainerType">
      <summary>Получает или задает тип контейнера для модели.</summary>
      <returns>Тип контейнера для модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ConvertEmptyStringToNull">
      <summary>Получает или задает значение, указывающее, должны ли преобразовываться пустые строки, которые передаются обратно в формы, в значение null.</summary>
      <returns>Значение true, если пустые строки, которые передаются обратно в формы, должны преобразовываться в значение null; в противном случае — значение false.По умолчанию используется значение true.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DataTypeName">
      <summary>Получает или задает метаданные о типе данных. </summary>
      <returns>Метаданные о типе данных. </returns>
    </member>
    <member name="F:System.Web.Mvc.ModelMetadata.DefaultOrder">
      <summary>Значение порядка по умолчанию, равное 10000.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Description">
      <summary>Получает или задает описание модели.</summary>
      <returns>Описание модели.По умолчанию используется значение null.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayFormatString">
      <summary>Получает или задает строку формата отображения для модели.</summary>
      <returns>Строка формата отображения для модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayName">
      <summary>Получает или задает отображаемое имя модели.</summary>
      <returns>Отображаемое имя модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.EditFormatString">
      <summary>Получает или задает строку формата правки для модели.</summary>
      <returns>Строка формата правки для модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromLambdaExpression``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Web.Mvc.ViewDataDictionary{``0})">
      <summary>Возвращает метаданные из параметра <see cref="T:System.Linq.Expressions.Expression" /> для модели.</summary>
      <returns>Метаданные.</returns>
      <param name="expression">Выражение, идентифицирующее модель.</param>
      <param name="viewData">Словарь данных представления.</param>
      <typeparam name="TParameter">Тип параметра.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromStringExpression(System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Получает метаданные из параметра выражения для модели.</summary>
      <returns>Метаданные для модели.</returns>
      <param name="expression">Выражение, идентифицирующее модель.</param>
      <param name="viewData">Словарь данных представления.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetDisplayName">
      <summary>Получает отображаемое имя для модели.</summary>
      <returns>Отображаемое имя для модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetSimpleDisplayText">
      <summary>Возвращает простое описание модели.</summary>
      <returns>Простое описание модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetValidators(System.Web.Mvc.ControllerContext)">
      <summary>Получает список проверяющих элементов управления для модели.</summary>
      <returns>Список проверяющих элементов управления для модели.</returns>
      <param name="context">Контекст контроллера.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.HideSurroundingHtml">
      <summary>Получает или задает значение, указывающее, должен ли объект модели визуализироваться с помощью связанных HTML-элементов.</summary>
      <returns>Значение true, если связанные HTML-элементы, содержащие объект модели, должны включаться вместе с объектом. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.HtmlEncode"></member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsComplexType">
      <summary>Получает или задает значение, указывающее, является ли модель моделью сложного типа.</summary>
      <returns>Значение, указывающее, считается ли модель платформой MVC моделью сложного типа.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsNullableValueType">
      <summary>Получает значение, показывающее, допускает ли тип значение NULL.</summary>
      <returns>Значение true, если тип допускает значения NULL. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsReadOnly">
      <summary>Получает или задает значение, указывающее, является ли модель доступной только для чтения.</summary>
      <returns>Значение true, если модель доступна только для чтения. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsRequired">
      <summary>Получает или задает значение, указывающее, является ли модель обязательной.</summary>
      <returns>Значение true, если модель является обязательной. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Model">
      <summary>Получает значение модели.</summary>
      <returns>Значение модели.Дополнительные сведения о <see cref="T:System.Web.Mvc.ModelMetadata" /> см. в блоге Брэда Уилсона: ASP.NET MVC 2 Templates, Part 2: ModelMetadata.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ModelType">
      <summary>Получает тип модели.</summary>
      <returns>Тип модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.NullDisplayText">
      <summary>Получает или задает строку для отображения значений NULL.</summary>
      <returns>Строка для отображения значений NULL.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Order">
      <summary>Получает или задает значение, представляющее порядок текущих метаданных.</summary>
      <returns>Значение порядка текущих метаданных.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Properties">
      <summary>Получает коллекцию объектов метаданных модели, которые описывают свойства модели.</summary>
      <returns>Коллекция объектов метаданных модели, которые описывают свойства модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.PropertyName">
      <summary>Получает имя свойства.</summary>
      <returns>Имя свойства.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Provider">
      <summary>Получает или задает поставщик.</summary>
      <returns>Поставщик.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.RequestValidationEnabled">
      <summary>Получает или задает значение, показывающее, включена ли проверка запросов.</summary>
      <returns>Значение true, если проверка запросов включена. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShortDisplayName">
      <summary>Получает или задает короткое отображаемое имя.</summary>
      <returns>Короткое отображаемое имя.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForDisplay">
      <summary>Получает или задает значение, которое указывает, должно ли данное свойство отображаться в представлениях, доступных только для чтения, таких как представление списка или подробное представление.</summary>
      <returns>Значение true, если модель должна отображаться в режиме "только для чтения". В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForEdit">
      <summary>Получает или задает значение, показывающее, должна ли отображаться модель в доступных для изменения представлениях.</summary>
      <returns>Значение true, если модель должна отображаться в режиме, допускающем изменение. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.SimpleDisplayText">
      <summary>Получает или задает строку простого отображения для модели.</summary>
      <returns>Строка простого отображения для модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.TemplateHint">
      <summary>Получает или задает подсказку, в которой указывается, какой шаблон рекомендуется использовать для данной модели.</summary>
      <returns>Подсказка с указанием, какой шаблон рекомендуется использовать для данной модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Watermark">
      <summary>Получает или задает значение, которое может использоваться как водяной знак.</summary>
      <returns>Водяной знак.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProvider">
      <summary>Предоставляет абстрактный базовый класс для пользовательского поставщика метаданных.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.#ctor">
      <summary>При переопределении в производном классе инициализирует новый экземпляр объекта, унаследованного от <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Получает объект <see cref="T:System.Web.Mvc.ModelMetadata" /> для каждого свойства модели.</summary>
      <returns>Объект <see cref="T:System.Web.Mvc.ModelMetadata" /> для каждого свойства модели.</returns>
      <param name="container">Контейнер.</param>
      <param name="containerType">Тип контейнера.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Получает метаданные для заданного свойства.</summary>
      <returns>Объект <see cref="T:System.Web.Mvc.ModelMetadata" /> для свойства.</returns>
      <param name="modelAccessor">Метод доступа модели.</param>
      <param name="containerType">Тип контейнера.</param>
      <param name="propertyName">Свойство, для которого требуется получить метаданные.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Получает метаданные для указанного метода доступа модели и типа модели.</summary>
      <returns>Объект <see cref="T:System.Web.Mvc.ModelMetadata" /> для заданных метода доступа к модели и типа модели.</returns>
      <param name="modelAccessor">Метод доступа модели.</param>
      <param name="modelType">Тип модели.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProviders">
      <summary>Предоставляет контейнер для текущего экземпляра <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadataProviders.Current">
      <summary>Получает или задает текущий объект <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
      <returns>Текущий объект <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelState">
      <summary>Инкапсулирует состояние привязки модели к свойству аргумента метода действия или к самому аргументу.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelState.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelState" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Errors">
      <summary>Возвращает объект <see cref="T:System.Web.Mvc.ModelErrorCollection" />, содержащий все ошибки, появившиеся во время привязки модели.</summary>
      <returns>Ошибки.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Value">
      <summary>Возвращает объект <see cref="T:System.Web.Mvc.ValueProviderResult" />, инкапсулирующий значение, к которому была осуществлена привязка во время привязки модели.</summary>
      <returns>Значение.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelStateDictionary">
      <summary>Представляет состояние попытки привязать переданную форму к методу действия. Это состояние включает сведения о проверке.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor(System.Web.Mvc.ModelStateDictionary)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelStateDictionary" />, используя значения, которые копируются из указанного словаря состояния модели.</summary>
      <param name="dictionary">Словарь состояния модели.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="dictionary " /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Добавляет указанный элемент в словарь состояния модели.</summary>
      <param name="item">Объект для добавления в словарь состояния модели.</param>
      <exception cref="T:System.NotSupportedException">Словарь состояния модели доступен только для чтения.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.String,System.Web.Mvc.ModelState)">
      <summary>Добавляет в словарь состояния модели элемент, имеющий указанные ключ и значение.</summary>
      <param name="key">Ключ добавляемого элемента.</param>
      <param name="value">Добавляемое значение элемента.</param>
      <exception cref="T:System.NotSupportedException">Словарь состояния модели доступен только для чтения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Элемент, имеющий указанный ключ, уже присутствует в словаре состояния модели.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>Добавляет указанную ошибку модели в коллекцию ошибок для словаря состояния модели, связанного с заданным ключом.</summary>
      <param name="key">Ключ.</param>
      <param name="exception">Исключение.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>Добавляет указанное сообщение об ошибке в коллекцию ошибок для словаря состояния модели, связанного с заданным ключом.</summary>
      <param name="key">Ключ.</param>
      <param name="errorMessage">Сообщение об ошибке.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Clear">
      <summary>Удаляет все элементы из словаря состояния модели.</summary>
      <exception cref="T:System.NotSupportedException">Словарь состояния модели доступен только для чтения.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Определяет, содержит ли словарь состояния модели конкретное значение.</summary>
      <returns>Значение true, если <paramref name="item" /> найден в словаре состояния модели. В противном случае — значение false.</returns>
      <param name="item">Объект, который требуется найти в словаре состояния модели.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Определяет, содержит ли словарь состояния модели указанный ключ.</summary>
      <returns>Значение true, если словарь состояния модели содержит указанный ключ. В противном случае — значение false.</returns>
      <param name="key">Ключ, который требуется найти в словаре состояния модели. </param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState}[],System.Int32)">
      <summary>Копирует элементы словаря состояния модели в массив, начиная с указанного индекса.</summary>
      <param name="array">Одномерный массив, являющийся назначением элементов, копируемых из объекта <see cref="T:System.Collections.Generic.ICollection`1" />.Индексация в массиве должна вестись с нуля.</param>
      <param name="arrayIndex">Отсчитываемый с нуля индекс в массиве <paramref name="array" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> равен null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="arrayIndex" /> меньше 0.</exception>
      <exception cref="T:System.ArgumentException">Массив <paramref name="array" /> является многомерным.– или – Параметр <paramref name="arrayIndex" /> равен или больше длины <paramref name="array" />.– или – Количество элементов в исходной коллекции превышает доступное пространство от индекса массива <paramref name="arrayIndex" /> до конца массива назначения <paramref name="array" />.– или – Тип <paramref name="T" /> нельзя автоматически привести к типу массива назначения <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Count">
      <summary>Возвращает число пар "ключ/значений", содержащихся в коллекции.</summary>
      <returns>Количество пар "ключ-значение" в коллекции.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.GetEnumerator">
      <summary>Возвращает перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</summary>
      <returns>Перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsReadOnly">
      <summary>Получает значение, указывающее, действительно ли коллекция доступна только для чтения.</summary>
      <returns>Значение true, если коллекция доступна только для чтения. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsValid">
      <summary>Возвращает значение, указывающее, допустим ли данный экземпляр словаря состояния модели.</summary>
      <returns>Значение true, если экземпляр допустим. В противном случае — значение false.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.IsValidField(System.String)">
      <summary>Определяет, существуют ли какие-либо объекты <see cref="T:System.Web.Mvc.ModelError" />, связанные с указанным ключом или содержащие его в качестве префикса.</summary>
      <returns>Значение true, если словарь состояния модели содержит значение, связанное с указанным ключом. В противном случае — значение false.</returns>
      <param name="key">Ключ.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Item(System.String)">
      <summary>Возвращает или задает значение, связанное с указанным ключом.</summary>
      <returns>Элемент состояния модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Keys">
      <summary>Возвращает коллекцию, содержащую ключи в словаре.</summary>
      <returns>Коллекция, содержащая ключи словаря состояния модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Merge(System.Web.Mvc.ModelStateDictionary)">
      <summary>Копирует значения из указанного объекта <see cref="T:System.Web.Mvc.ModelStateDictionary" /> в данный словарь, перезаписывая существующие значения, если ключи совпадают.</summary>
      <param name="dictionary">Словарь.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Удаляет первое вхождение указанного объекта из словаря состояния модели.</summary>
      <returns>Значение true, если <paramref name="item" /> успешно удален из словаря состояния модели. В противном случае — значение false.Этот метод также возвращает значение false, если <paramref name="item" /> не найден в словаре состояния модели.</returns>
      <param name="item">Объект, который требуется удалить из словаря состояния модели.</param>
      <exception cref="T:System.NotSupportedException">Словарь состояния модели доступен только для чтения.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.String)">
      <summary>Удаляет элемент с заданным ключом из словаря состояния модели.</summary>
      <returns>Значение true, если объект удален. В противном случае — значение false.Этот метод также возвращает значение false, если <paramref name="key" /> не найден в словаре состояния модели.</returns>
      <param name="key">Ключ элемента, который необходимо удалить.</param>
      <exception cref="T:System.NotSupportedException">Словарь состояния модели доступен только для чтения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.SetModelValue(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Задает значение для указанного ключа, используя заданный словарь поставщиков значений.</summary>
      <param name="key">Ключ.</param>
      <param name="value">Значение.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</summary>
      <returns>Перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.TryGetValue(System.String,System.Web.Mvc.ModelState@)">
      <summary>Пытается получить значение, связанное с указанным ключом.</summary>
      <returns>Значение true, если объект, реализующий <see cref="T:System.Collections.Generic.IDictionary`2" />, содержит элемент с указанным ключом. В противном случае — значение false.</returns>
      <param name="key">Ключ значения, которое необходимо получить.</param>
      <param name="value">Этот метод возвращает значение, связанное с указанным ключом, если он найден; в противном случае возвращается значение по умолчанию для типа параметра <paramref name="value" />.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Values">
      <summary>Возвращает коллекцию, содержащую значения в словаре.</summary>
      <returns>Коллекция, содержащая значения словаря состояния модели.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidationResult">
      <summary>Предоставляет контейнер для результата проверки.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidationResult.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelValidationResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.MemberName">
      <summary>Получает или задает имя элемента.</summary>
      <returns>Имя элемента.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.Message">
      <summary>Получает или задает сообщение о результате проверки.</summary>
      <returns>Сообщение о результате проверки.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidator">
      <summary>Предоставляет базовый класс для реализации логики проверки.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Вызывается из конструкторов в производных классах, чтобы инициализировать класс <see cref="T:System.Web.Mvc.ModelValidator" />.</summary>
      <param name="metadata">Метаданные.</param>
      <param name="controllerContext">Контекст контроллера.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.ControllerContext">
      <summary>Получает контекст контроллера.</summary>
      <returns>Контекст контроллера.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetClientValidationRules">
      <summary>При реализации в производном классе возвращает метаданные для клиентской проверки.</summary>
      <returns>Метаданные для клиентской проверки.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetModelValidator(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Возвращает проверяющий составной элемент управления для модели.</summary>
      <returns>Проверяющий составной элемент управления для модели.</returns>
      <param name="metadata">Метаданные.</param>
      <param name="context">Контекст контроллера.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.IsRequired">
      <summary>Получает или задает значение, указывающее, является ли свойство модели обязательным.</summary>
      <returns>Значение true, если свойство модели является обязательным. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.Metadata">
      <summary>Получает метаданные для проверяющего элемента управления модели.</summary>
      <returns>Метаданные для проверяющего элемента управления модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.Validate(System.Object)">
      <summary>При реализации в производном классе выполняет проверку объекта.</summary>
      <returns>Список результатов проверки.</returns>
      <param name="container">Контейнер.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProvider">
      <summary>Предоставляет список проверяющих элементов управления для модели.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.#ctor">
      <summary>Если реализован в производном классе, инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Получает список проверяющих элементов управления.</summary>
      <returns>Список проверяющих элементов управления.</returns>
      <param name="metadata">Метаданные.</param>
      <param name="context">Контекст.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviderCollection">
      <summary>Представляет коллекцию поставщиков проверяющих элементов управления модели.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ModelValidatorProvider})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" />, используя список поставщиков проверки модели.</summary>
      <param name="list">Список поставщиков проверки модели.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.ClearItems">
      <summary>Удаляет все элементы из коллекции.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Возвращает список проверяющих элементов управления модели.</summary>
      <returns>Список проверяющих элементов управления модели.</returns>
      <param name="metadata">Метаданные модели.</param>
      <param name="context">Контекст контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.InsertItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Вставляет поставщик проверки модели в коллекцию.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить элемент.</param>
      <param name="item">Вставляемый объект поставщика проверки модели.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.RemoveItem(System.Int32)">
      <summary>Удаляет элемент из коллекции по указанному индексу.</summary>
      <param name="index">Индекс (с нуля) элемента, который требуется удалить.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.SetItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Заменяет элемент поставщика проверки модели по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс заменяемого элемента поставщика проверки модели.</param>
      <param name="item">Новое значение элемента поставщика проверки модели.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviders">
      <summary>Предоставляет контейнер для текущего поставщика проверки.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidatorProviders.Providers">
      <summary>Получает коллекцию поставщиков средств проверки модели.</summary>
      <returns>Коллекция поставщиков средств проверки модели.</returns>
    </member>
    <member name="T:System.Web.Mvc.MultiSelectList">
      <summary>Представляет список элементов, из которого пользователи могут выбрать несколько элементов.</summary>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.MultiSelectList" />, используя указанные элементы для включения в список.</summary>
      <param name="items">Элементы.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="items" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.MultiSelectList" />, используя указанные элементы для включения в список и выбранные значения.</summary>
      <param name="items">Элементы.</param>
      <param name="selectedValues">Выбранные значения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="items" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Инициализирует новый экземпляр класса MultiSelectList, используя указанные элементы для включения в список, выбранные значения, отключенные значения.</summary>
      <param name="items">Элементы, использованные для создания каждого элемента <see cref="T:System.Web.Mvc.SelectListItem" /> списка.</param>
      <param name="selectedValues">Поле выбранных значений.Использовалось для сопоставления свойства Selected соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Отключенные значения.Использовалось для сопоставления свойства Disabled соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.MultiSelectList" />, используя элементы для включения в список, поле значений данных и поле текстовых данных.</summary>
      <param name="items">Элементы.</param>
      <param name="dataValueField">Поле значений данных.</param>
      <param name="dataTextField">Поле текстовых данных.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="items" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.MultiSelectList" />, используя элементы для включения в список, поле значений данных, поле текстовых данных и выбранные значения.</summary>
      <param name="items">Элементы.</param>
      <param name="dataValueField">Поле значений данных.</param>
      <param name="dataTextField">Поле текстовых данных.</param>
      <param name="selectedValues">Выбранные значения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="items" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Инициализирует новый экземпляр класса MultiSelectList, используя элементы для включения в список, поле значений данных, поле текстовых данных, выбранные значения и отключенные значения.</summary>
      <param name="items">Элементы, использованные для создания каждого элемента <see cref="T:System.Web.Mvc.SelectListItem" /> списка.</param>
      <param name="dataValueField">Поле значений данных.Использовалось для сопоставления свойства Value соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Поле текстовых данных.Использовалось для сопоставления свойства Text соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValues">Поле выбранных значений.Использовалось для сопоставления свойства Selected соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Отключенные значения.Использовалось для сопоставления свойства Disabled соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса MultiSelectList, используя элементы для включения в список, поле значений данных, поле текстовых данных и поле группы данных.</summary>
      <param name="items">Элементы, использованные для создания каждого элемента <see cref="T:System.Web.Mvc.SelectListItem" /> списка.</param>
      <param name="dataValueField">Поле значений данных.Использовалось для сопоставления свойства Value соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Поле текстовых данных.Использовалось для сопоставления свойства Text соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Поле группы данных.Использовалось для сопоставления свойства Group соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Collections.IEnumerable)">
      <summary>Инициализирует новый экземпляр класса MultiSelectList, используя элементы для включения в список, поле значений данных, поле текстовых данных, поле группы данных и выбранные значения.</summary>
      <param name="items">Элементы, использованные для создания каждого элемента <see cref="T:System.Web.Mvc.SelectListItem" /> списка.</param>
      <param name="dataValueField">Поле значений данных.Использовалось для сопоставления свойства Value соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Поле текстовых данных.Использовалось для сопоставления свойства Text соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Поле группы данных.Использовалось для сопоставления свойства Group соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValues">Поле выбранных значений.Использовалось для сопоставления свойства Selected соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Инициализирует новый экземпляр класса MultiSelectList, используя элементы для включения в список, поле значений данных, поле текстовых данных, поле группы данных, выбранные значения и отключенные значения.</summary>
      <param name="items">Элементы, использованные для создания каждого элемента <see cref="T:System.Web.Mvc.SelectListItem" /> списка.</param>
      <param name="dataValueField">Поле значений данных.Использовалось для сопоставления свойства Value соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Поле текстовых данных.Использовалось для сопоставления свойства Text соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Поле группы данных.Использовалось для сопоставления свойства Group соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValues">Поле выбранных значений.Использовалось для сопоставления свойства Selected соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Отключенные значения.Использовалось для сопоставления свойства Disabled соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Инициализирует новый экземпляр класса MultiSelectList, используя элементы для включения в список, поле значений данных, поле текстовых данных, поле группы данных, выбранные значения, отключенные значения и отключенные группы.</summary>
      <param name="items">Элементы, использованные для создания каждого элемента <see cref="T:System.Web.Mvc.SelectListItem" /> списка.</param>
      <param name="dataValueField">Поле значений данных.Использовалось для сопоставления свойства Value соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Поле текстовых данных.Использовалось для сопоставления свойства Text соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Поле группы данных.Использовалось для сопоставления свойства Group соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValues">Поле выбранных значений.Использовалось для сопоставления свойства Selected соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Отключенные значения.Использовалось для сопоставления свойства Disabled соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledGroups">Отключенные группы.Использовалось для сопоставления свойства Disabled соответствующего элемента <see cref="T:System.Web.Mvc.SelectListGroup" />.</param>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataGroupField">
      <summary>Получает поле группы данных.</summary>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataTextField">
      <summary>Получает или задает поле текстовых данных.</summary>
      <returns>Поле текстовых данных.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataValueField">
      <summary>Получает или задает поле значений данных.</summary>
      <returns>Поле значений данных.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DisabledGroups">
      <summary>Получает отключенные группы.</summary>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DisabledValues">
      <summary>Получает отключенные значения.</summary>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.GetEnumerator">
      <summary>Возвращает перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</summary>
      <returns>Перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.Items">
      <summary>Получает или задает элементы в списке.</summary>
      <returns>Элементы в списке.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.SelectedValues">
      <summary>Получает или задает выбранные значения.</summary>
      <returns>Выбранные значения.</returns>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</summary>
      <returns>Перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcFilter">
      <summary>При реализации в производном классе представляет класс метаданных, содержащий ссылку на реализацию одного или нескольких интерфейсов фильтра, порядок фильтров и область фильтра.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.MvcFilter" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor(System.Boolean,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.MvcFilter" /> и определяет порядок фильтров и то, разрешено ли использовать несколько фильтров.</summary>
      <param name="allowMultiple">Значение true, чтобы указать, что разрешено множество фильтров одного типа; в противном случае — значение false.</param>
      <param name="order">Порядок фильтра.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.AllowMultiple">
      <summary>Извлекает значение, указывающее, можно ли задать для данного экземпляра несколько атрибутов файла.</summary>
      <returns>Значение true, если допускается несколько экземпляров атрибута фильтра; в противном случае — значение false.Реализации<see cref="P:System.Web.Mvc.IMvcFilter.AllowMultiple" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.Order">
      <summary>Получает значение, указывающее порядок применения фильтра.</summary>
      <returns>Значение, указывающее порядок применения фильтра.Реализации<see cref="P:System.Web.Mvc.IMvcFilter.Order" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcHandler">
      <summary>Выбирает контроллер, который будет обрабатывать HTTP-запрос.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.#ctor(System.Web.Routing.RequestContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.MvcHandler" />.</summary>
      <param name="requestContext">Контекст запроса.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="requestContext" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.AddVersionHeader(System.Web.HttpContextBase)">
      <summary>Добавляет заголовок версии, используя указанный контекст HTTP.</summary>
      <param name="httpContext">Контекст HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Вызывается ASP.NET, чтобы начать обработку асинхронного запроса.</summary>
      <returns>Состояние асинхронного вызова.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="callback">Метод асинхронного обратного вызова.</param>
      <param name="state">Состояние асинхронного объекта.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Вызывается ASP.NET, чтобы начать обработку асинхронного запроса, используя базовый контекст HTTP.</summary>
      <returns>Состояние асинхронного вызова.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="callback">Метод асинхронного обратного вызова.</param>
      <param name="state">Состояние асинхронного объекта.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.DisableMvcResponseHeader">
      <summary>Получает или задает значение, указывающее, запрещен ли заголовок ответа MVC.</summary>
      <returns>Значение true, если заголовок ответа MVC запрещен; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Вызывается ASP.NET после завершения обработки асинхронного запроса.</summary>
      <param name="asyncResult">Асинхронный результат.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.IsReusable">
      <summary>Получает значение, указывающее, может ли другой запрос использовать экземпляр <see cref="T:System.Web.IHttpHandler" />.</summary>
      <returns>Значение true, если экземпляр <see cref="T:System.Web.IHttpHandler" /> допускает повторное использование. В противном случае — значение false.</returns>
    </member>
    <member name="F:System.Web.Mvc.MvcHandler.MvcVersionHeaderName">
      <summary>Содержит имя заголовка версии MVC ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Обрабатывает запрос, используя указанный контекст HTTP-запроса.</summary>
      <param name="httpContext">Контекст HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContextBase)">
      <summary>Обрабатывает запрос, используя указанный базовый контекст HTTP-запроса.</summary>
      <param name="httpContext">Контекст HTTP.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.RequestContext">
      <summary>Получает контекст запроса.</summary>
      <returns>Контекст запроса.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Вызывается ASP.NET, чтобы начать обработку асинхронного запроса, используя базовый контекст HTTP.</summary>
      <returns>Состояние асинхронного вызова.</returns>
      <param name="context">Контекст HTTP.</param>
      <param name="cb">Метод асинхронного обратного вызова.</param>
      <param name="extraData">Данные.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Вызывается ASP.NET после завершения обработки асинхронного запроса.</summary>
      <param name="result">Асинхронный результат.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#IsReusable">
      <summary>Получает значение, указывающее, может ли другой запрос использовать экземпляр <see cref="T:System.Web.IHttpHandler" />.</summary>
      <returns>Значение true, если экземпляр <see cref="T:System.Web.IHttpHandler" /> допускает повторное использование. В противном случае — значение false.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>Разрешает обработку веб-запросов НТТР пользовательским обработчиком HTTP-данных, который реализует интерфейс <see cref="T:System.Web.IHttpHandler" />.</summary>
      <param name="httpContext">Объект <see cref="T:System.Web.HttpContext" />, предоставляющий ссылки на внутренние объекты сервера (например, Request, Response, Session и Server), используемые для обслуживания HTTP-запросов.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHtmlString">
      <summary>Представляет HTML-кодированную строку, которую не следует перекодировать еще раз.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.MvcHtmlString" />.</summary>
      <param name="value">Строка, которую необходимо создать.Если не присвоено никакое значение, объект будет создан с использованием пустой строки.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.Create(System.String)">
      <summary>Создает строку в кодировке HTML, используя указанное текстовое значение.</summary>
      <returns>HTML-кодированная строка.</returns>
      <param name="value">Значение создаваемой строки.</param>
    </member>
    <member name="F:System.Web.Mvc.MvcHtmlString.Empty">
      <summary>Содержит пустую строку HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.IsNullOrEmpty(System.Web.Mvc.MvcHtmlString)">
      <summary>Определяет, содержит ли что-либо указанная строка, либо она имеет значение null или является пустой.</summary>
      <returns>Значение true, если строка равна null или пуста; в противном случае — false.</returns>
      <param name="value">Строка.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHttpHandler">
      <summary>Проверяет и обрабатывает HTTP-запрос.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.MvcHttpHandler" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Вызывается ASP.NET, чтобы начать обработку асинхронного запроса.</summary>
      <returns>Состояние асинхронного вызова.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="callback">Метод асинхронного обратного вызова.</param>
      <param name="state">Состояние.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Вызывается ASP.NET, чтобы начать обработку асинхронного запроса.</summary>
      <returns>Состояние асинхронного вызова.</returns>
      <param name="httpContext">Базовый контекст HTTP.</param>
      <param name="callback">Метод асинхронного обратного вызова.</param>
      <param name="state">Состояние.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Вызывается ASP.NET после завершения обработки асинхронного запроса.</summary>
      <param name="asyncResult">Асинхронный результат.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Вызывается ASP.NET, чтобы начать обработку асинхронного запроса.</summary>
      <returns>Состояние асинхронного вызова.</returns>
      <param name="context">Контекст.</param>
      <param name="cb">Метод асинхронного обратного вызова.</param>
      <param name="extraData">Объект, содержащий данные.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Вызывается ASP.NET после завершения обработки асинхронного запроса.</summary>
      <param name="result">Состояние асинхронных операций.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.VerifyAndProcessRequest(System.Web.IHttpHandler,System.Web.HttpContextBase)">
      <summary>Проверяет и обрабатывает HTTP-запрос.</summary>
      <param name="httpHandler">Обработчик HTTP-данных.</param>
      <param name="httpContext">Контекст HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcRouteHandler">
      <summary>Создает объект, реализующий интерфейс IHttpHandler, и передает ему контекст запроса.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.MvcRouteHandler" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor(System.Web.Mvc.IControllerFactory)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.MvcRouteHandler" />, используя указанный объект контроллера фабрики.</summary>
      <param name="controllerFactory">Фабрика контроллеров.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Возвращает обработчик HTTP-данных, используя указанный контекст HTTP.</summary>
      <returns>Обработчик HTTP-данных.</returns>
      <param name="requestContext">Контекст запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetSessionStateBehavior(System.Web.Routing.RequestContext)">
      <summary>Возвращает поведение сеанса.</summary>
      <returns>Поведение сеанса.</returns>
      <param name="requestContext">Контекст запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Возвращает обработчик HTTP, используя указанный контекст запроса.</summary>
      <returns>Обработчик HTTP-данных.</returns>
      <param name="requestContext">Контекст запроса.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcWebRazorHostFactory">
      <summary>Создает экземпляры файлов <see cref="T:System.Web.Mvc.MvcWebPageRazorHost" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.MvcWebRazorHostFactory" />. </summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.CreateHost(System.String,System.String)">
      <summary>Создает узел Razor.</summary>
      <returns>Узел Razor.</returns>
      <param name="virtualPath">Виртуальный путь к конечному файлу.</param>
      <param name="physicalPath">Физический путь к конечному файлу.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionExtensions">
      <summary>Расширяет объект NameValueCollection, чтобы коллекцию можно было скопировать в указанный словарь.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Копирует указанную коллекцию в заданный объект назначения.</summary>
      <param name="collection">Коллекция.</param>
      <param name="destination">Объект назначения.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <summary>Копирует указанную коллекцию в заданный объект назначения и дополнительно заменяет предыдущие записи.</summary>
      <param name="collection">Коллекция.</param>
      <param name="destination">Объект назначения.</param>
      <param name="replaceEntries">Значение true для замены предыдущих записей; в противном случае — значение false.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionValueProvider">
      <summary>Представляет базовый класс для поставщиков значений, чьи значения берутся из объекта <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" />, используя указанную непроверенную коллекцию.</summary>
      <param name="collection">Коллекция, содержащая значения, используемые для инициализации поставщика.</param>
      <param name="unvalidatedCollection">Коллекция, содержащая значения, используемые для инициализации поставщика.Эта коллекция не будет проверена.</param>
      <param name="culture">Объект, содержащий сведения о целевых языке и региональных параметрах.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo,System.Boolean)">
      <summary>Инициализирует поставщика коллекции значения имени.</summary>
      <param name="collection">Коллекция значения ключа из запроса.</param>
      <param name="unvalidatedCollection">Непроверенная коллекция значения ключа из запроса.</param>
      <param name="culture">Культура, с которой должны использоваться значения.</param>
      <param name="jQueryToMvcRequestNormalizationRequired">При отправке комплексных объектов Javascript на сервер jQuery POST не кодирует понятным для MVC способом.Необходимо установить этот флажок, если запрос должен быть нормализован до формы MVC — https://aspnetwebstack.codeplex.com/workitem/1564.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" />.</summary>
      <param name="collection">Коллекция, содержащая значения, используемые для инициализации поставщика.</param>
      <param name="culture">Объект, содержащий сведения о целевых языке и региональных параметрах.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="collection" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.ContainsPrefix(System.String)">
      <summary>Определяет, содержит ли коллекция указанный префикс.</summary>
      <returns>Значение true, если коллекция содержит заданный префикс. В противном случае — значение false.</returns>
      <param name="prefix">Искомый префикс.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="prefix" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Получает ключи по указанному префиксу.</summary>
      <returns>Ключи.</returns>
      <param name="prefix">Префикс.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String)">
      <summary>Возвращает объект значения, используя указанный ключ.</summary>
      <returns>Объект значения для заданного ключа.</returns>
      <param name="key">Ключ извлекаемого объекта значения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Возвращает объект значения, используя указанные ключ и директиву проверки.</summary>
      <returns>Объект значения для заданного ключа.</returns>
      <param name="key">Ключ.</param>
      <param name="skipValidation">Значение true, если проверка пропускается. В противном случае — значение false.</param>
    </member>
    <member name="T:System.Web.Mvc.NoAsyncTimeoutAttribute">
      <summary>Предоставляет удобную оболочку для атрибута <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NoAsyncTimeoutAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.NoAsyncTimeoutAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.NonActionAttribute">
      <summary>Представляет атрибут, используемый для указания того, что метод контроллера не является методом действия.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.NonActionAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Определяет, отмечает ли атрибут метод, не являющийся методом действия, используя указанный контекст контроллера.</summary>
      <returns>Значение true, если атрибут отмечает допустимый метод, не являющийся методом действия; в противном случае — значение false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="methodInfo">Информация метода.</param>
    </member>
    <member name="T:System.Web.Mvc.OutputCacheAttribute">
      <summary>Представляет атрибут, используемый для маркирования метода действия, выходные данные которого будут кэшироваться.</summary>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.OutputCacheAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.CacheProfile">
      <summary>Получает или задает имя профиля кэша.</summary>
      <returns>Имя профиля кэша.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.ChildActionCache">
      <summary>Получает или задает кэш дочернего действия.</summary>
      <returns>Кэш дочернего действия.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Duration">
      <summary>Получает или задает длительность кэширования в секундах.</summary>
      <returns>Длительность кэширования.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.IsChildActionCacheActive(System.Web.Mvc.ControllerContext)">
      <summary>Возвращает значение, указывающее, активен ли кэш дочернего действия.</summary>
      <returns>Значение true, если кэш дочернего действия активен; в противном случае — значение false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Location">
      <summary>Получает или задает расположение.</summary>
      <returns>Местоположение.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.NoStore">
      <summary>Получает или задает значение, указывающее, требуется ли сохранить кэш.</summary>
      <returns>Значение true, если кэш нужно хранить. В противном случае — значение false.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Этот метод — это реализация <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" />, которая поддерживает инфраструктуру ASP.NET MVC.Он не предназначен для использования непосредственно в коде.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Этот метод — это реализация <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" />, которая поддерживает инфраструктуру ASP.NET MVC.Он не предназначен для использования непосредственно в коде.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Этот метод — это реализация <see cref="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)" />, которая поддерживает инфраструктуру ASP.NET MVC.Он не предназначен для использования непосредственно в коде.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Этот метод — это реализация <see cref="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" />, которая поддерживает инфраструктуру ASP.NET MVC.Он не предназначен для использования непосредственно в коде.</summary>
      <param name="filterContext">Контекст фильтра.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Вызывается до выполнения результата действия.</summary>
      <param name="filterContext">Контекст фильтра, инкапсулирующий сведения для использования объекта <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="filterContext" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.SqlDependency">
      <summary>Получает или задает зависимость SQL.</summary>
      <returns>Зависимость SQL.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByContentEncoding">
      <summary>Получает или задает кодировку содержимого, по которой происходит изменение.</summary>
      <returns>Кодировка содержимого, по которой происходит изменение.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByCustom">
      <summary>Получает или задает настраиваемое значение, по которому происходит изменение.</summary>
      <returns>Настраиваемое значение, по которому происходит изменение.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByHeader">
      <summary>Получает или задает значение заголовка, по которому происходит изменение.</summary>
      <returns>Значение заголовка, по которому происходит изменение.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByParam">
      <summary>Получает или задает значение параметра, по которому происходит изменение.</summary>
      <returns>Значение параметра, по которому происходит изменение.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideActionFiltersAttribute">
      <summary>Представляет атрибуты, связанные с фильтром переопределения.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideActionFiltersAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.OverrideActionFiltersAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideActionFiltersAttribute.FiltersToOverride">
      <summary>Получает переопределяемые фильтры для данного экземпляра.</summary>
      <returns>Переопределяемые фильтры для данного экземпляра.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideAuthenticationAttribute">
      <summary>Представляет атрибуты, связанные с проверкой подлинности.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideAuthenticationAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.OverrideAuthenticationAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideAuthenticationAttribute.FiltersToOverride">
      <summary>Получает переопределяемые фильтры для данного экземпляра.</summary>
      <returns>Переопределяемые фильтры для данного экземпляра.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideAuthorizationAttribute">
      <summary>Представляет атрибуты, связанные с авторизацией.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideAuthorizationAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.OverrideAuthorizationAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideAuthorizationAttribute.FiltersToOverride">
      <summary>Получает переопределяемые фильтры для данного экземпляра.</summary>
      <returns>Переопределяемые фильтры для данного экземпляра.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideExceptionFiltersAttribute">
      <summary>Представляет атрибуты, связанные с фильтром исключений.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideExceptionFiltersAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.OverrideExceptionFiltersAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideExceptionFiltersAttribute.FiltersToOverride">
      <summary>Получает переопределяемые фильтры для данного экземпляра.</summary>
      <returns>Переопределяемые фильтры для данного экземпляра.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideResultFiltersAttribute">
      <summary>Представляет атрибуты, связанные с фильтром результатов.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideResultFiltersAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.OverrideResultFiltersAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideResultFiltersAttribute.FiltersToOverride">
      <summary>Получает переопределяемые фильтры для данного экземпляра.</summary>
      <returns>Переопределяемые фильтры для данного экземпляра.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterBindingInfo">
      <summary>Инкапсулирует сведения для привязки параметров метода действия к модели данных.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterBindingInfo.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ParameterBindingInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Binder">
      <summary>Получает связыватель модели.</summary>
      <returns>Связыватель модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Exclude">
      <summary>Получает разделенный запятыми список имен свойств, для которых привязка запрещена.</summary>
      <returns>Список исключения.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Include">
      <summary>Получает разделенный запятыми список имен свойств, для которых привязка разрешена.</summary>
      <returns>Список включения.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Prefix">
      <summary>Получает префикс, используемый, когда инфраструктура MVC привязывает значение к параметру действия или к свойству модели.</summary>
      <returns>Префикс.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterDescriptor">
      <summary>Содержит сведения, описывающие параметр.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ParameterDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ActionDescriptor">
      <summary>Получает дескриптор действия.</summary>
      <returns>Дескриптор действия.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.BindingInfo">
      <summary>Получает сведения о привязке.</summary>
      <returns>Сведения о привязке.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.DefaultValue">
      <summary>Получает значение, присваиваемое параметру по умолчанию.</summary>
      <returns>Значение параметра по умолчанию.</returns>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает массив настраиваемых атрибутов, определенных для данного члена, за исключением именованных атрибутов.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
      <exception cref="T:System.TypeLoadException">Невозможно загрузить тип пользовательского атрибута.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Для данного члена определено более одного атрибута типа <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Возвращает массив настраиваемых атрибутов, определенных для данного члена и принадлежащих указанному типу.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="attributeType">Тип пользовательских атрибутов.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
      <exception cref="T:System.TypeLoadException">Невозможно загрузить тип пользовательского атрибута.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Для данного члена определено более одного атрибута типа <paramref name="attributeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="attributeType" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Указывает, определен ли для данного члена один или несколько экземпляров типа настраиваемого атрибута.</summary>
      <returns>Значение true, если для данного члена определен атрибут настраиваемого типа; в противном случае — значение false.</returns>
      <param name="attributeType">Тип пользовательских атрибутов.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="attributeType" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterName">
      <summary>Возвращает имя параметра.</summary>
      <returns>Имя параметра.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterType">
      <summary>Получает тип параметра.</summary>
      <returns>Тип параметра.</returns>
    </member>
    <member name="T:System.Web.Mvc.PartialViewResult">
      <summary>Представляет базовый класс, используемый для отправки в ответ частичного представления.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.PartialViewResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Возвращает объект <see cref="T:System.Web.Mvc.ViewEngineResult" />, используемый для визуализации представления.</summary>
      <returns>Результат обработчика представления.</returns>
      <param name="context">Контекст контроллера.</param>
      <exception cref="T:System.InvalidOperationException">При попытке поиска представления методом возникла ошибка.</exception>
    </member>
    <member name="T:System.Web.Mvc.PreApplicationStartCode">
      <summary>Предоставляет пункт регистрации для кода запуска ASP.NET Razor, выполняемого перед приложением.</summary>
    </member>
    <member name="M:System.Web.Mvc.PreApplicationStartCode.Start">
      <summary>Регистрирует код запуска Razor, выполняемый перед приложением.</summary>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProvider">
      <summary>Представляет поставщик значений для строк запроса, содержащихся в объекте <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.QueryStringValueProvider" />.</summary>
      <param name="controllerContext">Объект, инкапсулирующий сведения о текущем HTTP-запросе.</param>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProviderFactory">
      <summary>Представляет класс, ответственный за создание нового экземпляра объекта поставщика значения строки запроса.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.QueryStringValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Возвращает объект поставщика значения для заданного контекста контроллера.</summary>
      <returns>Объект поставщика значения строки запроса.</returns>
      <param name="controllerContext">Объект, инкапсулирующий сведения о текущем HTTP-запросе.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerContext" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RangeAttributeAdapter">
      <summary>Предоставляет адаптер для атрибута <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RangeAttribute)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />.</summary>
      <param name="metadata">Метаданные модели.</param>
      <param name="context">Контекст контроллера.</param>
      <param name="attribute">Атрибут диапазона.</param>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.GetClientValidationRules">
      <summary>Возвращает список правил проверки клиента для проверки диапазона.</summary>
      <returns>Список правил проверки клиента для проверки диапазона.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorView">
      <summary>Представляет класс, используемый для создания представлений с синтаксисом Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RazorView" />.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="viewPath">Путь к представлению.</param>
      <param name="layoutPath">Страница макета или главная страница.</param>
      <param name="runViewStartPages">Значение, указывающее, следует ли выполнять файлы запуска представления перед представлением.</param>
      <param name="viewStartFileExtensions">Набор расширений, которые будут использоваться при поиске файлов запуска представления.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Web.Mvc.IViewPageActivator)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RazorView" />, используя активатор страницы представления.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="viewPath">Путь к представлению.</param>
      <param name="layoutPath">Страница макета или главная страница.</param>
      <param name="runViewStartPages">Значение, указывающее, следует ли выполнять файлы запуска представления перед представлением.</param>
      <param name="viewStartFileExtensions">Набор расширений, которые будут использоваться при поиске файлов запуска представления.</param>
      <param name="viewPageActivator">Активатор страницы представления.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.LayoutPath">
      <summary>Получает страницу макета или главную страницу.</summary>
      <returns>Страница макета или главная страница.</returns>
    </member>
    <member name="M:System.Web.Mvc.RazorView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Визуализирует указанный контекст представления, используя заданный модуль записи и экземпляр <see cref="T:System.Web.Mvc.WebViewPage" />.</summary>
      <param name="viewContext">Контекст представления.</param>
      <param name="writer">Модуль записи, используемый для визуализации представления в ответ.</param>
      <param name="instance">Экземпляр <see cref="T:System.Web.Mvc.WebViewPage" />.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.RunViewStartPages">
      <summary>Получает значение, указывающее, следует ли выполнять файлы запуска представления перед представлением.</summary>
      <returns>Значение, указывающее, следует ли выполнять файлы запуска представления перед представлением.</returns>
    </member>
    <member name="P:System.Web.Mvc.RazorView.ViewStartFileExtensions">
      <summary>Возвращает или задает набор расширений файлов, которые будут использоваться при поиске файлов запуска представления.</summary>
      <returns>Набор расширений файлов, которые будут использоваться при поиске файлов запуска представления.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorViewEngine">
      <summary>Представляет обработчик представлений для визуализации веб-страниц, использующих синтаксис ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RazorViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RazorViewEngine" />, используя активатор страницы представления.</summary>
      <param name="viewPageActivator">Активатор страницы представления.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Создает частичное представление, используя указанный контекст контроллера и частичный путь.</summary>
      <returns>Частичное представление.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="partialPath">Путь к частичному представлению.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Создает представление, используя заданные контекст контроллера и пути к представлению и главному представлению.</summary>
      <returns>Представление.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="viewPath">Путь к представлению.</param>
      <param name="masterPath">Путь к главному представлению.</param>
    </member>
    <member name="T:System.Web.Mvc.RedirectResult">
      <summary>Управляет обработкой действий приложения, выполняя перенаправление на указанный универсальный код ресурса (URI).</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RedirectResult" />.</summary>
      <param name="url">URL-адрес назначения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="url" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RedirectResult" />, используя указанные URL-адрес и флаг безвозвратного перенаправления.</summary>
      <param name="url">URL-адрес.</param>
      <param name="permanent">Значение, указывающее, должно ли перенаправление быть постоянным.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Разрешает обработку результата выполнения метода действия пользовательским типом, наследуемым от класса <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Контекст, в котором выполняется результат.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Permanent">
      <summary>Получает значение, указывающее, должно ли перенаправление быть постоянным.</summary>
      <returns>Значение true, если перенаправление постоянное. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Url">
      <summary>Получает или задает URL-адрес назначения.</summary>
      <returns>URL-адрес назначения.</returns>
    </member>
    <member name="T:System.Web.Mvc.RedirectToRouteResult">
      <summary>Представляет результат, который выполняет перенаправление, используя указанный словарь значений маршрута.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RedirectToRouteResult" />, используя указанные имя и значения маршрута.</summary>
      <param name="routeName">Имя маршрута.</param>
      <param name="routeValues">Значения маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RedirectToRouteResult" />, используя указанные имя маршрута, значения маршрута и флаг безвозвратного перенаправления.</summary>
      <param name="routeName">Имя маршрута.</param>
      <param name="routeValues">Значения маршрута.</param>
      <param name="permanent">Значение, указывающее, должно ли перенаправление быть постоянным.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.Web.Routing.RouteValueDictionary)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RedirectToRouteResult" />, используя указанные значения маршрута.</summary>
      <param name="routeValues">Значения маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Разрешает обработку результата выполнения метода действия пользовательским типом, наследуемым от класса <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Контекст, в котором выполняется результат.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.Permanent">
      <summary>Получает значение, указывающее, должно ли перенаправление быть постоянным.</summary>
      <returns>Значение true, если перенаправление постоянное. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteName">
      <summary>Получает или задает имя маршрута.</summary>
      <returns>Имя маршрута.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteValues">
      <summary>Получает или задает значения маршрута.</summary>
      <returns>Значения маршрута.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedActionDescriptor">
      <summary>Содержит сведения, описывающие отраженный метод действия.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ReflectedActionDescriptor" />.</summary>
      <param name="methodInfo">Сведения о методе действия.</param>
      <param name="actionName">Имя действия.</param>
      <param name="controllerDescriptor">Дескриптор контроллера.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="methodInfo" /> или <paramref name="controllerDescriptor" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="actionName" /> имеет значение null или пуст.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ActionName">
      <summary>Получает имя действия.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ControllerDescriptor">
      <summary>Получает дескриптор контроллера.</summary>
      <returns>Дескриптор контроллера.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Выполняет указанный контекст контроллера, используя заданные параметры метода действия.</summary>
      <returns>Возвращаемое значение действия.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="parameters">Параметры.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="parameters" /> или <paramref name="controllerContext" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает массив настраиваемых атрибутов, определенных для данного члена, за исключением именованных атрибутов.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
      <exception cref="T:System.TypeLoadException">Невозможно загрузить тип пользовательского атрибута.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Для данного члена определено более одного атрибута типа <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Возвращает массив настраиваемых атрибутов, определенных для данного члена и принадлежащих указанному типу.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="attributeType">Тип пользовательских атрибутов.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
      <exception cref="T:System.TypeLoadException">Невозможно загрузить тип пользовательского атрибута.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Для данного члена определено более одного атрибута типа <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Получает атрибуты фильтра.</summary>
      <returns>Атрибуты фильтра.</returns>
      <param name="useCache">Значение true, если нужно использовать кэш. В противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetParameters">
      <summary>Извлекает параметры метода действия.</summary>
      <returns>Параметры метода действия.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetSelectors">
      <summary>Извлекает селекторы действия.</summary>
      <returns>Селекторы действия.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Указывает, определен ли для данного члена один или несколько экземпляров типа настраиваемого атрибута.</summary>
      <returns>Значение true, если для данного члена определен атрибут настраиваемого типа; в противном случае — значение false.</returns>
      <param name="attributeType">Тип пользовательских атрибутов.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.MethodInfo">
      <summary>Получает или задает сведения о методе действия.</summary>
      <returns>Сведения о методе действия.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.UniqueId">
      <summary>Получает уникальный идентификатор для дескриптора отраженного действия с использованием отложенной инициализации.</summary>
      <returns>Уникальный идентификатор.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedControllerDescriptor">
      <summary>Содержит сведения, описывающие отраженный контроллер.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ReflectedControllerDescriptor" />.</summary>
      <param name="controllerType">Тип контроллера.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerType" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedControllerDescriptor.ControllerType">
      <summary>Получает тип контроллера.</summary>
      <returns>Тип контроллера.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Находит указанное действие для заданного контекста контроллера.</summary>
      <returns>Сведения о действии.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionName">Имя действия.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerContext" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="actionName" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCanonicalActions">
      <summary>Возвращает список действий для контроллера.</summary>
      <returns>Список дескрипторов действий для контроллера.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает массив настраиваемых атрибутов, определенных для данного члена, за исключением именованных атрибутов.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
      <exception cref="T:System.TypeLoadException">Невозможно загрузить тип пользовательского атрибута.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Для данного члена определено более одного атрибута типа <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Возвращает массив настраиваемых атрибутов, определенных для данного члена и принадлежащих указанному типу.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="attributeType">Тип пользовательских атрибутов.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
      <exception cref="T:System.TypeLoadException">Невозможно загрузить тип пользовательского атрибута.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Для данного члена определено более одного атрибута типа <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Получает атрибуты фильтра.</summary>
      <returns>Атрибуты фильтра.</returns>
      <param name="useCache">Значение true, если нужно использовать кэш. В противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Возвращает значение, указывающее, определен ли для данного члена один или несколько экземпляров типа настраиваемого атрибута.</summary>
      <returns>Значение true, если для данного члена определен атрибут настраиваемого типа; в противном случае — значение false.</returns>
      <param name="attributeType">Тип пользовательских атрибутов.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
    </member>
    <member name="T:System.Web.Mvc.ReflectedParameterDescriptor">
      <summary>Содержит сведения, описывающие отраженный параметр метода действия.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.#ctor(System.Reflection.ParameterInfo,System.Web.Mvc.ActionDescriptor)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ReflectedParameterDescriptor" />.</summary>
      <param name="parameterInfo">Сведения о параметрах.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="parameterInfo" /> или <paramref name="actionDescriptor" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ActionDescriptor">
      <summary>Получает дескриптор действия.</summary>
      <returns>Дескриптор действия.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.BindingInfo">
      <summary>Получает сведения о привязке.</summary>
      <returns>Сведения о привязке.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.DefaultValue">
      <summary>Получает значение по умолчанию отраженного параметра.</summary>
      <returns>Значение отраженного параметра по умолчанию.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает массив настраиваемых атрибутов, определенных для данного члена, за исключением именованных атрибутов.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
      <exception cref="T:System.TypeLoadException">Невозможно загрузить тип пользовательского атрибута.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Для данного члена определено более одного атрибута типа <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Возвращает массив настраиваемых атрибутов, определенных для данного члена и принадлежащих указанному типу.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="attributeType">Тип пользовательских атрибутов.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
      <exception cref="T:System.TypeLoadException">Невозможно загрузить тип пользовательского атрибута.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Для данного члена определено более одного атрибута типа <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Возвращает значение, указывающее, определен ли для данного члена один или несколько экземпляров типа настраиваемого атрибута.</summary>
      <returns>Значение true, если для данного члена определен атрибут настраиваемого типа; в противном случае — значение false.</returns>
      <param name="attributeType">Тип пользовательских атрибутов.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterInfo">
      <summary>Получает или задает сведения о параметрах.</summary>
      <returns>Сведения о параметрах.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterName">
      <summary>Возвращает имя параметра.</summary>
      <returns>Имя параметра.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterType">
      <summary>Получает тип параметра.</summary>
      <returns>Тип параметра.</returns>
    </member>
    <member name="T:System.Web.Mvc.RegularExpressionAttributeAdapter">
      <summary>Предоставляет адаптер для атрибута <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RegularExpressionAttribute)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RegularExpressionAttributeAdapter" />.</summary>
      <param name="metadata">Метаданные модели.</param>
      <param name="context">Контекст контроллера.</param>
      <param name="attribute">Атрибут регулярного выражения.</param>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.GetClientValidationRules">
      <summary>Получает список правил проверки клиента по регулярным выражениям.</summary>
      <returns>Список правил проверки клиента по регулярным выражениям.</returns>
    </member>
    <member name="T:System.Web.Mvc.RemoteAttribute">
      <summary>Предоставляет атрибут, использующий удаленный проверяющий элемент управления подключаемого модуля проверки jQuery. </summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RemoteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RemoteAttribute" />, используя указанное имя маршрута.</summary>
      <param name="routeName">Имя маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RemoteAttribute" />, используя указанные имя метода действия и имя контроллера.</summary>
      <param name="action">Имя метода действия.</param>
      <param name="controller">Имя контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RemoteAttribute" />, используя указанные имя метода действия, имя контроллера и имя области.</summary>
      <param name="action">Имя метода действия.</param>
      <param name="controller">Имя контроллера.</param>
      <param name="areaName">Имя области.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.Web.Mvc.AreaReference)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RemoteAttribute" />.</summary>
      <param name="action">Имя маршрута.</param>
      <param name="controller">Имя контроллера.</param>
      <param name="areaReference">Контроллер находится в корне, если <see cref="F:System.Web.Mvc.AreaReference.UseRoot" />.В противном случае ищите контроллер в текущей области.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.AdditionalFields">
      <summary>Получает или задает дополнительные поля, необходимые для проверки.</summary>
      <returns>Дополнительные поля, необходимые для проверки.</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation(System.String)">
      <summary>Возвращает строку имен полей проверки, разделенных запятыми.</summary>
      <returns>Строка имен полей проверки, разделенных запятыми.</returns>
      <param name="property">Имя свойства проверки.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatErrorMessage(System.String)">
      <summary>Форматирует сообщение об ошибке, отображаемое в случае сбоя проверки.</summary>
      <returns>Форматированное сообщение об ошибке.</returns>
      <param name="name">Имя, которое должно отображаться с сообщением об ошибке.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Форматирует свойство для клиентской проверки, добавляя в начало символ звездочки (*) и точку.</summary>
      <returns>Строка "*." Добавляется в начало свойства.</returns>
      <param name="property">Свойство.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Получает список правил проверки клиента для свойства.</summary>
      <returns>Список правил проверки удаленного клиента для свойства.</returns>
      <param name="metadata">Метаданные модели.</param>
      <param name="context">Контекст контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetUrl(System.Web.Mvc.ControllerContext)">
      <summary>Получает URL-адрес для вызова удаленной проверки.</summary>
      <returns>URL-адрес для вызова удаленной проверки.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.HttpMethod">
      <summary>Возвращает или задает HTTP-метод, используемый для удаленной проверки.</summary>
      <returns>HTTP-метод, используемый для удаленной проверки.По умолчанию установлено значение "Get".</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.IsValid(System.Object)">
      <summary>Этот метод всегда возвращает значение true.</summary>
      <returns>истина</returns>
      <param name="value">Конечный объект проверки.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteData">
      <summary>Получает словарь данных маршрута.</summary>
      <returns>Словарь данных маршрута.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteName">
      <summary>Получает или задает имя маршрута.</summary>
      <returns>Имя маршрута.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.Routes">
      <summary>Получает коллекцию маршрутов из таблицы маршрутов.</summary>
      <returns>Коллекция маршрутов из таблицы маршрутов.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequiredAttributeAdapter">
      <summary>Предоставляет адаптер для атрибута <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RequiredAttribute)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />.</summary>
      <param name="metadata">Метаданные модели.</param>
      <param name="context">Контекст контроллера.</param>
      <param name="attribute">Обязательный атрибут.</param>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.GetClientValidationRules">
      <summary>Возвращает список правил проверки клиента по требуемым значениям.</summary>
      <returns>Список правил проверки клиента по требуемым значениям.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequireHttpsAttribute">
      <summary>Представляет атрибут, принудительно вызывающий переотправку незащищенного HTTP-запроса по протоколу HTTPS.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Обрабатывает незащищенные HTTP-запросы, которые отправляются методу действия.</summary>
      <param name="filterContext">Объект, который инкапсулирует сведения, необходимые для использования атрибута <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</param>
      <exception cref="T:System.InvalidOperationException">HTTP-запрос содержит недопустимый переопределяющий метод передачи.Все запросы GET считаются недопустимыми.</exception>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Определяет, является ли запрос защищенным (HTTPS), и, если не является, вызывает метод <see cref="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)" />.</summary>
      <param name="filterContext">Объект, который инкапсулирует сведения, необходимые для использования атрибута <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="filterContext" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutedContext">
      <summary>Предоставляет контекст для метода <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> класса <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult,System.Boolean,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="result">Объект результата.</param>
      <param name="canceled">Значение true, чтобы отменить выполнение. В противном случае — false.</param>
      <param name="exception">Объект исключения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="result" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Canceled">
      <summary>Получает или задает значение, указывающее, отменен ли данный экземпляр <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
      <returns>Значение true, если экземпляр отменен. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Exception">
      <summary>Возвращает или задает объект исключения.</summary>
      <returns>Объект исключения.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.ExceptionHandled">
      <summary>Получает или задает значение, указывающее, выполнена ли обработка исключения.</summary>
      <returns>Значение true, если исключение обработано. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Result">
      <summary>Получает или задает результат действия.</summary>
      <returns>Результат действия.</returns>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutingContext">
      <summary>Предоставляет контекст для метода <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" /> класса <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ResultExecutingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ResultExecutingContext" />, используя указанные контекст контроллера и результат действия.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="result">Результат действия.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="result" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Cancel">
      <summary>Получает или задает значение, указывающее, имеет ли данное значение <see cref="T:System.Web.Mvc.ResultExecutingContext" /> значение "cancel".</summary>
      <returns>Значение true, если значение равно "cancel". В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Result">
      <summary>Получает или задает результат действия.</summary>
      <returns>Результат действия.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteAreaAttribute">
      <summary>Определяет область, задаваемую для всех маршрутов, указанных в этом контроллере.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAreaAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RouteAreaAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAreaAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RouteAreaAttribute" />.</summary>
      <param name="areaName">Имя области.Если значение равно null, будет предпринята попытке получить имя области из пространства имен целевого контроллера.</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAreaAttribute.AreaName">
      <summary>Получает имя области, задаваемое для всех маршрутов, указанных в этом контроллере.Если значение равно null, будет предпринята попытке получить имя области из пространства имен целевого контроллера.</summary>
      <returns>Имя области, задаваемое для всех маршрутов, указанных в этом контроллере.</returns>
    </member>
    <member name="P:System.Web.Mvc.RouteAreaAttribute.AreaPrefix">
      <summary>Получает префикс URL-адреса, который будет применен ко всем маршрутам этой области.По умолчанию используется имя области.</summary>
      <returns>Префикс URL-адреса, который будет применен ко всем маршрутам этой области.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteAttribute">
      <summary>Поместите в контроллер или действие, чтобы предоставить его непосредственно через маршрут.При размещении в контроллере применяется к действиям без каких-либо System.Web.Mvc.RouteAttribute.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RouteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RouteAttribute" /> с указанным шаблоном.</summary>
      <param name="template">Шаблон для сопоставления маршрута.</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Name">
      <summary>Получает или задает имя маршрута.</summary>
      <returns>Имя маршрута.</returns>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Order">
      <summary>Получает порядок применения маршрута.</summary>
      <returns>Порядок применения маршрута.</returns>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.System#Web#Mvc#Routing#IDirectRouteFactory#CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>Создает запись прямого маршрута.</summary>
      <returns>Запись прямого маршрута.</returns>
      <param name="context">Контекст, используемый при создании маршрута.</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Template">
      <summary>Получает шаблон для сопоставления маршрута.</summary>
      <returns>Шаблон для сопоставления.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions">
      <summary>Предоставляет расширения для атрибута коллекции маршрутов.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection)">
      <summary>Сопоставляет маршруты с определенными атрибутами для приложения.</summary>
      <param name="routes">Коллекция маршрутов.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IDirectRouteProvider)">
      <summary>Сопоставляет маршруты с определенными атрибутами для приложения.</summary>
      <param name="directRouteProvider">
        <see cref="T:System.Web.Mvc.Routing.IDirectRouteProvider" />, используемый для маршрутов сопоставления.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Сопоставляет маршруты с определенными атрибутами для приложения.</summary>
      <param name="routes">Коллекция маршрутов.</param>
      <param name="constraintResolver">Объект <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" />, используемый для разрешения встроенных ограничений в шаблонах маршрутов.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IInlineConstraintResolver,System.Web.Mvc.Routing.IDirectRouteProvider)">
      <summary>Сопоставляет маршруты с определенными атрибутами для приложения.</summary>
      <param name="constraintResolver">Объект <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" />, используемый для разрешения встроенных ограничений в шаблонах маршрутов.</param>
      <param name="directRouteProvider">
        <see cref="T:System.Web.Mvc.Routing.IDirectRouteProvider" />, используемый для маршрутов сопоставления.</param>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionExtensions">
      <summary>Расширяет объект <see cref="T:System.Web.Routing.RouteCollection" /> для маршрутизации MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Возвращает объект, содержащий сведения о маршруте и виртуальном пути, которые получены в результате создания URL-адреса в текущей области.</summary>
      <returns>Объект, содержащий сведения о маршруте и виртуальном пути, которые получены в результате создания URL-адреса в текущей области.</returns>
      <param name="routes">Объект, содержащий маршруты для приложений.</param>
      <param name="requestContext">Объект, инкапсулирующий сведения о запрошенном маршруте.</param>
      <param name="name">Имя маршрута для использования при извлечении информации об URL-пути.</param>
      <param name="values">Объект, содержащий параметры для маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>Возвращает объект, содержащий сведения о маршруте и виртуальном пути, которые получены в результате создания URL-адреса в текущей области.</summary>
      <returns>Объект, содержащий сведения о маршруте и виртуальном пути, которые получены в результате создания URL-адреса в текущей области.</returns>
      <param name="routes">Объект, содержащий маршруты для приложений.</param>
      <param name="requestContext">Объект, инкапсулирующий сведения о запрошенном маршруте.</param>
      <param name="values">Объект, содержащий параметры для маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String)">
      <summary>Игнорирует указанный URL-маршрут для заданного списка доступных маршрутов.</summary>
      <param name="routes">Коллекция маршрутов для приложения.</param>
      <param name="url">Шаблон URL-адреса для игнорируемого маршрута.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="routes" /> или <paramref name="url" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String,System.Object)">
      <summary>Игнорирует указанный URL-маршрут для заданного списка доступных маршрутов и списка ограничений.</summary>
      <param name="routes">Коллекция маршрутов для приложения.</param>
      <param name="url">Шаблон URL-адреса для игнорируемого маршрута.</param>
      <param name="constraints">Набор выражений, задающих значения для параметра <paramref name="url" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="routes" /> или <paramref name="url" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String)">
      <summary>Сопоставляет указанный URL-маршрут.</summary>
      <returns>Ссылка на сопоставленный маршрут.</returns>
      <param name="routes">Коллекция маршрутов для приложения.</param>
      <param name="name">Имя сопоставляемого маршрута.</param>
      <param name="url">Шаблон URL-адреса для маршрута.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="routes" /> или <paramref name="url" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object)">
      <summary>Сопоставляет заданный URL-маршрут и задает значения маршрута по умолчанию.</summary>
      <returns>Ссылка на сопоставленный маршрут.</returns>
      <param name="routes">Коллекция маршрутов для приложения.</param>
      <param name="name">Имя сопоставляемого маршрута.</param>
      <param name="url">Шаблон URL-адреса для маршрута.</param>
      <param name="defaults">Объект, содержащий значения маршрута по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="routes" /> или <paramref name="url" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Сопоставляет заданный URL-маршрут и задает значения маршрута по умолчанию и ограничения.</summary>
      <returns>Ссылка на сопоставленный маршрут.</returns>
      <param name="routes">Коллекция маршрутов для приложения.</param>
      <param name="name">Имя сопоставляемого маршрута.</param>
      <param name="url">Шаблон URL-адреса для маршрута.</param>
      <param name="defaults">Объект, содержащий значения маршрута по умолчанию.</param>
      <param name="constraints">Набор выражений, задающих значения для параметра <paramref name="url" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="routes" /> или <paramref name="url" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Сопоставляет заданный URL-маршрут и задает значения маршрута по умолчанию, ограничения и пространства имен.</summary>
      <returns>Ссылка на сопоставленный маршрут.</returns>
      <param name="routes">Коллекция маршрутов для приложения.</param>
      <param name="name">Имя сопоставляемого маршрута.</param>
      <param name="url">Шаблон URL-адреса для маршрута.</param>
      <param name="defaults">Объект, содержащий значения маршрута по умолчанию.</param>
      <param name="constraints">Набор выражений, задающих значения для параметра <paramref name="url" />.</param>
      <param name="namespaces">Набор пространств имен для приложения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="routes" /> или <paramref name="url" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.String[])">
      <summary>Сопоставляет заданный URL-маршрут и задает значения маршрута по умолчанию и пространства имен.</summary>
      <returns>Ссылка на сопоставленный маршрут.</returns>
      <param name="routes">Коллекция маршрутов для приложения.</param>
      <param name="name">Имя сопоставляемого маршрута.</param>
      <param name="url">Шаблон URL-адреса для маршрута.</param>
      <param name="defaults">Объект, содержащий значения маршрута по умолчанию.</param>
      <param name="namespaces">Набор пространств имен для приложения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="routes" /> или <paramref name="url" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.String[])">
      <summary>Сопоставляет заданный URL-маршрут и задает пространства имен.</summary>
      <returns>Ссылка на сопоставленный маршрут.</returns>
      <param name="routes">Коллекция маршрутов для приложения.</param>
      <param name="name">Имя сопоставляемого маршрута.</param>
      <param name="url">Шаблон URL-адреса для маршрута.</param>
      <param name="namespaces">Набор пространств имен для приложения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="routes" /> или <paramref name="url" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProvider">
      <summary>Представляет поставщика значений для данных маршрута, содержащихся в объекте, который реализует интерфейс <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RouteDataValueProvider" />.</summary>
      <param name="controllerContext">Объект, содержащий сведения об HTTP-запросе.</param>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProviderFactory">
      <summary>Представляет фабрику для создания объектов поставщиков значений данных маршрутов.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RouteDataValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Возвращает объект поставщика значения для заданного контекста контроллера.</summary>
      <returns>Объект поставщика значения.</returns>
      <param name="controllerContext">Объект, инкапсулирующий сведения о текущем HTTP-запросе.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerContext" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RoutePrefixAttribute">
      <summary>Отмечает контроллер префиксом маршрута, который применяется ко всем действиям в контроллере.</summary>
    </member>
    <member name="M:System.Web.Mvc.RoutePrefixAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RoutePrefixAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RoutePrefixAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.RoutePrefixAttribute" /> с указанным префиксом.</summary>
      <param name="prefix">Префикс маршрута для контроллера.</param>
    </member>
    <member name="P:System.Web.Mvc.RoutePrefixAttribute.Prefix">
      <summary>Получает префикс маршрута.</summary>
      <returns>Префикс маршрута.</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectList">
      <summary>Представляет список, позволяющий пользователям выбрать один элемент.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.SelectList" />, используя указанные элементы для списка.</summary>
      <param name="items">Элементы.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.SelectList" />, используя указанные элементы для списка и выбранное значение.</summary>
      <param name="items">Элементы.</param>
      <param name="selectedValue">Выбранное значение.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.Object,System.Collections.IEnumerable)">
      <summary>Инициализирует новый экземпляр класса SelectList, используя указанные элементы для списка, выбранное значение и отключенные значения.</summary>
      <param name="items">Элементы, использованные для создания каждого элемента <see cref="T:System.Web.Mvc.SelectListItem" /> списка.</param>
      <param name="selectedValue">Выбранное значение.Использовалось для сопоставления свойства Selected соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Отключенные значения.Использовалось для сопоставления свойства Disabled соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.SelectList" />, используя указанные элементы для списка, поле значений данных и поле текстовых данных.</summary>
      <param name="items">Элементы.</param>
      <param name="dataValueField">Поле значений данных.</param>
      <param name="dataTextField">Поле текстовых данных.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.SelectList" />, используя указанные элементы для списка, поле значений данных, поле текстовых данных и выбранное значение.</summary>
      <param name="items">Элементы.</param>
      <param name="dataValueField">Поле значений данных.</param>
      <param name="dataTextField">Поле текстовых данных.</param>
      <param name="selectedValue">Выбранное значение.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object,System.Collections.IEnumerable)">
      <summary>Инициализирует новый экземпляр класса SelectList, используя указанные элементы для списка, поле значений данных, поле текстовых данных, выбранное значение и отключенные значения.</summary>
      <param name="items">Элементы, использованные для создания каждого элемента <see cref="T:System.Web.Mvc.SelectListItem" /> списка.</param>
      <param name="dataValueField">Поле значений данных.Использовалось для сопоставления свойства Value соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Поле текстовых данных.Использовалось для сопоставления свойства Text соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValue">Выбранное значение.Использовалось для сопоставления свойства Selected соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Отключенные значения.Использовалось для сопоставления свойства Disabled соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Object)">
      <summary>Инициализирует новый экземпляр класса SelectList, используя указанные элементы для списка, поле значений данных, поле текстовых данных, поле группы данных и выбранное значение.</summary>
      <param name="items">Элементы, использованные для создания каждого элемента <see cref="T:System.Web.Mvc.SelectListItem" /> списка.</param>
      <param name="dataValueField">Поле значений данных.Использовалось для сопоставления свойства Value соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Поле текстовых данных.Использовалось для сопоставления свойства Text соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Поле группы данных.Использовалось для сопоставления свойства Group соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValue">Выбранное значение.Использовалось для сопоставления свойства Selected соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Object,System.Collections.IEnumerable)">
      <summary>Инициализирует новый экземпляр класса SelectList, используя указанные элементы для списка, поле значений данных, поле текстовых данных, поле группы данных, выбранное значение и отключенные значения.</summary>
      <param name="items">Элементы, использованные для создания каждого элемента <see cref="T:System.Web.Mvc.SelectListItem" /> списка.</param>
      <param name="dataValueField">Поле значений данных.Использовалось для сопоставления свойства Value соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Поле текстовых данных.Использовалось для сопоставления свойства Text соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Поле группы данных.Использовалось для сопоставления свойства Group соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValue">Выбранное значение.Использовалось для сопоставления свойства Selected соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Отключенные значения.Использовалось для сопоставления свойства Disabled соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Object,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Инициализирует новый экземпляр класса SelectList, используя указанные элементы для списка, поле значений данных, поле текстовых данных, поле группы данных.выбранное значение, отключенные значения и отключенные группы.</summary>
      <param name="items">Элементы, использованные для создания каждого элемента <see cref="T:System.Web.Mvc.SelectListItem" /> списка.</param>
      <param name="dataValueField">Поле значений данных.Использовалось для сопоставления свойства Value соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Поле текстовых данных.Использовалось для сопоставления свойства Text соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Поле группы данных.Использовалось для сопоставления свойства Group соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValue">Выбранное значение.Использовалось для сопоставления свойства Selected соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Отключенные значения.Использовалось для сопоставления свойства Disabled соответствующего элемента <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledGroups">Отключенные группы.Использовалось для сопоставления свойства Disabled соответствующего элемента <see cref="T:System.Web.Mvc.SelectListGroup" />.</param>
    </member>
    <member name="P:System.Web.Mvc.SelectList.SelectedValue">
      <summary>Получает значение списка, выбранное пользователем.</summary>
      <returns>Выбранное значение.</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectListGroup">
      <summary>Представляет элемент optgroup HTML и его атрибуты.В выбранном списке поддерживаются несколько групп с одинаковым именем.Они сравниваются с равенством ссылок.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectListGroup.#ctor"></member>
    <member name="P:System.Web.Mvc.SelectListGroup.Disabled">
      <summary>Получает или задает значение, указывающее, отключен ли этот элемент <see cref="T:System.Web.Mvc.SelectListGroup" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListGroup.Name">
      <summary>Представляет значение метки optgroup.</summary>
    </member>
    <member name="T:System.Web.Mvc.SelectListItem">
      <summary>Представляет выбранный элемент в экземпляре класса <see cref="T:System.Web.Mvc.SelectList" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectListItem.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.SelectListItem" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Disabled">
      <summary>Получает или задает значение, указывающее, отключен ли этот элемент <see cref="T:System.Web.Mvc.SelectListItem" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Group">
      <summary>Представляет элемент optgroup HTML, в оболочку которого помещен этот элемент.В выбранном списке поддерживаются несколько групп с одинаковым именем.Они сравниваются с равенством ссылок.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Selected">
      <summary>Получает или задает значение, указывающее, выбран ли этот элемент <see cref="T:System.Web.Mvc.SelectListItem" />.</summary>
      <returns>Значение true, если элемент выбран. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Text">
      <summary>Получает или задает текст выбранного элемента.</summary>
      <returns>Текст.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Value">
      <summary>Получает или задает значение выбранного элемента.</summary>
      <returns>Значение.</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateAttribute">
      <summary>Задает состояние сеанса для контроллера.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateAttribute.#ctor(System.Web.SessionState.SessionStateBehavior)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.SessionStateAttribute" />.</summary>
      <param name="behavior">Тип состояния сеанса.</param>
    </member>
    <member name="P:System.Web.Mvc.SessionStateAttribute.Behavior">
      <summary>Получает поведение состояния сеанса контроллера.</summary>
      <returns>Поведение состояния контроллера.</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateTempDataProvider">
      <summary>Предоставляет данные о состоянии сеанса для текущего объекта <see cref="T:System.Web.Mvc.TempDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.SessionStateTempDataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Загружает временные данные, используя указанный контекст контроллера.</summary>
      <returns>Временные данные.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <exception cref="T:System.InvalidOperationException">При извлечении контекста сеанса возникла ошибка.</exception>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Сохраняет заданные значения в словаре временных данных, используя указанный контекст контроллера.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="values">Значения.</param>
      <exception cref="T:System.InvalidOperationException">При извлечении контекста сеанса возникла ошибка.</exception>
    </member>
    <member name="T:System.Web.Mvc.StringLengthAttributeAdapter">
      <summary>Предоставляет адаптер для атрибута <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.StringLengthAttribute)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.StringLengthAttributeAdapter" />.</summary>
      <param name="metadata">Метаданные модели.</param>
      <param name="context">Контекст контроллера.</param>
      <param name="attribute">Атрибут длины строки.</param>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.GetClientValidationRules">
      <summary>Получает список правил проверки клиента по длине строки.</summary>
      <returns>Список правил проверки клиента по длине строки.</returns>
    </member>
    <member name="T:System.Web.Mvc.TempDataDictionary">
      <summary>Представляет набор данных, существующий только в течение времени от одного запроса до другого.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.TempDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Add(System.String,System.Object)">
      <summary>Добавляет в объект <see cref="T:System.Collections.Generic.IDictionary`2" /> элемент, имеющий указанные ключ и значение.</summary>
      <param name="key">Ключ добавляемого элемента.</param>
      <param name="value">Добавляемое значение элемента.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IDictionary`2" /> доступен только для чтения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Элемент, имеющий такой ключ, уже существует в объекте <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Clear">
      <summary>Удаляет все элементы из экземпляра <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsKey(System.String)">
      <summary>Определяет, содержит ли экземпляр <see cref="T:System.Collections.Generic.IDictionary`2" /> элемент, имеющий указанный ключ.</summary>
      <returns>Значение true, если экземпляр <see cref="T:System.Collections.Generic.IDictionary`2" /> содержит элемент с указанным ключом. В противном случае — значение false.</returns>
      <param name="key">Ключ для поиска в экземпляре <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsValue(System.Object)">
      <summary>Определяет, содержит ли словарь указанное значение.</summary>
      <returns>Значение true, если словарь содержит указанное значение. В противном случае — значение false.</returns>
      <param name="value">Значение.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Count">
      <summary>Получает количество элементов объекта <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>Количество элементов объекта <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.GetEnumerator">
      <summary>Получает перечислитель.</summary>
      <returns>Перечислитель.</returns>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Item(System.String)">
      <summary>Получает или задает объект, имеющий указанный ключ.</summary>
      <returns>Объект, имеющий указанный ключ.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep">
      <summary>Помечает все ключи в словаре для сохранения.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep(System.String)">
      <summary>Помечает указанные ключи в словаре для сохранения.</summary>
      <param name="key">Ключ, который требуется сохранить в словаре.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Keys">
      <summary>Получает объект <see cref="T:System.Collections.Generic.ICollection`1" />, содержащий ключи элементов объекта <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Ключи элементов объекта <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Load(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Загружает указанный контекст контроллера, используя заданный поставщик данных.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="tempDataProvider">Временный поставщик данных.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Peek(System.String)">
      <summary>Возвращает объект, содержащий элемент, связанный с указанным ключом, не помечая ключ как подлежащий удалению.</summary>
      <returns>Объект, содержащий элемент, связанный с указанным ключом.</returns>
      <param name="key">Ключ возвращаемого элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Remove(System.String)">
      <summary>Удаляет из объекта <see cref="T:System.Collections.Generic.IDictionary`2" /> элемент, имеющий указанный ключ.</summary>
      <returns>Значение true, если элемент успешно удален. В противном случае — значение false.Также этот метод возвращает значение false, если <paramref name="key" /> не найден в <see cref="T:System.Collections.Generic.IDictionary`2" />.например.</returns>
      <param name="key">Ключ элемента, который необходимо удалить.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IDictionary`2" /> доступен только для чтения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Save(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Сохраняет указанный контекст контроллера, используя заданный поставщик данных.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="tempDataProvider">Временный поставщик данных.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Добавляет в словарь указанную пару "ключ-значение".</summary>
      <param name="keyValuePair">Пара "ключ-значение".</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Определяет, содержится ли указанный элемент в последовательности, используя компаратор проверки на равенство по умолчанию.</summary>
      <returns>Значение true, если словарь содержит указанную пару "ключ-значение". В противном случае — значение false.</returns>
      <param name="keyValuePair">Искомая пара "ключ-значение".</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Копирует пару "ключ-значение" в указанный массив по заданному индексу.</summary>
      <param name="array">Целевой массив.</param>
      <param name="index">Индекс.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Получает значение, указывающее, доступен ли словарь только для чтения.</summary>
      <returns>Значение true, если словарь доступен только для чтения. В противном случае — значение false.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Удаляет из словаря указанную пару "ключ-значение".</summary>
      <returns>Значение true, если пара "ключ-значение" успешно удалена. В противном случае — значение false.</returns>
      <param name="keyValuePair">Пара "ключ-значение".</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который можно использовать для итерации по коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации в коллекции.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Получает значение элемента, имеющего указанный ключ.</summary>
      <returns>Значение true, если объект, реализующий <see cref="T:System.Collections.Generic.IDictionary`2" />, содержит элемент с указанным ключом. В противном случае — значение false.</returns>
      <param name="key">Ключ значения, которое необходимо получить.</param>
      <param name="value">Этот метод возвращает значение, связанное с указанным ключом, если он найден; в противном случае возвращается значение по умолчанию для типа параметра <paramref name="value" />.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Values">
      <summary>Получает объект <see cref="T:System.Collections.Generic.ICollection`1" />, содержащий значения элементов объекта <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Значения элементов объекта, который реализует объект <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.TemplateInfo">
      <summary>Инкапсулирует сведения о текущем контексте шаблона.</summary>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.FormattedModelValue">
      <summary>Получает или задает форматированное значение модели.</summary>
      <returns>Форматированное значение модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldId(System.String)">
      <summary>Извлекает полный DOM-идентификатор поля, используя указанный HTML-атрибут name.</summary>
      <returns>Полный DOM-идентификатор.</returns>
      <param name="partialFieldName">Значение HTML-атрибута name.</param>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldName(System.String)">
      <summary>Извлекает полное имя (включая префикс) для поля, используя указанный HTML-атрибут name.</summary>
      <returns>Имя с префиксом для поля.</returns>
      <param name="partialFieldName">Значение HTML-атрибута name.</param>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.HtmlFieldPrefix">
      <summary>Получает или задает префикс поля HTML.</summary>
      <returns>Префикс поля HTML.</returns>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.TemplateDepth">
      <summary>Содержит число объектов, которые были посещены пользователем.</summary>
      <returns>Число объектов.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.Visited(System.Web.Mvc.ModelMetadata)">
      <summary>Определяет, посещался ли шаблон пользователем.</summary>
      <returns>Значение true, если шаблон посещался пользователем; в противном случае — значение false.</returns>
      <param name="metadata">Объект, инкапсулирующий сведения, которые описывают модель.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlHelper">
      <summary>Содержит методы построения URL-адресов для MVC ASP.NET в приложении.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.UrlHelper" />, используя указанный контекст запроса.</summary>
      <param name="requestContext">Объект, содержащий сведения о текущем запросе и о маршруте, с которым он сопоставлен.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.UrlHelper" />, используя указанные контекст запроса и коллекцию маршрутов.</summary>
      <param name="requestContext">Объект, содержащий сведения о текущем запросе и о маршруте, с которым он сопоставлен.</param>
      <param name="routeCollection">Коллекция маршрутов.</param>
      <exception cref="ArgumentNullException">Параметр <paramref name="requestContext" /> или <paramref name="routeCollection" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action">
      <summary>Формирует строку с полным URL-адресом метода действия.</summary>
      <returns>Строка с полным URL-адресом метода действия.</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String)">
      <summary>Формирует полный URL-адрес метода действия, используя указанное имя действия.</summary>
      <returns>Полный URL-адрес метода действия.</returns>
      <param name="actionName">Имя метода действия.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Object)">
      <summary>Формирует полный URL-адрес метода действия, используя указанные имя действия и значения маршрута.</summary>
      <returns>Полный URL-адрес метода действия.</returns>
      <param name="actionName">Имя метода действия.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String)">
      <summary>Формирует полный URL-адрес метода действия, используя указанные имя действия и имя контроллера.</summary>
      <returns>Полный URL-адрес метода действия.</returns>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object)">
      <summary>Формирует полный URL-адрес метода действия, используя указанные имя действия, имя контроллера и значения маршрута.</summary>
      <returns>Полный URL-адрес метода действия.</returns>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object,System.String)">
      <summary>Формирует полный URL-адрес метода действия, используя указанные имя действия, имя контроллера, значения маршрута и применяемый протокол.</summary>
      <returns>Полный URL-адрес метода действия.</returns>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="protocol">Протокол для URL-адреса, например "http" или "https".</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Формирует полный URL-адрес метода действия, используя указанные имя действия, имя контроллера и значения маршрута.</summary>
      <returns>Полный URL-адрес метода действия.</returns>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String)">
      <summary>Формирует полный URL-адрес метода действия, используя указанные имя действия, имя контроллера, значения маршрута и применяемый протокол.</summary>
      <returns>Полный URL-адрес метода действия.</returns>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="protocol">Протокол для URL-адреса, например "http" или "https".</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Формирует полный URL-адрес метода действия, используя указанные имя действия, имя контроллера, значения маршрута, применяемый протокол и имя узла.</summary>
      <returns>Полный URL-адрес метода действия.</returns>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="protocol">Протокол для URL-адреса, например "http" или "https".</param>
      <param name="hostName">Имя узла для URL-адреса.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Формирует полный URL-адрес метода действия для указанных имени действия и значений маршрута.</summary>
      <returns>Полный URL-адрес метода действия.</returns>
      <param name="actionName">Имя метода действия.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Content(System.String)">
      <summary>Преобразует виртуальный (относительный) путь в абсолютный путь к приложению.</summary>
      <returns>Абсолютный путь к приложению.</returns>
      <param name="contentPath">Виртуальный путь к содержимому.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Encode(System.String)">
      <summary>Кодирует специальные знаки строки URL-адреса в эквивалентные сущности знаков.</summary>
      <returns>Кодируемая строка URL-адреса.</returns>
      <param name="url">Кодируемый текст.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateContentUrl(System.String,System.Web.HttpContextBase)">
      <summary>Возвращает строку, содержащую URL-адрес содержимого.</summary>
      <returns>Строка, содержащая URL-адрес содержимого.</returns>
      <param name="contentPath">Путь к содержимому.</param>
      <param name="httpContext">Контекст http.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Возвращает строку, которая содержит URL-адрес.</summary>
      <returns>Строка, содержащая URL-адрес.</returns>
      <param name="routeName">Имя маршрута.</param>
      <param name="actionName">Имя действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="protocol">Протокол HTTP.</param>
      <param name="hostName">Имя узла.</param>
      <param name="fragment">Фрагмент.</param>
      <param name="routeValues">Значения маршрута.</param>
      <param name="routeCollection">Коллекция маршрутов.</param>
      <param name="requestContext">Контекст запроса.</param>
      <param name="includeImplicitMvcValues">Значение true для включения неявных значений MVC; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Возвращает строку, которая содержит URL-адрес.</summary>
      <returns>Строка, содержащая URL-адрес.</returns>
      <param name="routeName">Имя маршрута.</param>
      <param name="actionName">Имя действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Значения маршрута.</param>
      <param name="routeCollection">Коллекция маршрутов.</param>
      <param name="requestContext">Контекст запроса.</param>
      <param name="includeImplicitMvcValues">Значение true для включения неявных значений MVC; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.HttpRouteUrl(System.String,System.Object)">
      <summary>Формирует полный URL-адрес для указанных значений маршрута.</summary>
      <returns>Полный URL-адрес для указанных значений маршрута.</returns>
      <param name="routeName">Имя маршрута.</param>
      <param name="routeValues">Значения маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.HttpRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Формирует полный URL-адрес для указанных значений маршрута.</summary>
      <returns>Полный URL-адрес для указанных значений маршрута.</returns>
      <param name="routeName">Имя маршрута.</param>
      <param name="routeValues">Значения маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.IsLocalUrl(System.String)">
      <summary>Возвращает значение, показывающее, является ли URL-адрес локальным.</summary>
      <returns>Значение true, если URL-адрес является локальным. В противном случае — значение false.</returns>
      <param name="url">URL-адрес.</param>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RequestContext">
      <summary>Получает информацию об HTTP-запросе, соответствующем определенному маршруту.</summary>
      <returns>Контекст запроса.</returns>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RouteCollection">
      <summary>Получает коллекцию, содержащую маршруты, зарегистрированные для приложения.</summary>
      <returns>Коллекция маршрутов.</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Object)">
      <summary>Формирует полный URL-адрес для указанных значений маршрута.</summary>
      <returns>Полный URL-адрес.</returns>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String)">
      <summary>Формирует полный URL-адрес для указанного имени маршрута.</summary>
      <returns>Полный URL-адрес.</returns>
      <param name="routeName">Имя маршрута, используемого для формирования URL-адреса.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object)">
      <summary>Формирует полный URL-адрес для указанных значений маршрута, используя имя маршрута.</summary>
      <returns>Полный URL-адрес.</returns>
      <param name="routeName">Имя маршрута, используемого для формирования URL-адреса.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object,System.String)">
      <summary>Формирует полный URL-адрес для указанных значений маршрута, используя имя маршрута и применяемый протокол.</summary>
      <returns>Полный URL-адрес.</returns>
      <param name="routeName">Имя маршрута, используемого для формирования URL-адреса.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="protocol">Протокол для URL-адреса, например "http" или "https".</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Формирует полный URL-адрес для указанных значений маршрута, используя имя маршрута.</summary>
      <returns>Полный URL-адрес.</returns>
      <param name="routeName">Имя маршрута, используемого для формирования URL-адреса.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Формирует полный URL-адрес для указанных значений маршрута, используя заданные имя маршрута, применяемый протокол и имя узла.</summary>
      <returns>Полный URL-адрес.</returns>
      <param name="routeName">Имя маршрута, используемого для формирования URL-адреса.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="protocol">Протокол для URL-адреса, например "http" или "https".</param>
      <param name="hostName">Имя узла для URL-адреса.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Web.Routing.RouteValueDictionary)">
      <summary>Формирует полный URL-адрес для указанных значений маршрута.</summary>
      <returns>Полный URL-адрес.</returns>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlParameter">
      <summary>Представляет необязательный параметр, используемый классом <see cref="T:System.Web.Mvc.MvcHandler" /> при маршрутизации.</summary>
    </member>
    <member name="F:System.Web.Mvc.UrlParameter.Optional">
      <summary>Содержит значение необязательного параметра, доступное только для чтения.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlParameter.ToString">
      <summary>Возвращает пустую строку.Данный метод поддерживает инфраструктуру ASP.NET MVC и не предназначен для непосредственного использования из кода.</summary>
      <returns>Пустая строка.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidatableObjectAdapter">
      <summary>Предоставляет адаптер объекта, который можно проверить.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ValidatableObjectAdapter" />.</summary>
      <param name="metadata">Метаданные модели.</param>
      <param name="context">Контекст контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.Validate(System.Object)">
      <summary>Проверяет указанный объект.</summary>
      <returns>Список результатов проверки.</returns>
      <param name="container">Контейнер.</param>
    </member>
    <member name="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute">
      <summary>Представляет атрибут, используемый для предупреждения подделки запросов.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Вызывается, когда требуется авторизация.</summary>
      <param name="filterContext">Контекст фильтра.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="filterContext" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.Salt">
      <summary>Получает или задает salt-строку.</summary>
      <returns>Salt-строка.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidateInputAttribute">
      <summary>Представляет атрибут, используемый для пометки методов действий, входные данные которых должны быть проверены.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ValidateInputAttribute" />.</summary>
      <param name="enableValidation">Значение true, чтобы разрешить проверку.</param>
    </member>
    <member name="P:System.Web.Mvc.ValidateInputAttribute.EnableValidation">
      <summary>Получает или задает значение, указывающее, разрешать ли проверку.</summary>
      <returns>Значение true, если проверка включена. В противном случае — значение false.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Вызывается, когда требуется авторизация.</summary>
      <param name="filterContext">Контекст фильтра.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="filterContext" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderCollection">
      <summary>Представляет коллекцию объектов поставщиков значений для приложения.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ValueProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IValueProvider})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ValueProviderCollection" /> и регистрирует указанных поставщиков значений.</summary>
      <param name="list">Список регистрируемых поставщиков значений.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.ContainsPrefix(System.String)">
      <summary>Определяет, содержит ли коллекция указанный префикс.</summary>
      <returns>Значение true, если коллекция содержит заданный префикс. В противном случае — значение false.</returns>
      <param name="prefix">Искомый префикс.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetKeysFromPrefix(System.String)">
      <summary>Получает ключи по указанному префиксу.</summary>
      <returns>Ключи.</returns>
      <param name="prefix">Префикс.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String)">
      <summary>Возвращает объект значения, используя указанный ключ.</summary>
      <returns>Объект значения для заданного ключа.</returns>
      <param name="key">Ключ извлекаемого объекта значения.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String,System.Boolean)">
      <summary>Возвращает объект значения, используя указанные ключ и параметр пропуска проверки.</summary>
      <returns>Объект значения для заданного ключа.</returns>
      <param name="key">Ключ извлекаемого объекта значения.</param>
      <param name="skipValidation">Значение true, если проверка пропускается. В противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Вставляет указанный объект поставщика значений в коллекцию по указанному индексу.</summary>
      <param name="index">Отсчитываемый с нуля индекс расположения в коллекции, с которым поставщик значений должен быть вставлен в коллекцию.</param>
      <param name="item">Вставляемый объект поставщика значений.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="item" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.SetItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Заменяет поставщика значений по указанному индексу расположения новым поставщиком значений.</summary>
      <param name="index">Индекс (с нуля) элемента, который требуется заменить.</param>
      <param name="item">Новое значение элемента по указанному индексу.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="item" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderDictionary">
      <summary>Примечание. Данный API устарел.Представляет словарь поставщиков значений для приложения.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ValueProviderDictionary" />.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Добавляет указанный элемент в коллекцию поставщиков значений.</summary>
      <param name="item">Объект, добавляемый в объект <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Object)">
      <summary>Добавляет в коллекцию поставщиков значений элемент, имеющий указанные ключ и значение.</summary>
      <param name="key">Ключ добавляемого элемента.</param>
      <param name="value">Добавляемое значение элемента.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IDictionary`2" /> доступен только для чтения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Элемент, имеющий указанный ключ, уже существует в объекте <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Добавляет в коллекцию поставщиков значений элемент, имеющий указанные ключ и значение.</summary>
      <param name="key">Ключ добавляемого элемента.</param>
      <param name="value">Добавляемое значение элемента.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IDictionary`2" /> доступен только для чтения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Элемент, имеющий указанный ключ, уже существует в объекте <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Clear">
      <summary>Удаляет все элементы из коллекции поставщиков значений.</summary>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Определяет, содержится ли указанный элемент в коллекции поставщиков значений.</summary>
      <returns>Значение true, если <paramref name="item" /> найден в коллекции поставщиков значений; в обратном случае — значение false.</returns>
      <param name="item">Объект, который требуется найти в экземпляре <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.ContainsKey(System.String)">
      <summary>Определяет, содержится ли в коллекции поставщиков значений элемент с указанным ключом.</summary>
      <returns>Значение true, если в коллекции поставщиков значений содержится элемент с указанным ключом; в противном случае — значение false.</returns>
      <param name="key">Ключ элемента, который требуется найти в экземпляре <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.ControllerContext">
      <summary>Возвращает или задает контекст контроллера.</summary>
      <returns>Контекст контроллера.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult}[],System.Int32)">
      <summary>Копирует элементы коллекции в массив, начиная с указанного индекса.</summary>
      <param name="array">Одномерный массив, являющийся назначением элементов, копируемых из объекта <see cref="T:System.Collections.Generic.ICollection`1" />.Индексация в массиве должна вестись с нуля.</param>
      <param name="arrayIndex">Отсчитываемый с нуля индекс в массиве <paramref name="array" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> равен null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="arrayIndex" /> меньше 0.</exception>
      <exception cref="T:System.ArgumentException">Массив <paramref name="array" /> является многомерным.– или –Параметр <paramref name="arrayIndex" /> равен или больше длины <paramref name="array" />.– или –Количество элементов в исходной коллекции превышает доступное пространство от индекса массива <paramref name="arrayIndex" /> до конца массива назначения <paramref name="array" />.– или –Тип <paramref name="T" /> нельзя автоматически привести к типу массива назначения.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Count">
      <summary>Получает количество элементов в коллекции.</summary>
      <returns>Количество элементов в коллекции.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.GetEnumerator">
      <summary>Возвращает перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</summary>
      <returns>Перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.IsReadOnly">
      <summary>Получает значение, указывающее, действительно ли коллекция доступна только для чтения.</summary>
      <returns>Значение true, если коллекция доступна только для чтения. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Item(System.String)">
      <summary>Получает или задает объект <see cref="T:System.Web.Mvc.ValueProviderResult" />, имеющий указанный ключ.</summary>
      <returns>Объект <see cref="T:System.Web.Mvc.ValueProviderResult" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Keys">
      <summary>Получает коллекцию, содержащую ключи экземпляра <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Коллекция, содержащая ключи объекта, который реализует интерфейс <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Удаляет первое вхождение указанного элемента из коллекции поставщиков значений.</summary>
      <returns>Значение true, если элемент <paramref name="item" /> был успешно удален из коллекции; в противном случае — false.Также этот метод возвращает значение false, если <paramref name="item" /> не найден в коллекции.</returns>
      <param name="item">Объект, который требуется удалить из экземпляра <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.String)">
      <summary>Удаляет из коллекции поставщиков значений элемент, имеющий указанный ключ.</summary>
      <returns>Значение true, если элемент удален. В противном случае — значение false.Также этот метод возвращает значение false, если <paramref name="key" /> не найден в коллекции.</returns>
      <param name="key">Ключ элемента, который необходимо удалить.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IDictionary`2" /> доступен только для чтения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который можно использовать для итерации по коллекции.</summary>
      <returns>Перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Определяет, содержит ли коллекция указанный префикс.</summary>
      <returns>Значение true, если коллекция содержит заданный префикс. В противном случае — значение false.</returns>
      <param name="prefix">Искомый префикс.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Возвращает объект значения, используя указанный ключ.</summary>
      <returns>Объект значения для заданного ключа.</returns>
      <param name="key">Ключ возвращаемого объекта значения.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.TryGetValue(System.String,System.Web.Mvc.ValueProviderResult@)">
      <summary>Получает значение элемента, имеющего указанный ключ.</summary>
      <returns>Значение true, если объект, реализующий <see cref="T:System.Collections.Generic.IDictionary`2" />, содержит элемент с указанным ключом. В противном случае — значение false.</returns>
      <param name="key">Ключ элемента, который требуется получить.</param>
      <param name="value">Этот метод возвращает значение, связанное с указанным ключом, если он найден; в противном случае возвращается значение по умолчанию для типа параметра <paramref name="value" />.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Values">
      <summary>Получает коллекцию, содержащую значения объекта <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Коллекция значений объекта, который реализует интерфейс <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactories">
      <summary>Представляет контейнер для объектов фабрик поставщиков значений.</summary>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderFactories.Factories">
      <summary>Получает коллекцию фабрик поставщиков значений для приложения.</summary>
      <returns>Коллекция объектов фабрик поставщиков значений.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactory">
      <summary>Представляет фабрику для создания объектов поставщиков значений.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Возвращает объект поставщика значения для заданного контекста контроллера.</summary>
      <returns>Объект поставщика значения.</returns>
      <param name="controllerContext">Объект, инкапсулирующий сведения о текущем HTTP-запросе.</param>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactoryCollection">
      <summary>Представляет коллекцию фабрик поставщиков значений для приложения.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ValueProviderFactory})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" />, используя указанный список фабрик поставщиков значений.</summary>
      <param name="list">Список фабрик поставщиков значений для инициализации коллекции.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.ClearItems">
      <summary>Удаляет все элементы из коллекции.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Возвращает фабрику поставщика значений для заданного контекста контроллера.</summary>
      <returns>Объект фабрики поставщика значений для заданного контекста контроллера.</returns>
      <param name="controllerContext">Объект, инкапсулирующий сведения о текущем HTTP-запросе.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.InsertItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Вставляет указанный объект фабрики поставщика значений по указанному индексу.</summary>
      <param name="index">Отсчитываемый с нуля индекс расположения в коллекции, с которым поставщик значений должен быть вставлен в коллекцию.</param>
      <param name="item">Вставляемый объект фабрики поставщика значений.</param>
      <exception cref="[ArgumentNullException]">Параметр <paramref name="item" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.RemoveItem(System.Int32)">
      <summary>Удаляет элемент из коллекции по указанному индексу <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="index">Индекс (с нуля) элемента, который требуется удалить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="Index" /> меньше нуля.– или –<paramref name="Index" /> больше или равно <see cref="T:System.Collections.ObjectModel.Collection`1.Count" /></exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.SetItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Задает указанный объект фабрики поставщика значений по данному индексу.</summary>
      <param name="index">Отсчитываемый с нуля индекс расположения в коллекции, с которым поставщик значений должен быть вставлен в коллекцию.</param>
      <param name="item">Задаваемый объект фабрики поставщика значений.</param>
      <exception cref="[ArgumentNullException]">Параметр <paramref name="item" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderResult">
      <summary>Представляет результат привязки значения (например, из данных отправки формы или строки запроса) к свойству аргумента метода действия или к самому аргументу.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ValueProviderResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ValueProviderResult" />, используя указанные необработанное значение, значение попытки и сведения о языке и региональных параметрах.</summary>
      <param name="rawValue">Необработанное значение.</param>
      <param name="attemptedValue">Значение попытки.</param>
      <param name="culture">Язык и региональные параметры.</param>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.AttemptedValue">
      <summary>Получает или задает необработанное значение, которое преобразуется в строку для отображения.</summary>
      <returns>Необработанное значение.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type)">
      <summary>Преобразует значение, которое инкапсулируется этим результатом, в указанный тип.</summary>
      <returns>Преобразованное значение.</returns>
      <param name="type">Тип целевого объекта.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>Преобразует значение, которое инкапсулируется этим результатом, в указанный тип, используя заданные сведения о языке и региональных параметрах.</summary>
      <returns>Преобразованное значение.</returns>
      <param name="type">Тип целевого объекта.</param>
      <param name="culture">Язык и региональные параметры, используемые при преобразовании.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.Culture">
      <summary>Получает или задает язык и региональные параметры.</summary>
      <returns>Язык и региональные параметры.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.RawValue">
      <summary>Получает или задает необработанное значение, предоставляемое поставщиком значений.</summary>
      <returns>Необработанное значение.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewContext">
      <summary>Инкапсулирует сведения, относящиеся к визуализации представления.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView,System.Web.Mvc.ViewDataDictionary,System.Web.Mvc.TempDataDictionary,System.IO.TextWriter)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewContext" />, используя указанные контекст контроллера, представление, словарь данных представления, словарь временных данных и модуль записи текста.</summary>
      <param name="controllerContext">Инкапсулирует сведения об HTTP-запросе.</param>
      <param name="view">Визуализируемое представление.</param>
      <param name="viewData">Словарь, содержащий данные, необходимые для визуализации представления.</param>
      <param name="tempData">Словарь, содержащий временные данные для представления.</param>
      <param name="writer">Объект модуля записи текста, используемый для записи выходных данных HTML.</param>
      <exception cref="T:System.ArgumentNullException">Один из параметров имеет значение null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ClientValidationEnabled">
      <summary>Получает или задает значение, показывающее, включена ли проверка на стороне клиента.</summary>
      <returns>Значение true, если клиентская проверка включена. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.FormContext">
      <summary>Получает или задает объект, инкапсулирующий информацию, требуемую для проверки и обработки входных данных из формы HTML.</summary>
      <returns>Объект, инкапсулирующий информацию, требуемую для проверки и обработки входных данных из формы HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.OutputClientValidation">
      <summary>Записывает сведения о проверке клиента в НТТР-ответ.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.TempData">
      <summary>Получает данные, связанные с этим запросом и доступные только для одного запроса.</summary>
      <returns>Временные данные.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.UnobtrusiveJavaScriptEnabled">
      <summary>Получает или задает значение, показывающее, включен ли ненавязчивый JavaScript.</summary>
      <returns>Значение true, если ненавязчивый JavaScript включен. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ValidationMessageElement">
      <summary>Имя элемента для помещения в оболочку сообщения верхнего уровня, созданного <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" />, и других перегрузок.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ValidationSummaryMessageElement">
      <summary>Имя элемента для помещения в оболочку сообщения верхнего уровня, созданного <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" />, и других перегрузок.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.View">
      <summary>Получает объект, реализующий интерфейс <see cref="T:System.Web.Mvc.IView" /> для визуализации в браузере.</summary>
      <returns>Представление.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewBag">
      <summary>Получает или динамический словарь данных представления.</summary>
      <returns>Динамический словарь для данных представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewData">
      <summary>Получает данные представления, передаваемые в представление.</summary>
      <returns>Данные представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.Writer">
      <summary>Получает или задает объект модуля записи текста, используемый для записи выходных данных HTML.</summary>
      <returns>Объект, используемый для записи выходных данных HTML.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary">
      <summary>Представляет контейнер, используемый для передачи данных между контроллером и представлением.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewDataDictionary" />, используя указанную модель.</summary>
      <param name="model">Модель.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewDataDictionary" />, используя указанный словарь.</summary>
      <param name="dictionary">Словарь.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="dictionary" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Добавляет указанный элемент в коллекцию.</summary>
      <param name="item">Объект для добавления в коллекцию.</param>
      <exception cref="T:System.NotSupportedException">Коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.String,System.Object)">
      <summary>Добавляет элемент в коллекцию, используя указанные ключ и значение.</summary>
      <param name="key">Ключ добавляемого элемента.</param>
      <param name="value">Добавляемое значение элемента.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IDictionary`2" /> доступен только для чтения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Элемент с таким ключом уже существует в объекте <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Clear">
      <summary>Удаляет все элементы из коллекции.</summary>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Определяет, содержит ли коллекция указанный элемент.</summary>
      <returns>Значение true, если элемент <paramref name="item" /> найден в коллекции; в обратном случае — значение false.</returns>
      <param name="item">Объект, который требуется найти в коллекции.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.ContainsKey(System.String)">
      <summary>Определяет, содержится ли в коллекции элемент с указанным ключом.</summary>
      <returns>Значение true, если коллекция содержит элемент с указанным ключом. В противном случае — значение false.</returns>
      <param name="key">Ключ элемента для поиска в коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Копирует элементы коллекции в массив, начиная с определенного индекса.</summary>
      <param name="array">Одномерный массив, куда копируются элементы из данной коллекции.Индексация в массиве должна вестись с нуля.</param>
      <param name="arrayIndex">Значение нулевого индекса в массиве <paramref name="array" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> равен null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="arrayIndex" /> меньше 0.</exception>
      <exception cref="T:System.ArgumentException">Массив <paramref name="array" /> является многомерным.– или – Параметр <paramref name="arrayIndex" /> равен или больше длины <paramref name="array" />.– или – Количество элементов в исходной коллекции превышает доступное пространство от индекса массива <paramref name="arrayIndex" /> до конца массива назначения <paramref name="array" />.– или – Тип <paramref name="T" /> нельзя автоматически привести к типу массива назначения <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Count">
      <summary>Получает количество элементов в коллекции.</summary>
      <returns>Количество элементов в коллекции.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String)">
      <summary>Оценивает указанное выражение.</summary>
      <returns>Результаты оценки.</returns>
      <param name="expression">Выражение.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="expression" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String,System.String)">
      <summary>Оценивает указанное выражение, используя заданный формат.</summary>
      <returns>Результаты оценки.</returns>
      <param name="expression">Выражение.</param>
      <param name="format">Формат.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetEnumerator">
      <summary>Возвращает перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</summary>
      <returns>Перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetViewDataInfo(System.String)">
      <summary>Возвращает сведения о данных представления, как определено параметром <paramref name="expression" />.</summary>
      <returns>Объект, содержащий сведения о данных представления, определенные параметром <paramref name="expression" />.</returns>
      <param name="expression">Набор пар "ключ-значение", определяющих возвращаемые сведения о данных представления.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="expression" /> имеет значение null или пуст.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.IsReadOnly">
      <summary>Получает значение, указывающее, действительно ли коллекция доступна только для чтения.</summary>
      <returns>Значение true, если коллекция доступна только для чтения. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Item(System.String)">
      <summary>Получает или задает элемент, связанный с указанным ключом.</summary>
      <returns>Значение выбранного элемента.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Keys">
      <summary>Получает коллекцию, содержащую ключи данного словаря.</summary>
      <returns>Коллекция, содержащая ключи объекта, который реализует объект <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Model">
      <summary>Получает или задает модель, связанную с данными представления.</summary>
      <returns>Модель, связанная с данными представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelMetadata">
      <summary>Получает или задает сведения о модели.</summary>
      <returns>Сведения о модели.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelState">
      <summary>Получает состояние модели.</summary>
      <returns>Состояние модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Удаляет из коллекции первое вхождение указанного объекта.</summary>
      <returns>Значение true, если элемент <paramref name="item" /> был успешно удален из коллекции; в противном случае — false.Также этот метод возвращает значение false, если <paramref name="item" /> не найден в коллекции.</returns>
      <param name="item">Объект, удаляемый из коллекции.</param>
      <exception cref="T:System.NotSupportedException">Коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.String)">
      <summary>Удаляет из коллекции элемент, используя указанный ключ.</summary>
      <returns>Значение true, если объект удален. В противном случае — значение false.Также этот метод возвращает значение false, если <paramref name="key" /> не найден в исходной коллекции.</returns>
      <param name="key">Ключ элемента, который необходимо удалить.</param>
      <exception cref="T:System.NotSupportedException">Коллекция доступна только для чтения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.SetModel(System.Object)">
      <summary>Задает модель данных, которую следует использовать для представления.</summary>
      <param name="value">Модель данных, которую следует использовать для представления.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</summary>
      <returns>Перечислитель, с помощью которого можно осуществлять итерацию по элементам коллекции.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.TemplateInfo">
      <summary>Получает или задает объект, инкапсулирующий сведения о текущем контексте шаблона.</summary>
      <returns>Объект, содержащий сведения о текущем шаблоне.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Пытается извлечь значение, связанное с указанным ключом.</summary>
      <returns>Значение true, если коллекция содержит элемент с указанным ключом. В противном случае — значение false.</returns>
      <param name="key">Ключ значения, которое необходимо получить.</param>
      <param name="value">Этот метод возвращает значение, связанное с указанным ключом, если он найден; в противном случае возвращается значение по умолчанию для типа параметра <paramref name="value" />.Этот параметр передается неинициализированным.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Values">
      <summary>Получает коллекцию, содержащую значения в данном словаре.</summary>
      <returns>Коллекция, содержащая значения объекта, который реализует объект <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary`1">
      <summary>Представляет контейнер, используемый для передачи строго типизированных данных между контроллером и представлением.</summary>
      <typeparam name="TModel">Тип модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, используя указанный словарь данных представления.</summary>
      <param name="viewDataDictionary">Существующий словарь данных представления для копирования в этот экземпляр.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, используя указанную модель.</summary>
      <param name="model">Модель данных, которую следует использовать для представления.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.Model">
      <summary>Получает или задает модель.</summary>
      <returns>Ссылка на модель данных.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.ModelMetadata">
      <summary>Получает или задает сведения о модели.</summary>
      <returns>Сведения о модели.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.SetModel(System.Object)">
      <summary>Задает модель данных, которую следует использовать для представления.</summary>
      <param name="value">Модель данных, которую следует использовать для представления.</param>
      <exception cref="T:System.InvalidOperationException">При задании модели возникла ошибка.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewDataInfo">
      <summary>Инкапсулирует сведения о содержимом текущего шаблона, используемого для разработки шаблонов, и о вспомогательных методах HTML, взаимодействующих с шаблонами.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewDataInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor(System.Func{System.Object})">
      <summary>Инициализирует новый экземпляр класса T:System.Web.Mvc.ViewDataInfo и связывает делегат для доступа к сведениям о данных представления.</summary>
      <param name="valueAccessor">Делегат, определяющий способ доступа к сведениям о данных представления.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Container">
      <summary>Получает или задает объект, содержащий значения, которые должны отображаться шаблоном.</summary>
      <returns>Объект, содержащий значения, которые должны отображаться шаблоном.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.PropertyDescriptor">
      <summary>Получает или задает описание свойства, которое должно отображаться шаблоном.</summary>
      <returns>Описание свойства, которое должно отображаться шаблоном.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Value">
      <summary>Получает или задает текущее значение, которое должно отображаться шаблоном.</summary>
      <returns>Текущее значение, которое должно отображаться шаблоном.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineCollection">
      <summary>Представляет коллекцию обработчиков представлений, доступных приложению.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewEngineCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IViewEngine})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewEngineCollection" />, используя указанный список обработчиков представлений.</summary>
      <param name="list">Список помещается в оболочку в новой коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="list" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.ClearItems">
      <summary>Удаляет все элементы из <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindPartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Находит указанное частичное представление, используя заданный контекст контроллера.</summary>
      <returns>Частичное представление.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="partialViewName">Имя частичного представления.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerContext" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="partialViewName" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Находит указанное представление, используя заданные контекст контроллера и главное представление.</summary>
      <returns>Представление.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="viewName">Имя представления.</param>
      <param name="masterName">Имя главного представления.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerContext" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="partialViewName" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.InsertItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Вставляет элемент в коллекцию по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить элемент.</param>
      <param name="item">Объект, который нужно вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="index" /> меньше нуля.– или –Значение параметра <paramref name="index" />больше числа элементов в коллекции.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="item" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.RemoveItem(System.Int32)">
      <summary>Удаляет элемент из коллекции по указанному индексу <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="index">Индекс (с нуля) элемента, который требуется удалить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="index" /> меньше нуля.– или –<paramref name="index" /> больше или равно <see cref="T:System.Collections.ObjectModel.Collection`1.Count" /></exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.SetItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Заменяет элемент по указанному индексу.</summary>
      <param name="index">Индекс (с нуля) элемента, который требуется заменить.</param>
      <param name="item">Новое значение элемента по указанному индексу.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="index" /> меньше нуля.– или –Значение параметра <paramref name="index" />больше числа элементов в коллекции.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="item" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineResult">
      <summary>Представляет результат поиска обработчика представлений.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewEngineResult" />, используя указанные искомые расположения.</summary>
      <param name="searchedLocations">Искомые расположения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="searchedLocations" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Web.Mvc.IView,System.Web.Mvc.IViewEngine)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewEngineResult" />, используя указанные представление и обработчик представлений.</summary>
      <param name="view">Представление.</param>
      <param name="viewEngine">Обработчик представлений.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="view " /> или <paramref name="viewEngine" /> равен null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.SearchedLocations">
      <summary>Получает или задает искомые расположения.</summary>
      <returns>Искомые расположения.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.View">
      <summary>Получает или задает представление.</summary>
      <returns>Представление.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.ViewEngine">
      <summary>Получает или задает обработчик представлений.</summary>
      <returns>Обработчик представлений.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngines">
      <summary>Представляет коллекцию обработчиков представлений, доступных приложению.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewEngines.Engines">
      <summary>Получает обработчики представлений.</summary>
      <returns>Обработчики представлений.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage">
      <summary>Представляет сведения, необходимые для построения главной страницы представления.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewMasterPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Ajax">
      <summary>Получает скрипт AJAX для главной страницы.</summary>
      <returns>Скрипт AJAX для главной страницы.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Html">
      <summary>Получает HTML для главной страницы.</summary>
      <returns>HTML для главной страницы.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Model">
      <summary>Получает модель.</summary>
      <returns>Модель.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.TempData">
      <summary>Получает временные данные.</summary>
      <returns>Временные данные.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Url">
      <summary>Получает URL-адрес.</summary>
      <returns>URL-адрес.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewBag">
      <summary>Получает динамический словарь пакета представления.</summary>
      <returns>Динамический словарь пакета представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewContext">
      <summary>Получает контекст представления.</summary>
      <returns>Контекст представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewData">
      <summary>Получает данные представления.</summary>
      <returns>Данные представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Writer">
      <summary>Получает модуль записи, используемый для визуализации главной страницы.</summary>
      <returns>Модуль записи, используемый для визуализации главной страницы.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage`1">
      <summary>Представляет сведения, необходимые для построения строго типизированной главной страницы представления.</summary>
      <typeparam name="TModel">Тип модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewMasterPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Ajax">
      <summary>Получает скрипт AJAX для главной страницы.</summary>
      <returns>Скрипт AJAX для главной страницы.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Html">
      <summary>Получает HTML для главной страницы.</summary>
      <returns>HTML для главной страницы.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Model">
      <summary>Получает модель.</summary>
      <returns>Ссылка на модель данных.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.ViewData">
      <summary>Получает данные представления.</summary>
      <returns>Данные представления.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage">
      <summary>Представляет свойства и методы, требуемые для визуализации представления в виде страницы веб-форм.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Ajax">
      <summary>Получает или задает объект <see cref="T:System.Web.Mvc.AjaxHelper" />, используемый для визуализации HTML в сценариях Ajax.</summary>
      <returns>Вспомогательный объект Ajax, связанный с представлением.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Html">
      <summary>Получает или задает объект <see cref="T:System.Web.Mvc.HtmlHelper" />, используемый для визуализации элементов HTML.</summary>
      <returns>Вспомогательный объект HTML, связанный с представлением.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.InitHelpers">
      <summary>Инициализирует свойства <see cref="P:System.Web.Mvc.ViewPage.Ajax" />, <see cref="P:System.Web.Mvc.ViewPage.Html" /> и <see cref="P:System.Web.Mvc.ViewPage.Url" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.MasterLocation">
      <summary>Получает или задает путь к главному представлению.</summary>
      <returns>Путь к главному представлению.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Model">
      <summary>Получает свойство Model связанного объекта <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <returns>Свойство Model связанного объекта <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.OnPreInit(System.EventArgs)">
      <summary>Вызывает событие <see cref="E:System.Web.UI.Page.PreInit" /> в начале инициализации страницы.</summary>
      <param name="e">Данные, относящиеся к событию.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.ProcessRequest(System.Web.HttpContext)">
      <summary>Разрешает обработку указанного HTTP-запроса платформой MVC ASP.NET.</summary>
      <param name="context">Объект, инкапсулирующий касающиеся HTTP сведения о текущем HTTP-запросе.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Инициализирует объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий визуализируемое содержимое страницы.</summary>
      <param name="writer">Объект, получающий содержимое страницы.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Визуализирует представление страницы в ответе, используя заданный контекст представления.</summary>
      <param name="viewContext">Объект, инкапсулирующий необходимые для визуализации представления сведения, которые включают в себя контекст контроллера, контекст формы, временные данные и данные представления для связанного представления.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetTextWriter(System.IO.TextWriter)">
      <summary>Примечание. Данный API устарел.Задает модуль записи текста, используемый для визуализации представления в ответ.</summary>
      <param name="textWriter">Модуль записи, используемый для визуализации представления в ответ.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Задает словарь данных представления для связанного представления.</summary>
      <param name="viewData">Словарь данных для передачи в представление.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.TempData">
      <summary>Получает временные данные для передачи в представление.</summary>
      <returns>Временные данные для передачи в представление.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Url">
      <summary>Получает или задает URL-адрес отображаемой страницы.</summary>
      <returns>URL-адрес отображаемой страницы.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewBag">
      <summary>Получает пакет представления.</summary>
      <returns>Пакет представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewContext">
      <summary>Получает или задает сведения, используемые для визуализации представления.</summary>
      <returns>Сведения, используемые для визуализации представления, включающие в себя контекст формы, временные данные и данные представления для связанного представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewData">
      <summary>Получает или задает словарь, содержащий данные для передачи между контроллером и представлением.</summary>
      <returns>Словарь, содержащий данные для передачи между контроллером и представлением.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Writer">
      <summary>Получает модуль записи текста, используемый для визуализации представления в ответ.</summary>
      <returns>Модуль записи текста, используемый для визуализации представления в ответ.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage`1">
      <summary>Представляет сведения, необходимые для визуализации строго типизированного представления в виде страницы веб-форм.</summary>
      <typeparam name="TModel">Тип модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Ajax">
      <summary>Получает или задает объект <see cref="T:System.Web.Mvc.AjaxHelper`1" />, поддерживающий визуализацию HTML в сценариях Ajax.</summary>
      <returns>Вспомогательный объект Ajax, связанный с представлением.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Html">
      <summary>Получает или задает объект <see cref="T:System.Web.Mvc.HtmlHelper" />, предоставляющий поддержку для элементов визуализации.</summary>
      <returns>Вспомогательный объект HTML, связанный с представлением.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.InitHelpers">
      <summary>Создает экземпляр и инициализирует свойства <see cref="P:System.Web.Mvc.ViewPage`1.Ajax" /> и <see cref="P:System.Web.Mvc.ViewPage`1.Html" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Model">
      <summary>Получает свойство <see cref="P:System.Web.Mvc.ViewDataDictionary`1.Model" /> связанного объекта <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />.</summary>
      <returns>Ссылка на модель данных.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Задает словарь данных представления для связанного представления.</summary>
      <param name="viewData">Словарь данных для передачи в представление.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.ViewData">
      <summary>Получает или задает словарь, содержащий данные для передачи между контроллером и представлением.</summary>
      <returns>Словарь, содержащий данные для передачи между контроллером и представлением.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResult">
      <summary>Представляет класс, используемый для визуализации представления с помощью экземпляра <see cref="T:System.Web.Mvc.IView" />, который возвращается объектом <see cref="T:System.Web.Mvc.IViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Выполняет поиск зарегистрированных обработчиков представлений и возвращает объект, используемый для визуализации представления.</summary>
      <returns>Объект, используемый для визуализации представления.</returns>
      <param name="context">Контекст контроллера.</param>
      <exception cref="T:System.InvalidOperationException">При поиске представления методом возникла ошибка.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewResult.MasterName">
      <summary>Получает имя главного представления (например, главной страницы или шаблона), используемого при визуализации представления.</summary>
      <returns>Имя главного представления.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResultBase">
      <summary>Представляет базовый класс, используемый для предоставления модели представления и последующей визуализации представления в ответ.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewResultBase" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Когда вызывается модулем вызова действия, визуализирует представление в ответ.</summary>
      <param name="context">Контекст, в котором выполняется результат.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="context" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Возвращает объект <see cref="T:System.Web.Mvc.ViewEngineResult" />, используемый для визуализации представления.</summary>
      <returns>Обработчик представлений.</returns>
      <param name="context">Контекст.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.Model">
      <summary>Получает модель данных представления.</summary>
      <returns>Модель данных представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.TempData">
      <summary>Получает или задает объект <see cref="T:System.Web.Mvc.TempDataDictionary" /> для этого результата.</summary>
      <returns>Временные данные.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.View">
      <summary>Получает или задает объект <see cref="T:System.Web.Mvc.IView" />, который визуализируется в ответ.</summary>
      <returns>Представление.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewBag">
      <summary>Получает пакет представления.</summary>
      <returns>Пакет представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewData">
      <summary>Получает или задает объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> данных представления для этого результата.</summary>
      <returns>Данные представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewEngineCollection">
      <summary>Получает или задает коллекцию обработчиков представлений, связанных с данным результатом.</summary>
      <returns>Коллекция обработчиков представлений.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewName">
      <summary>Получает или задает имя визуализируемого представления.</summary>
      <returns>Имя представления.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewStartPage">
      <summary>Предоставляет абстрактный класс, который можно использовать для реализации начальной (главной) страницы представления.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewStartPage.#ctor">
      <summary>Если реализован в производном классе, инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewStartPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Html">
      <summary>При реализации в производном классе получает разметку HTML для начальной страницы представления.</summary>
      <returns>Разметка HTML для начальной страницы представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Url">
      <summary>При реализации в производном классе получает URL-адрес для начальной страницы представления.</summary>
      <returns>URL-адрес для начальной страницы представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.ViewContext">
      <summary>При реализации в производном классе получает контекст представления для начальной страницы представления.</summary>
      <returns>Контекст представления для начальной страницы представления.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl">
      <summary>Предоставляет контейнер для объектов <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewTemplateUserControl" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl`1">
      <summary>Предоставляет контейнер для объектов <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
      <typeparam name="TModel">Тип модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewTemplateUserControl`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewTemplateUserControl`1.FormattedModelValue">
      <summary>Получает форматируемое значение.</summary>
      <returns>Форматируемое значение.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewType">
      <summary>Представляет тип представления.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewType.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewType" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewType.TypeName">
      <summary>Получает или задает имя типа.</summary>
      <returns>Имя типа.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl">
      <summary>Представляет сведения, необходимые для построения пользовательского элемента управления.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewUserControl" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Ajax">
      <summary>Получает скрипт AJAX для представления.</summary>
      <returns>Скрипт AJAX для представления.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.EnsureViewData">
      <summary>Обеспечивает добавление данных представления в объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> пользовательского элемента управления, если данные представления существуют.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Html">
      <summary>Получает HTML для представления.</summary>
      <returns>HTML для представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Model">
      <summary>Получает модель.</summary>
      <returns>Модель.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Визуализирует представление, используя указанный контекст представления.</summary>
      <param name="viewContext">Контекст представления.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetTextWriter(System.IO.TextWriter)">
      <summary>Задает модуль записи текста, используемый для визуализации представления в ответ.</summary>
      <param name="textWriter">Модуль записи, используемый для визуализации представления в ответ.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Задает словарь данных представления, используя указанные данные представления.</summary>
      <param name="viewData">Данные представления.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.TempData">
      <summary>Получает словарь временных данных.</summary>
      <returns>Словарь временных данных.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Url">
      <summary>Получает URL-адрес для представления.</summary>
      <returns>URL-адрес для представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewBag">
      <summary>Получает пакет представления.</summary>
      <returns>Пакет представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewContext">
      <summary>Получает или задает контекст представления.</summary>
      <returns>Контекст представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewData">
      <summary>Получает или задает словарь данных представления.</summary>
      <returns>Словарь данных представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewDataKey">
      <summary>Получает или задает ключ данных представления.</summary>
      <returns>Ключ данных представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Writer">
      <summary>Получает модуль записи, используемый для визуализации представления в ответ.</summary>
      <returns>Модуль записи, используемый для визуализации представления в ответ.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl`1">
      <summary>Представляет сведения, необходимые для построения строго типизированного пользовательского элемента управления.</summary>
      <typeparam name="TModel">Тип модели.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.ViewUserControl`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Ajax">
      <summary>Получает скрипт AJAX для представления.</summary>
      <returns>Скрипт AJAX для представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Html">
      <summary>Получает HTML для представления.</summary>
      <returns>HTML для представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Model">
      <summary>Получает модель.</summary>
      <returns>Ссылка на модель данных.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Задает данные для представления.</summary>
      <param name="viewData">Данные представления.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.ViewData">
      <summary>Получает или задает данные представления.</summary>
      <returns>Данные представления.</returns>
    </member>
    <member name="T:System.Web.Mvc.VirtualPathProviderViewEngine">
      <summary>Представляет реализацию абстрактного базового класса интерфейса <see cref="T:System.Web.Mvc.IViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.VirtualPathProviderViewEngine" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaMasterLocationFormats">
      <summary>Получает или задает форматы главного расположения, поддерживающие области.</summary>
      <returns>Форматы главного расположения, поддерживающие области.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaPartialViewLocationFormats">
      <summary>Получает или задает форматы расположения частичного представления, поддерживающие области.</summary>
      <returns>Форматы расположения частичного представления, поддерживающие области.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaViewLocationFormats">
      <summary>Получает или задает форматы расположения представления, поддерживающие области.</summary>
      <returns>Форматы расположения представления, поддерживающие области.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Создает указанное частичное представление, используя заданный контекст контроллера.</summary>
      <returns>Ссылка на частичное представление.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="partialPath">Частичный путь для нового частичного представления.</param>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Создает указанное представление, используя контекст контроллера, путь к представлению и путь к главному представлению.</summary>
      <returns>Ссылка на представление.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="viewPath">Путь к представлению.</param>
      <param name="masterPath">Путь к главному представлению.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.DisplayModeProvider">
      <summary>Получает или задает поставщик режима отображения.</summary>
      <returns>Поставщик режима отображения.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Возвращает значение, указывающее, расположен ли файл по указанному пути, используя заданный контекст контроллера.</summary>
      <returns>Значение true, если файл расположен по указанному пути; в противном случае — false.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="virtualPath">Виртуальный путь.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.FileExtensions">
      <summary>Возвращает или задает расширения имен файлов, которые используются для поиска представления.</summary>
      <returns>Расширения имен файлов, которые используются для поиска представления.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Находит указанное частичное представление, используя заданный контекст контроллера.</summary>
      <returns>Частичное представление.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="partialViewName">Имя частичного представления.</param>
      <param name="useCache">Значение true для использования кэшированного частичного представления.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerContext" /> имеет значение null (Nothing в Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="partialViewName" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Находит указанное представление, используя заданные контекст контроллера и имя главного представления.</summary>
      <returns>Представление страницы.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="viewName">Имя представления.</param>
      <param name="masterName">Имя главного представления.</param>
      <param name="useCache">Значение true для использования кэшированного представления.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="controllerContext" /> имеет значение null (Nothing в Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="viewName" /> имеет значение null или пуст.</exception>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.MasterLocationFormats">
      <summary>Получает или задает форматы главного расположения.</summary>
      <returns>Форматы главного расположения.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.PartialViewLocationFormats">
      <summary>Получает или задает форматы расположения частичного представления.</summary>
      <returns>Форматы расположения частичного представления.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Освобождает указанное представление, используя заданный контекст контроллера.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="view">Освобождаемое представление.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationCache">
      <summary>Получает или задает кэш расположения представления.</summary>
      <returns>Кэш расположения представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationFormats">
      <summary>Получает или задает форматы расположения представления.</summary>
      <returns>Форматы расположения представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.VirtualPathProvider">
      <summary>Получает или задает поставщик виртуального пути.</summary>
      <returns>Поставщик виртуального пути.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebFormView">
      <summary>Представляет сведения, необходимые для построения страницы веб-форм в ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.WebFormView" />, используя контекст контроллера и путь к представлению.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="viewPath">Путь к представлению.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.WebFormView" />, используя контекст контроллера, путь к представлению и путь к главной станице.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="viewPath">Путь к представлению.</param>
      <param name="masterPath">Путь к главной странице.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.WebFormView" />, используя контекст контроллера, путь к представлению, путь к главной станице и экземпляр <see cref="T:System.Web.Mvc.IViewPageActivator" />.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="viewPath">Путь к представлению.</param>
      <param name="masterPath">Путь к главной странице.</param>
      <param name="viewPageActivator">Экземпляр интерфейса активатора страницы представления.</param>
    </member>
    <member name="P:System.Web.Mvc.WebFormView.MasterPath">
      <summary>Получает или задает главный путь.</summary>
      <returns>Главный путь.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Отображает представление, отправляемое в ответ.</summary>
      <param name="viewContext">Объект, инкапсулирующий необходимые для визуализации представления сведения, которые включают в себя контекст контроллера, контекст формы, временные данные и данные представления для связанного представления.</param>
      <param name="writer">Объект модуля записи текста, используемый для записи выходных данных HTML.</param>
      <param name="instance">Экземпляр страницы представления.</param>
    </member>
    <member name="T:System.Web.Mvc.WebFormViewEngine">
      <summary>Представляет обработчик представлений, используемый для визуализации страницы веб-форм в ответ.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.WebFormViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.WebFormViewEngine" />, используя указанный активатор страницы представления.</summary>
      <param name="viewPageActivator">Экземпляр класса, реализующий интерфейс <see cref="T:System.Web.Mvc.IViewPageActivator" />.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Создает указанное частичное представление, используя заданный контекст контроллера.</summary>
      <returns>Частичное представление.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="partialPath">Частичный путь.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Создает указанное представление, используя заданные контекст контроллера и пути к представлению и главному представлению.</summary>
      <returns>Представление.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="viewPath">Путь к представлению.</param>
      <param name="masterPath">Путь к главному представлению.</param>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage">
      <summary>Представляет свойства и методы, требуемые для визуализации представления, использующего синтаксис ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.WebViewPage" />. </summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Ajax">
      <summary>Получает или задает объект <see cref="T:System.Web.Mvc.AjaxHelper" />, используемый для визуализации HTML с использованием Ajax. </summary>
      <returns>Объект <see cref="T:System.Web.Mvc.AjaxHelper" />, используемый для визуализации HTML с использованием Ajax.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ConfigurePage(System.Web.WebPages.WebPageBase)">
      <summary>Задает контекст представления и данные представления для страницы.</summary>
      <param name="parentPage">Родительская страница.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Context">
      <summary>Получает объект <see cref="T:System.Web.HttpContext" />, связанный со страницей.</summary>
      <returns>Объект <see cref="T:System.Web.HttpContext" />, сопоставленный со страницей.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ExecutePageHierarchy">
      <summary>Запускает иерархию страниц для конвейерной обработки ASP.NET Razor.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Html">
      <summary>Получает или задает объект <see cref="T:System.Web.Mvc.HtmlHelper" />, используемый для визуализации элементов HTML.</summary>
      <returns>Объект <see cref="T:System.Web.Mvc.HtmlHelper" />, используемый для визуализации элементов HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.InitHelpers">
      <summary>Инициализирует классы <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> и <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Model">
      <summary>Получает свойство Model связанного объекта <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <returns>Свойство Model связанного объекта <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Задает данные представления.</summary>
      <param name="viewData">Данные представления.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.TempData">
      <summary>Получает временные данные для передачи в представление.</summary>
      <returns>Временные данные для передачи в представление.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Url">
      <summary>Получает или задает URL-адрес отображаемой страницы.</summary>
      <returns>URL-адрес отображаемой страницы.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewBag">
      <summary>Получает пакет представления.</summary>
      <returns>Пакет представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewContext">
      <summary>Получает или задает сведения, используемые для визуализации представления.</summary>
      <returns>Сведения, используемые для визуализации представления, включающие в себя контекст формы, временные данные и данные представления для связанного представления.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewData">
      <summary>Получает или задает словарь, содержащий данные для передачи между контроллером и представлением.</summary>
      <returns>Словарь, содержащий данные для передачи между контроллером и представлением.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage`1">
      <summary>Представляет свойства и методы, требуемые для визуализации представления, использующего синтаксис ASP.NET Razor.</summary>
      <typeparam name="TModel">Тип модели данных представления.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.WebViewPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Ajax">
      <summary>Получает или задает объект <see cref="T:System.Web.Mvc.AjaxHelper" />, используемый для визуализации разметки HTML с помощью Ajax.</summary>
      <returns>Объект <see cref="T:System.Web.Mvc.AjaxHelper" />, используемый для визуализации разметки HTML с использованием Ajax.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Html">
      <summary>Получает или задает объект <see cref="T:System.Web.Mvc.HtmlHelper" />, используемый для визуализации элементов HTML.</summary>
      <returns>Объект <see cref="T:System.Web.Mvc.HtmlHelper" />, используемый для визуализации элементов HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.InitHelpers">
      <summary>Инициализирует классы <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> и <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Model">
      <summary>Получает свойство Model связанного объекта <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <returns>Свойство Model связанного объекта <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Задает данные представления.</summary>
      <param name="viewData">Данные представления.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.ViewData">
      <summary>Получает или задает словарь, содержащий данные для передачи между контроллером и представлением.</summary>
      <returns>Словарь, содержащий данные для передачи между контроллером и представлением.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxExtensions">
      <summary>Представляет поддержку для технологии AJAX ASP.NET в приложении MVC ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Возвращает элемент привязки, содержащий URL-адрес для указанного метода действия; при щелчке ссылки действия выполняется асинхронный вызов метода действия с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Возвращает элемент привязки, содержащий URL-адрес для указанного метода действия; при щелчке ссылки действия выполняется асинхронный вызов метода действия с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Возвращает элемент привязки, содержащий URL-адрес для указанного метода действия; при щелчке ссылки действия выполняется асинхронный вызов метода действия с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Возвращает элемент привязки, содержащий URL-адрес для указанного метода действия; при щелчке ссылки действия выполняется асинхронный вызов метода действия с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Возвращает элемент привязки, содержащий URL-адрес для указанного метода действия; при щелчке ссылки действия выполняется асинхронный вызов метода действия с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="protocol">Протокол для URL-адреса, например "http" или "https".</param>
      <param name="hostName">Имя узла для URL-адреса.</param>
      <param name="fragment">Имя фрагмента URL-адреса (имя привязки).</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент привязки, содержащий URL-адрес для указанного метода действия; при щелчке ссылки действия выполняется асинхронный вызов метода действия с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="protocol">Протокол для URL-адреса, например "http" или "https".</param>
      <param name="hostName">Имя узла для URL-адреса.</param>
      <param name="fragment">Имя фрагмента URL-адреса (имя привязки).</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Возвращает элемент привязки, содержащий URL-адрес для указанного метода действия; при щелчке ссылки действия выполняется асинхронный вызов метода действия с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Возвращает элемент привязки, содержащий URL-адрес для указанного метода действия; при щелчке ссылки действия выполняется асинхронный вызов метода действия с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент привязки, содержащий URL-адрес для указанного метода действия; при щелчке ссылки действия выполняется асинхронный вызов метода действия с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Возвращает элемент привязки, содержащий URL-адрес для указанного метода действия; при щелчке ссылки действия выполняется асинхронный вызов метода действия с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Возвращает элемент привязки, содержащий URL-адрес для указанного метода действия; при щелчке ссылки действия выполняется асинхронный вызов метода действия с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент привязки, содержащий URL-адрес для указанного метода действия; при щелчке ссылки действия выполняется асинхронный вызов метода действия с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="actionName">Имя метода действия, обрабатывающего запрос.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="actionName">Имя метода действия, обрабатывающего запрос.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="actionName">Имя метода действия, обрабатывающего запрос.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="actionName">Имя метода действия, обрабатывающего запрос.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="actionName">Имя метода действия, обрабатывающего запрос.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="actionName">Имя метода действия, обрабатывающего запрос.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="actionName">Имя метода действия, обрабатывающего запрос.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="actionName">Имя метода действия, обрабатывающего запрос.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="actionName">Имя метода действия, обрабатывающего запрос.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ. </summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="actionName">Имя метода действия, обрабатывающего запрос.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ, используя указанные данные маршрутизации.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ, используя указанные данные маршрутизации.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ, используя указанные данные маршрутизации.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ, используя указанные данные маршрутизации.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ, используя указанные данные маршрутизации.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper)">
      <summary>Выводит HTML- сценария  элемент, который содержит ссылку на сценарий глобализации, который определяет сведений о культуре.</summary>
      <returns>Элемент script, атрибуту src которого присвоен скрипт глобализации, как показано в следующем примере: &lt;script type="text/javascript"     src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX, который расширяется данным методом.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper,System.Globalization.CultureInfo)">
      <summary>Выводит HTML-элемент script, который содержит ссылку на сценарий глобализации, который определяет сведений о культуре.</summary>
      <returns>HTML-элемент script, атрибуту src которого присвоен сценарий глобализации, как показано в следующем примере:&lt;script type="text/javascript"    src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX, который расширяется данным методом.</param>
      <param name="cultureInfo">Инкапсулирует сведения о целевых языке и региональных параметрах, например о форматах дат.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="cultureInfo" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Возвращает элемент привязки, содержащий виртуальный путь для указанных значений маршрута; при щелчке ссылки выполняется асинхронный запрос по виртуальному пути с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Возвращает элемент привязки, содержащий виртуальный путь для указанных значений маршрута; при щелчке ссылки выполняется асинхронный запрос по виртуальному пути с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Возвращает элемент привязки, содержащий виртуальный путь для указанных значений маршрута; при щелчке ссылки выполняется асинхронный запрос по виртуальному пути с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Возвращает элемент привязки, содержащий виртуальный путь для указанных значений маршрута; при щелчке ссылки выполняется асинхронный запрос по виртуальному пути с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент привязки, содержащий виртуальный путь для указанных значений маршрута; при щелчке ссылки выполняется асинхронный запрос по виртуальному пути с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="protocol">Протокол для URL-адреса, например "http" или "https".</param>
      <param name="hostName">Имя узла для URL-адреса.</param>
      <param name="fragment">Имя фрагмента URL-адреса (имя привязки).</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Возвращает элемент привязки, содержащий виртуальный путь для указанных значений маршрута; при щелчке ссылки выполняется асинхронный запрос по виртуальному пути с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент привязки, содержащий виртуальный путь для указанных значений маршрута; при щелчке ссылки выполняется асинхронный запрос по виртуальному пути с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Возвращает элемент привязки, содержащий виртуальный путь для указанных значений маршрута; при щелчке ссылки выполняется асинхронный запрос по виртуальному пути с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Возвращает элемент привязки, содержащий виртуальный путь для указанных значений маршрута; при щелчке ссылки выполняется асинхронный запрос по виртуальному пути с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент привязки, содержащий виртуальный путь для указанных значений маршрута; при щелчке ссылки выполняется асинхронный запрос по виртуальному пути с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Возвращает элемент привязки, содержащий виртуальный путь для указанных значений маршрута; при щелчке ссылки выполняется асинхронный запрос по виртуальному пути с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент привязки, содержащий виртуальный путь для указанных значений маршрута; при щелчке ссылки выполняется асинхронный запрос по виртуальному пути с использованием JavaScript.</summary>
      <returns>Элемент привязки.</returns>
      <param name="ajaxHelper">Вспомогательный объект технологии AJAX.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="ajaxOptions">Объект, предоставляющий возможности для асинхронного запроса.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxOptions">
      <summary>Представляет значения параметров для выполняющихся скриптов Ajax в приложении ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Ajax.AjaxOptions" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.AllowCache"></member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Confirm">
      <summary>Получает или задает сообщение, которое должно отображаться в окне подтверждения перед отправкой запроса.</summary>
      <returns>Сообщение, которое должно отображаться в окне подтверждения.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.HttpMethod">
      <summary>Получает или задает метод HTTP-запроса ("Get" или "Post").</summary>
      <returns>Метод HTTP-запроса.По умолчанию используется значение "Post".</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.InsertionMode">
      <summary>Получает или задает режим, определяющий, как ответ должен вставляться в целевой DOM-элемент.</summary>
      <returns>Режим вставки ("InsertAfter", "InsertBefore" или "Replace").По умолчанию установлено значение "Replace".</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementDuration">
      <summary>Получает или задает значение, управляющее длительностью анимации при отображении или скрытии загружающегося элемента, в миллисекундах.</summary>
      <returns>Значение, управляющее длительностью анимации при отображении или скрытии загружающегося элемента, в миллисекундах.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementId">
      <summary>Получает или задает атрибут id HTML-элемента, который отображается при загрузке функции Ajax.</summary>
      <returns>Идентификатор элемента, который отображается при загрузке функции Ajax.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnBegin">
      <summary>Получает или задает имя функции JavaScript, которая должна вызываться непосредственно перед обновлением страницы.</summary>
      <returns>Имя функции JavaScript, которая должна вызываться перед обновлением страницы.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnComplete">
      <summary>Получает или задает функцию JavaScript, которая должна вызываться после создания экземпляра данных ответа, но перед обновлением страницы.</summary>
      <returns>Функция JavaScript, которая должна вызываться после создания экземпляра данных ответа.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnFailure">
      <summary>Получает или задает функцию JavaScript, которая должна вызываться в случае сбоя обновления страницы.</summary>
      <returns>Функция JavaScript, которая должна вызываться в случае сбоя обновления страницы.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnSuccess">
      <summary>Получает или задает функцию JavaScript, которая должна вызываться после успешного обновления страницы.</summary>
      <returns>Функция JavaScript, которая должна вызываться после успешного обновления страницы.</returns>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.ToUnobtrusiveHtmlAttributes">
      <summary>Возвращает параметры Ajax как коллекцию атрибутов HTML для поддержки ненавязчивого JavaScript.</summary>
      <returns>Параметры Ajax как коллекция атрибутов HTML для поддержки ненавязчивого JavaScript.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.UpdateTargetId">
      <summary>Получает или задает идентификатор DOM-элемента, который должен быть обновлен с использованием ответа от сервера.</summary>
      <returns>Идентификатор DOM-элемента, который должен быть обновлен.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Url">
      <summary>Получает или задает URL-адрес, по которому требуется выполнить запрос.</summary>
      <returns>URL-адрес, по которому требуется выполнить запрос.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.InsertionMode">
      <summary>Перечисляет режимы вставки сценарий AJAX.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertAfter">
      <summary>Вставка после элемента.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertBefore">
      <summary>Вставка перед элементом.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.Replace">
      <summary>Замена элемента.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.ReplaceWith">
      <summary>Замена всего элемента.</summary>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncActionDescriptor">
      <summary>Предоставляет сведения об асинхронном методе действия, например о его имени, контроллере, параметрах, атрибутах и фильтрах.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Async.AsyncActionDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Вызывает асинхронный метод действия, используя заданные параметры и контекст контроллера.</summary>
      <returns>Объект, содержащий результат асинхронного вызова.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="parameters">Параметры метода действия.</param>
      <param name="callback">Метод обратного вызова.</param>
      <param name="state">Объект, содержащий информацию, используемую методом обратного вызова.Этот параметр может иметь значение null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Возвращает результат асинхронной операции.</summary>
      <returns>Результат асинхронной операции.</returns>
      <param name="asyncResult">Объект, представляющий состояние асинхронной операции.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Выполняет асинхронный метод действия, используя заданные параметры и контекст контроллера.</summary>
      <returns>Результат выполнения асинхронного метода действия.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="parameters">Параметры метода действия.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncControllerActionInvoker">
      <summary>Представляет класс, ответственный за вызов методов действия асинхронного контроллера.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Async.AsyncControllerActionInvoker" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Вызывает асинхронный метод действия, используя заданные контекст контроллера, имя действия, метод обратного вызова и состояние.</summary>
      <returns>Объект, содержащий результат асинхронной операции.Реализации<see cref="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)" /></returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionName">Имя действия.</param>
      <param name="callback">Метод обратного вызова.</param>
      <param name="state">Объект, содержащий информацию, используемую методом обратного вызова.Этот параметр может иметь значение null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Вызывает асинхронный метод действия, используя заданные контекст контроллера, дескриптор действия, параметры, метод обратного вызова и состояние.</summary>
      <returns>Объект, содержащий результат асинхронной операции.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
      <param name="parameters">Параметры для асинхронного метода действия.</param>
      <param name="callback">Метод обратного вызова.</param>
      <param name="state">Объект, содержащий информацию, используемую методом обратного вызова.Этот параметр может иметь значение null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Вызывает асинхронный метод действия, используя заданные контекст контроллера, фильтры, дескриптор действия, параметры, метод обратного вызова и состояние.</summary>
      <returns>Объект, содержащий результат асинхронной операции.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="filters">Фильтры.</param>
      <param name="actionDescriptor">Дескриптор действия.</param>
      <param name="parameters">Параметры для асинхронного метода действия.</param>
      <param name="callback">Метод обратного вызова.</param>
      <param name="state">Объект, содержащий информацию, используемую методом обратного вызова.Этот параметр может иметь значение null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Отмена действия.</summary>
      <returns>Значение true, если действие было отменено. В противном случае — значение false.</returns>
      <param name="asyncResult">Определяемый пользователем объект, который определяет или содержит сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(System.IAsyncResult)">
      <summary>Отмена действия.</summary>
      <returns>Значение true, если действие было отменено. В противном случае — значение false.</returns>
      <param name="asyncResult">Определяемый пользователем объект, который определяет или содержит сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(System.IAsyncResult)">
      <summary>Отмена действия.</summary>
      <returns>Значение true, если действие было отменено. В противном случае — значение false.</returns>
      <param name="asyncResult">Определяемый пользователем объект, который определяет или содержит сведения об асинхронной операции.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Возвращает дескриптор контроллера.</summary>
      <returns>Дескриптор контроллера.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncManager">
      <summary>Предоставляет асинхронные операции для класса <see cref="T:System.Web.Mvc.AsyncController" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Async.AsyncManager" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor(System.Threading.SynchronizationContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Async.AsyncManager" />, используя контекст синхронизации.</summary>
      <param name="syncContext">Контекст синхронизации.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Finish">
      <summary>Уведомляет ASP.NET о завершении всех асинхронных операций.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.AsyncManager.Finished">
      <summary>Происходит, когда вызывается метод <see cref="M:System.Web.Mvc.Async.AsyncManager.Finish" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.OutstandingOperations">
      <summary>Получает число незавершенных операций.</summary>
      <returns>Число незавершенных операций.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Parameters">
      <summary>Получает параметры, которые были переданы асинхронному методу завершения.</summary>
      <returns>Параметры, которые были переданы асинхронному методу завершения.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Sync(System.Action)">
      <summary>Выполняет обратный вызов в текущем контексте синхронизации.</summary>
      <param name="action">Асинхронное действие.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Timeout">
      <summary>Получает или задает значение асинхронного времени ожидания в миллисекундах.</summary>
      <returns>Асинхронное время ожидания в миллисекундах.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncActionInvoker">
      <summary>Определяет интерфейс для модуля вызова действия, который используется для вызова асинхронного действия в ответ на HTTP-запрос.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Вызывает указанное действие.</summary>
      <returns>Состояние асинхронного результата.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionName">Имя асинхронного действия.</param>
      <param name="callback">Метод обратного вызова.</param>
      <param name="state">Состояние.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Отменяет асинхронное действие.</summary>
      <returns>Значение true, если асинхронный метод может быть отменен; в противном случае — значение false.</returns>
      <param name="asyncResult">Асинхронный результат.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncActionInvokerFactory">
      <summary>Использовалось для создания экземпляра <see cref="T:System.Web.Mvc.Async.IAsyncActionInvoker" /> для текущего запроса.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvokerFactory.CreateInstance">
      <summary>Создает экземпляр, вызывающий действие асинхронизации для текущего запроса.</summary>
      <returns>Созданный <see cref="T:System.Web.Mvc.Async.IAsyncActionInvoker" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncController">
      <summary>Определяет методы, которые требуются для асинхронного контроллера.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Выполняет указанный контекст запроса.</summary>
      <returns>Состояние асинхронной операции.</returns>
      <param name="requestContext">Контекст запроса.</param>
      <param name="callback">Метод асинхронного обратного вызова.</param>
      <param name="state">Состояние.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.EndExecute(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию.</summary>
      <param name="asyncResult">Асинхронный результат.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncManagerContainer">
      <summary>Предоставляет контейнер для объекта асинхронного диспетчера.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.IAsyncManagerContainer.AsyncManager">
      <summary>Получает объект асинхронного диспетчера.</summary>
      <returns>Объект асинхронного диспетчера.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.OperationCounter">
      <summary>Предоставляет контейнер, содержащий счетчик ожидающих асинхронных операций.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Async.OperationCounter" />.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.OperationCounter.Completed">
      <summary>Происходит по завершении асинхронного метода.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.OperationCounter.Count">
      <summary>Получает число операций.</summary>
      <returns>Число операций.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement">
      <summary>Уменьшает число операций на 1.</summary>
      <returns>Обновленное число операций.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement(System.Int32)">
      <summary>Уменьшает число операций на указанное значение.</summary>
      <returns>Обновленное число операций.</returns>
      <param name="value">Количество операций, на которое уменьшается значение счетчика.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment">
      <summary>Увеличивает число операций на единицу.</summary>
      <returns>Обновленное число операций.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment(System.Int32)">
      <summary>Увеличивает число операций на указанное значение.</summary>
      <returns>Обновленное число операций.</returns>
      <param name="value">Количество операций, на которое увеличивается значение счетчика.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor">
      <summary>Предоставляет сведения об асинхронном методе действия, например о его имени, контроллере, параметрах, атрибутах и фильтрах.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor" />.</summary>
      <param name="asyncMethodInfo">Объект, содержащий сведения о методе, который начинает асинхронную операцию (методе, имя которого заканчивается на "Asynch").</param>
      <param name="completedMethodInfo">Объект, который содержит сведения о методе завершения (методе, имя которого заканчивается на "Completed").</param>
      <param name="actionName">Имя действия.</param>
      <param name="controllerDescriptor">Дескриптор контроллера.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ActionName">
      <summary>Получает имя метода действия.</summary>
      <returns>Имя метода действия.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.AsyncMethodInfo">
      <summary>Получает сведения о методе для асинхронного метода действия.</summary>
      <returns>Сведения о методе для асинхронного метода действия.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Начинает выполнение асинхронного метода действия, используя заданные параметры и контекст контроллера.</summary>
      <returns>Объект, содержащий результат асинхронного вызова.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="parameters">Параметры метода действия.</param>
      <param name="callback">Метод обратного вызова.</param>
      <param name="state">Объект, содержащий информацию, используемую методом обратного вызова.Этот параметр может иметь значение null.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.CompletedMethodInfo">
      <summary>Получает сведения о методе для асинхронного метода завершения.</summary>
      <returns>Сведения о методе для асинхронного метода завершения.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ControllerDescriptor">
      <summary>Получает дескриптор контроллера для асинхронного метода действия.</summary>
      <returns>Дескриптор контроллера для асинхронного метода действия.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Возвращает результат асинхронной операции.</summary>
      <returns>Результат асинхронной операции.</returns>
      <param name="asyncResult">Объект, представляющий состояние асинхронной операции.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает массив настраиваемых атрибутов, определенных для данного члена, за исключением именованных атрибутов.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Возвращает массив настраиваемых атрибутов, определенных для данного члена и принадлежащих указанному типу.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты указанного типа отсутствуют.</returns>
      <param name="attributeType">Тип возвращаемых настраиваемых атрибутов.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Получает атрибуты фильтра.</summary>
      <returns>Атрибуты фильтра.</returns>
      <param name="useCache">Флаг использования кэша.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetParameters">
      <summary>Возвращает параметры метода действия.</summary>
      <returns>Параметры метода действия.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetSelectors">
      <summary>Возвращает селекторы метода действия.</summary>
      <returns>Селекторы метода действия.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Определяет, указаны ли для члена действия один или несколько экземпляров определенного типа атрибута.</summary>
      <returns>Значение true, если атрибут типа, представляемого параметром <paramref name="attributeType" />, определен для данного члена; в противном случае — значение false.</returns>
      <param name="attributeType">Тип настраиваемого атрибута.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.MethodInfo"></member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.UniqueId">
      <summary>Получает неактивно инициализированный уникальный идентификатор экземпляра этого класса.</summary>
      <returns>Неактивно инициализированный уникальный идентификатор экземпляра этого класса.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor">
      <summary>Инкапсулирует сведения, описывающие асинхронный контроллер, например его имя, тип и действия.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor" />.</summary>
      <param name="controllerType">Тип контроллера.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.ControllerType">
      <summary>Получает тип контроллера.</summary>
      <returns>Тип контроллера.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Выполняет поиск метода действия, используя указанные имя и контекст контроллера.</summary>
      <returns>Сведения о методе действия.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionName">Имя действия.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCanonicalActions">
      <summary>Возвращает список дескрипторов методов действий в контроллере.</summary>
      <returns>Список дескрипторов методов действий в контроллере.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает определенные для данного члена пользовательские атрибуты за исключением именованных атрибутов.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Возвращает настраиваемые атрибуты указанного типа, определенные для данного члена, за исключением именованных атрибутов.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="attributeType">Тип пользовательских атрибутов.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Получает атрибуты фильтра.</summary>
      <returns>Атрибуты фильтра.</returns>
      <param name="useCache">Значение true, если нужно использовать кэш. В противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Возвращает значение, указывающее, определен ли для данного члена один или несколько экземпляров заданного настраиваемого атрибута.</summary>
      <returns>Значение true, если атрибут типа, представляемого параметром <paramref name="attributeType" />, определен для данного члена; в противном случае — значение false.</returns>
      <param name="attributeType">Тип настраиваемого атрибута.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.SynchronousOperationException">
      <summary>Представляет исключение, которое произошло при синхронной обработке HTTP-запроса в приложении MVC ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" />, используя системное сообщение.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" />, используя указанное сообщение.</summary>
      <param name="message">Сообщение с описанием исключения.Вызывающему объекту этого конструктора необходимо убедиться, что эта строка локализована для текущего языка и региональных параметров системы.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" />, используя указанное сообщение об ошибке и ссылку на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение с описанием исключения.Вызывающему объекту этого конструктора необходимо убедиться, что эта строка локализована для текущего языка и региональных параметров системы.</param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение создано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor">
      <summary>Если метод действия возвращает Task или Task&lt;T&gt;, <see cref="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor" /> предоставляет информацию о действии.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor" />.</summary>
      <param name="taskMethodInfo">Информация о методе задачи.</param>
      <param name="actionName">Имя действия.</param>
      <param name="controllerDescriptor">Дескриптор контроллера.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.ActionName">
      <summary>Получает имя метода действия.</summary>
      <returns>Имя метода действия.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Вызывает асинхронный метод действия с указанными параметрами, обратным вызовом контекста контроллера и состоянием.</summary>
      <returns>Объект, содержащий результат асинхронного вызова.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="parameters">Параметры метода действия.</param>
      <param name="callback">Необязательный метод обратного вызова.</param>
      <param name="state">Объект, содержащий информацию, используемую методом обратного вызова.Этот параметр может иметь значение null.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.ControllerDescriptor">
      <summary>Получает дескриптор контроллера.</summary>
      <returns>Дескриптор контроллера.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию.</summary>
      <returns>Результат асинхронной операции.</returns>
      <param name="asyncResult">Объект, представляющий состояние асинхронной операции.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Выполняет асинхронный метод действия.</summary>
      <returns>Результат выполнения асинхронного метода действия.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="parameters">Параметры метода действия.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Возвращает массив настраиваемых атрибутов, определенных для данного члена, за исключением именованных атрибутов.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Возвращает массив настраиваемых атрибутов, определенных для данного члена и принадлежащих указанному типу.</summary>
      <returns>Массив настраиваемых атрибутов или пустой массив, если настраиваемые атрибуты отсутствуют.</returns>
      <param name="attributeType">Тип пользовательских атрибутов.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Возвращает массив всех настраиваемых атрибутов, примененных к этому члену.</summary>
      <returns>Массив, содержащий все настраиваемые атрибуты, примененные к этому члену, или массив с нулем элементов, если атрибуты не определены.</returns>
      <param name="useCache">Значение true для поиска атрибутов по цепочке наследования этого члена; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetParameters">
      <summary>Возвращает параметры асинхронного метода действия.</summary>
      <returns>Параметры асинхронного метода действия.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetSelectors">
      <summary>Возвращает селекторы асинхронного метода действия.</summary>
      <returns>Асинхронные селекторы метода действия.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Возвращает значение, указывающее, определен ли для данного члена один экземпляр заданного настраиваемого атрибута или несколько.</summary>
      <returns>Значение, указывающее, определен ли для данного члена один или несколько экземпляров заданного настраиваемого атрибута.</returns>
      <param name="attributeType">Тип настраиваемого атрибута.</param>
      <param name="inherit">Значение true, если требуется просмотреть цепочку иерархии для поиска унаследованного настраиваемого атрибута; в противном случае — значение false.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.MethodInfo"></member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.TaskMethodInfo">
      <summary>Получает информацию для асинхронной задачи.</summary>
      <returns>Информация для асинхронной задачи.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.UniqueId">
      <summary>Получает уникальный идентификатор для задачи.</summary>
      <returns>Уникальный идентификатор для задачи.</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.AuthenticationChallengeContext">
      <summary>Представляет контекст запроса проверки подлинности с информацией для выполнения запроса проверки подлинности.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationChallengeContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Filters.AuthenticationChallengeContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationChallengeContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Web.Mvc.ActionResult)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Filters.AuthenticationChallengeContext" />.</summary>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionDescriptor">Методы действия, связанные с запросом.</param>
      <param name="result">Ответ на запрос.</param>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationChallengeContext.ActionDescriptor">
      <summary>Получает или задает дескриптор действия.</summary>
      <returns>Дескриптор действия, связанный с запросом.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationChallengeContext.Result">
      <summary>Получает или задает результат действия для выполнения.</summary>
      <returns>Ответ на запрос.</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.AuthenticationContext">
      <summary>Представляет контекст проверки подлинности с информацией для выполнения проверки подлинности.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Filters.AuthenticationContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Security.Principal.IPrincipal)"></member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.ActionDescriptor">
      <summary>Получает или задает дескриптор действия.</summary>
      <returns>Методы действия, связанные с проверкой подлинности.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.Principal">
      <summary>Получает или задает текущего участника, прошедшего проверку подлинности.</summary>
      <returns>Учетная запись для безопасного доступа для проверки подлинности.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.Result">
      <summary>Получает или задает результат ошибки, указывающий, что была выполнена проверка подлинности, которая завершилась с ошибкой.</summary>
      <returns>Результат проверки подлинности.</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.IAuthenticationFilter">
      <summary>Определяет фильтр, выполняющий проверку подлинности.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>Проверяет подлинность запроса.</summary>
      <param name="filterContext">Контекст, используемый для проверки подлинности.</param>
    </member>
    <member name="M:System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>Добавляет запрос проверки подлинности в текущий объект <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="filterContext">Контекст, используемый для запроса проверки подлинности.</param>
    </member>
    <member name="T:System.Web.Mvc.Filters.IOverrideFilter">
      <summary>Определяет фильтр, переопределяющий другие фильтры.</summary>
    </member>
    <member name="P:System.Web.Mvc.Filters.IOverrideFilter.FiltersToOverride">
      <summary>Получает тип фильтров для переопределения.</summary>
      <returns>Переопределяемый фильтр.</returns>
    </member>
    <member name="T:System.Web.Mvc.Html.ChildActionExtensions">
      <summary>Представляет поддержку вызова дочерних методов действия и отображения результата, встроенного в родительское представление.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Вызывает указанный дочерний метод действия и возвращает результат в виде строки HTML.</summary>
      <returns>Результат действия дочернего элемента в виде HTML-строки.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия, который необходимо вызвать.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="htmlHelper" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="actionName" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.InvalidOperationException">Невозможно найти необходимые данные виртуального пути.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Вызывает указанный дочерний метод действия с указанными параметрами и возвращает результат в виде строки HTML.</summary>
      <returns>Результат действия дочернего элемента в виде HTML-строки.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия, который необходимо вызвать.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.<paramref name="routeValues" /> можно использовать для предоставления параметров, связанных с параметрами метода действия.Параметр <paramref name="routeValues" /> объединяется с исходными значениями маршрута и переопределяет их.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="htmlHelper" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="actionName" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.InvalidOperationException">Невозможно найти необходимые данные виртуального пути.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Вызывает указанный дочерний метод действия, используя указанное имя контроллера, и возвращает результат в виде строки HTML.</summary>
      <returns>Результат действия дочернего элемента в виде HTML-строки.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия, который необходимо вызвать.</param>
      <param name="controllerName">Имя контроллера, который содержит метод действия.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="htmlHelper" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="actionName" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.InvalidOperationException">Невозможно найти необходимые данные виртуального пути.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Вызывает указанный дочерний метод действия, используя указанные параметры и имя контроллера, и возвращает результат в виде строки HTML.</summary>
      <returns>Результат действия дочернего элемента в виде HTML-строки.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия, который необходимо вызвать.</param>
      <param name="controllerName">Имя контроллера, который содержит метод действия.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.<paramref name="routeValues" /> можно использовать для предоставления параметров, связанных с параметрами метода действия.Параметр <paramref name="routeValues" /> объединяется с исходными значениями маршрута и переопределяет их.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="htmlHelper" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="actionName" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.InvalidOperationException">Невозможно найти необходимые данные виртуального пути.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Вызывает указанный дочерний метод действия, используя указанные параметры и имя контроллера, и возвращает результат в виде строки HTML.</summary>
      <returns>Результат действия дочернего элемента в виде HTML-строки.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия, который необходимо вызвать.</param>
      <param name="controllerName">Имя контроллера, который содержит метод действия.</param>
      <param name="routeValues">Словарь, содержащий параметры маршрута.<paramref name="routeValues" /> можно использовать для предоставления параметров, связанных с параметрами метода действия.Параметр <paramref name="routeValues" /> объединяется с исходными значениями маршрута и переопределяет их.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="htmlHelper" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="actionName" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.InvalidOperationException">Невозможно найти необходимые данные виртуального пути.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Вызывает указанный дочерний метод действия, используя указанные параметры, и возвращает результат в виде строки HTML.</summary>
      <returns>Результат действия дочернего элемента в виде HTML-строки.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия, который необходимо вызвать.</param>
      <param name="routeValues">Словарь, содержащий параметры маршрута.<paramref name="routeValues" /> можно использовать для предоставления параметров, связанных с параметрами метода действия.Параметр <paramref name="routeValues" /> объединяется с исходными значениями маршрута и переопределяет их.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="htmlHelper" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="actionName" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.InvalidOperationException">Невозможно найти необходимые данные виртуального пути.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Вызывает указанный дочерний метод действия и отображает результат, встроенный в родительское представление.</summary>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя дочернего метода действия, который необходимо вызвать.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="htmlHelper" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="actionName" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.InvalidOperationException">Невозможно найти необходимые данные виртуального пути.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Вызывает указанный дочерний метод действия, используя указанные параметры, и отображает результат, встроенный в родительское представление.</summary>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя дочернего метода действия, который необходимо вызвать.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.<paramref name="routeValues" /> можно использовать для предоставления параметров, связанных с параметрами метода действия.Параметр <paramref name="routeValues" /> объединяется с исходными значениями маршрута и переопределяет их.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="htmlHelper" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="actionName" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.InvalidOperationException">Невозможно найти необходимые данные виртуального пути.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Вызывает указанный дочерний метод действия, используя указанное имя контроллера, и отображает результат, встроенный в родительское представление.</summary>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя дочернего метода действия, который необходимо вызвать.</param>
      <param name="controllerName">Имя контроллера, который содержит метод действия.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="htmlHelper" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="actionName" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.InvalidOperationException">Невозможно найти необходимые данные виртуального пути.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Вызывает указанный дочерний метод действия, используя указанные параметры и имя контроллера, и отображает результат, встроенный в родительское представление.</summary>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя дочернего метода действия, который необходимо вызвать.</param>
      <param name="controllerName">Имя контроллера, который содержит метод действия.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.<paramref name="routeValues" /> можно использовать для предоставления параметров, связанных с параметрами метода действия.Параметр <paramref name="routeValues" /> объединяется с исходными значениями маршрута и переопределяет их.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="htmlHelper" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="actionName" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.InvalidOperationException">Невозможно найти необходимые данные виртуального пути.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Вызывает указанный дочерний метод действия, используя указанные параметры и имя контроллера, и отображает результат, встроенный в родительское представление.</summary>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя дочернего метода действия, который необходимо вызвать.</param>
      <param name="controllerName">Имя контроллера, который содержит метод действия.</param>
      <param name="routeValues">Словарь, содержащий параметры маршрута.<paramref name="routeValues" /> можно использовать для предоставления параметров, связанных с параметрами метода действия.Параметр <paramref name="routeValues" /> объединяется с исходными значениями маршрута и переопределяет их.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="htmlHelper" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="actionName" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.InvalidOperationException">Невозможно найти необходимые данные виртуального пути.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Вызывает указанный дочерний метод действия, используя указанные параметры, и отображает результат, встроенный в родительское представление.</summary>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя дочернего метода действия, который необходимо вызвать.</param>
      <param name="routeValues">Словарь, содержащий параметры маршрута.<paramref name="routeValues" /> можно использовать для предоставления параметров, связанных с параметрами метода действия.Параметр <paramref name="routeValues" /> объединяется с исходными значениями маршрута и переопределяет их.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="htmlHelper" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="actionName" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.InvalidOperationException">Невозможно найти необходимые данные виртуального пути.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayExtensions">
      <summary>Представляет поддержку для представления значений объектов в виде HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Возвращает HTML-разметку для каждого свойства объекта, представленного строковым выражением.</summary>
      <returns>HTML-разметка для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Возвращает HTML-разметку для каждого свойства объекта, представленного строковым выражением, используя дополнительные данные представления.</summary>
      <returns>HTML-разметка для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Возвращает HTML-разметку для каждого свойства объекта, представленного выражением, используя указанный шаблон.</summary>
      <returns>HTML-разметка для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Возвращает HTML-разметку для каждого свойства объекта, представленного выражением, используя указанный шаблон и дополнительные данные представления.</summary>
      <returns>HTML-разметка для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Возвращает HTML-разметку для каждого свойства объекта, представленного выражением, используя указанный шаблон и идентификатор поля HTML.</summary>
      <returns>HTML-разметка для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="htmlFieldName">Строка, которая используется для устранения неоднозначности имен HTML-элементов ввода (input), которые отображаются для свойств с одинаковыми именами.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Возвращает HTML-разметку для каждого свойства объекта, представленного выражением, используя указанный шаблон, идентификатор поля HTML и дополнительные данные представления.</summary>
      <returns>HTML-разметка для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="htmlFieldName">Строка, которая используется для устранения неоднозначности имен HTML-элементов ввода (input), которые отображаются для свойств с одинаковыми именами.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Возвращает HTML-разметку для каждого свойства объекта, представленного выражением <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>HTML-разметка для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Возвращает строку, содержащую значение каждого свойства объекта, представленного указанным выражением, используя дополнительные данные представления.</summary>
      <returns>HTML-разметка для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Возвращает строку, содержащую значение для каждого свойства объекта, представленного выражением <see cref="T:System.Linq.Expressions.Expression" />, используя указанный шаблон.</summary>
      <returns>HTML-разметка для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Возвращает строку, содержащую значение каждого свойства объекта, представленного указанным выражением, используя указанный шаблон и дополнительные данные представления.</summary>
      <returns>HTML-разметка для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Возвращает HTML-разметку для каждого свойства объекта, представленного выражением <see cref="T:System.Linq.Expressions.Expression" />, используя указанный шаблон и идентификатор поля HTML.</summary>
      <returns>HTML-разметка для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="htmlFieldName">Строка, которая используется для устранения неоднозначности имен HTML-элементов ввода (input), которые отображаются для свойств с одинаковыми именами.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>Возвращает HTML-разметку для каждого свойства объекта, представленного указанным выражением, используя шаблон, идентификатор поля HTML и дополнительные данные представления.</summary>
      <returns>HTML-разметка для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="htmlFieldName">Строка, которая используется для устранения неоднозначности имен HTML-элементов ввода (input), которые отображаются для свойств с одинаковыми именами.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Возвращает HTML-разметку для каждого свойства в модели.</summary>
      <returns>HTML-разметка для каждого свойства в модели.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Возвращает HTML-разметку для каждого свойства в модели, используя дополнительные данные представления.</summary>
      <returns>HTML-разметка для каждого свойства в модели.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Возвращает HTML-разметку для каждого свойства в модели, используя указанный шаблон.</summary>
      <returns>HTML-разметка для каждого свойства в модели.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Возвращает HTML-разметку для каждого свойства в модели, используя указанные шаблон и дополнительные данные представления.</summary>
      <returns>HTML-разметка для каждого свойства в модели.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Возвращает HTML-разметку для каждого свойства в модели, используя указанные шаблон и идентификатор поля HTML.</summary>
      <returns>HTML-разметка для каждого свойства в модели.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="htmlFieldName">Строка, которая используется для устранения неоднозначности имен HTML-элементов ввода (input), которые отображаются для свойств с одинаковыми именами.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Возвращает HTML-разметку для каждого свойства в модели, используя указанные шаблон, идентификатор поля HTML и дополнительные данные представления.</summary>
      <returns>HTML-разметка для каждого свойства в модели.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="htmlFieldName">Строка, которая используется для устранения неоднозначности имен HTML-элементов ввода (input), которые отображаются для свойств с одинаковыми именами.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayNameExtensions">
      <summary>Предоставляет механизм, позволяющий получать отображаемые имена.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayName(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Получает отображаемое имя.</summary>
      <returns>Отображаемое имя.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий отображаемое имя.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Получает отображаемое имя для модели.</summary>
      <returns>Отображаемое имя для модели.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий отображаемое имя.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Получает отображаемое имя для модели.</summary>
      <returns>Отображаемое имя для модели.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий отображаемое имя.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Получает отображаемое имя для модели.</summary>
      <returns>Отображаемое имя для модели.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayTextExtensions">
      <summary>Предоставляет способ визуализации значений объекта в виде HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayText(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Возвращает HTML-разметку для каждого свойства объекта, представленного указанным выражением.</summary>
      <returns>HTML-разметка для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayTextFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Возвращает HTML-разметку для каждого свойства объекта, представленного указанным выражением.</summary>
      <returns>HTML-разметка для каждого свойства.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.EditorExtensions">
      <summary>Представляет поддержку для HTML-элемента ввода (input) в приложении.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Возвращает HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Возвращает HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением, используя дополнительные данные представления.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Возвращает HTML-элемент input для каждого свойства объекта, представленного выражением, используя указанный шаблон.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Возвращает HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением, используя указанный шаблон и дополнительные данные представления.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Возвращает HTML-элемент input для каждого свойства объекта, представленного выражением, используя указанные шаблон и имя поля HTML.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="htmlFieldName">Строка, которая используется для устранения неоднозначности имен HTML-элементов ввода (input), которые отображаются для свойств с одинаковыми именами.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Возвращает HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением, используя указанный шаблон, имя поля HTML и дополнительные данные представления.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="htmlFieldName">Строка, которая используется для устранения неоднозначности имен HTML-элементов ввода (input), которые отображаются для свойств с одинаковыми именами.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Возвращает HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Возвращает HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением, используя дополнительные данные представления.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Возвращает HTML-элемент input для каждого свойства объекта, представленного выражением <see cref="T:System.Linq.Expressions.Expression" />, используя указанный шаблон.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Возвращает HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением, используя указанный шаблон и дополнительные данные представления.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Возвращает HTML-элемент input для каждого свойства объекта, представленного выражением <see cref="T:System.Linq.Expressions.Expression" />, используя указанные шаблон и имя поля HTML.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="htmlFieldName">Строка, которая используется для устранения неоднозначности имен HTML-элементов ввода (input), которые отображаются для свойств с одинаковыми именами.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>Возвращает HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением, используя указанный шаблон, имя поля HTML и дополнительные данные представления.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="htmlFieldName">Строка, которая используется для устранения неоднозначности имен HTML-элементов ввода (input), которые отображаются для свойств с одинаковыми именами.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Возвращает HTML-элемент ввода (input) для каждого свойства в модели.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства в модели.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Возвращает HTML-элемент ввода (input) для каждого свойства в модели, используя дополнительные данные представления.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства в модели.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Возвращает HTML-элемент input для каждого свойства в модели, используя указанный шаблон.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства в модели и в указанном шаблоне.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Возвращает HTML-элемент ввода (input) для каждого свойства в модели, используя указанные шаблон и дополнительные данные представления.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства в модели.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Возвращает HTML-элемент ввода (input) для каждого свойства в модели, используя указанные имя шаблона и имя поля HTML.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства в модели и в указанном шаблоне.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="htmlFieldName">Строка, которая используется для устранения неоднозначности имен HTML-элементов ввода (input), которые отображаются для свойств с одинаковыми именами.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Возвращает HTML-элемент ввода (input) для каждого свойства в модели, используя имя шаблона, имя поля HTML и дополнительные данные представления.</summary>
      <returns>HTML-элемент ввода (input) для каждого свойства в модели.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="templateName">Имя шаблона, используемого для отображения объекта.</param>
      <param name="htmlFieldName">Строка, которая используется для устранения неоднозначности имен HTML-элементов ввода (input), которые отображаются для свойств с одинаковыми именами.</param>
      <param name="additionalViewData">Анонимный объект, который может содержать дополнительные данные представления, добавляемые в экземпляр <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, созданный для шаблона.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.EnumHelper">
      <summary>Предоставляет методы для работы со значениями перечисления и списками выбора.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)">
      <summary>Получает список объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые соответствуют ограничениям перечисления, заданным в указанном типе.</summary>
      <returns>Список для указанного <paramref name="type" />.</returns>
      <param name="type">Оцениваемый тип.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type,System.Enum)">
      <summary>Получает список объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые соответствуют ограничениям перечисления, заданным в указанном типе.Также обеспечивает передачу <paramref name="value" /> по круговому пути, даже если это значение не соответствует определенной константе, и присваивает свойству Selected значение true для одного элемента в возвращенном списке, который соответствует <paramref name="value" />.</summary>
      <returns>Список для указанного <paramref name="type" />, который, возможно, расширен для включения нераспознанного <paramref name="value" />.</returns>
      <param name="type">Оцениваемый тип.</param>
      <param name="value">Выбираемое значение типа.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)">
      <summary>Получает список объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые соответствуют ограничениям перечисления, заданным в указанных метаданных.</summary>
      <returns>Список для указанных метаданных.</returns>
      <param name="metadata">Метаданные модели для проверки.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata,System.Enum)">
      <summary>Получает список объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые соответствуют ограничениям перечисления, заданным в указанных метаданных.Также обеспечивает передачу значения по круговому пути, даже если это значение не соответствует определенной константе, и присваивает свойству Selected значение true для одного элемента в возвращенном списке, который соответствует этому значению.</summary>
      <returns>Список для указанного <paramref name="metadata" />, который, возможно, расширен для включения нераспознанного <paramref name="value" />.</returns>
      <param name="metadata">Оцениваемые метаданные.</param>
      <param name="value">Выбираемое значение из типа метаданных.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.IsValidForEnumHelper(System.Type)">
      <summary>Получает значение, указывающее, подходит ли указанный тип или выражение этого типа для использования в вызовах <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)" /> и <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</summary>
      <returns>Значение true, если при передаче указанного типа <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)" /> не порождает исключение и при передаче выражения этого типа <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> не порождает исключение. В противном случае — значение false.</returns>
      <param name="type">Проверяемый тип.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.IsValidForEnumHelper(System.Web.Mvc.ModelMetadata)">
      <summary>Получает значение, указывающее, подходят ли указанные метаданные или связанное выражение для использования в вызовах <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)" /> и <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</summary>
      <returns>Значение true, если при передаче указанного <see cref="T:System.Web.Mvc.ModelMetadata" /><see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)" /> не возвращает исключение и при передаче связанного выражения <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> не порождает исключение. В противном случае — значение false.</returns>
      <param name="metadata">Проверяемые метаданные.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.FormExtensions">
      <summary>Представляет поддержку для HTML в приложении.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.Форма использует метод POST, и запрос обрабатывается методом действия для представления.</summary>
      <returns>Открывающий тег &lt;form&gt;. </returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ и включает значения маршрута в атрибут действия.Форма использует метод POST, и запрос обрабатывается методом действия для представления.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ и задает тег действия указанному контроллеру и действию.Форма использует метод POST.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ и задает тег действия указанному контроллеру, действию и значениям маршрута.Форма использует метод POST.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ и задает тег действия указанному контроллеру, действию и значениям маршрута.Форма использует указанный метод HTTP.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="method">HTTP-метод обработки формы (GET или POST).</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ и задает тег действия указанному контроллеру, действию и значениям маршрута.Форма использует указанный метод HTTP и включает атрибуты HTML.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="method">HTTP-метод обработки формы (GET или POST).</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ и задает тег действия указанному контроллеру и действию.Форма использует указанный метод HTTP.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="method">HTTP-метод обработки формы (GET или POST).</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ и задает тег действия указанному контроллеру и действию.Форма использует указанный метод HTTP и включает атрибуты HTML из словаря.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="method">HTTP-метод обработки формы (GET или POST).</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ и задает тег действия указанному контроллеру и действию.Форма использует указанный метод HTTP и включает атрибуты HTML.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="method">HTTP-метод обработки формы (GET или POST).</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ и задает тег действия указанному контроллеру, действию и значениям маршрута из словаря значений маршрута.Форма использует метод POST.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ и задает тег действия указанному контроллеру, действию и значениям маршрута из словаря значений маршрута.Форма использует указанный метод HTTP.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="method">HTTP-метод обработки формы (GET или POST).</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ и задает тег действия указанному контроллеру, действию и значениям маршрута из словаря значений маршрута.Форма использует указанный метод HTTP и включает атрибуты HTML из словаря.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="actionName">Имя метода действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="method">HTTP-метод обработки формы (GET или POST).</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ и включает значения маршрута из словаря значений маршрута в атрибут действия.Форма использует метод POST, и запрос обрабатывается методом действия для представления.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.Когда пользователь отправит форму, запрос будет обработан целевым объектом маршрута.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.Когда пользователь отправит форму, запрос будет обработан целевым объектом маршрута.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.Когда пользователь отправит форму, запрос будет обработан целевым объектом маршрута.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.Когда пользователь отправит форму, запрос будет обработан целевым объектом маршрута.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="method">HTTP-метод обработки формы (GET или POST).</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.Когда пользователь отправит форму, запрос будет обработан целевым объектом маршрута.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Данный объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="method">HTTP-метод обработки формы (GET или POST).</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.Когда пользователь отправит форму, запрос будет обработан целевым объектом маршрута.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="method">HTTP-метод обработки формы (GET или POST).</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.Когда пользователь отправит форму, запрос будет обработан целевым объектом маршрута.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="method">HTTP-метод обработки формы (GET или POST).</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.Когда пользователь отправит форму, запрос будет обработан целевым объектом маршрута.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="method">HTTP-метод обработки формы (GET или POST).</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.Когда пользователь отправит форму, запрос будет обработан целевым объектом маршрута.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.Когда пользователь отправит форму, запрос будет обработан целевым объектом маршрута.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="method">HTTP-метод обработки формы (GET или POST).</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.Когда пользователь отправит форму, запрос будет обработан целевым объектом маршрута.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="routeName">Имя маршрута, который следует использовать для получения URL-адреса отправки формы.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="method">HTTP-метод обработки формы (GET или POST).</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Записывает открывающий тег &lt;form&gt; в ответ.Когда пользователь отправит форму, запрос будет обработан целевым объектом маршрута.</summary>
      <returns>Открывающий тег &lt;form&gt;.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.EndForm(System.Web.Mvc.HtmlHelper)">
      <summary>Выводит закрывающий тег &lt;/form&gt; в ответ. </summary>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.InputExtensions">
      <summary>Представляет поддержку для элементов управления вводом HTML в приложении.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Возвращает элемент input типа "флажок", используя заданные вспомогательный метод HTML и имя поля формы.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "checkbox".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean)">
      <summary>Возвращает элемент input типа "флажок", используя заданные вспомогательный метод HTML, имя поля формы и значение, указывающее, установлен ли флажок.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "checkbox".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы.</param>
      <param name="isChecked">Значение true, чтобы установить флажок; в противном случае — значение false.Значение флажка получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут checked в атрибутах html.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент input типа "флажок", используя заданные вспомогательный метод HTML, имя поля формы, значение, указывающее, установлен ли флажок, и атрибуты HTML.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "checkbox".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы.</param>
      <param name="isChecked">Значение true, чтобы установить флажок; в противном случае — значение false.Значение флажка получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут checked в атрибутах html.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)">
      <summary>Возвращает элемент input типа "флажок", используя заданные вспомогательный метод HTML, имя поля формы, значение, указывающее, установлен ли флажок, и атрибуты HTML.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "checkbox".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы.</param>
      <param name="isChecked">Значение true, чтобы установить флажок; в противном случае — значение false.Значение флажка получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут checked в атрибутах html.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент input типа "флажок", используя заданные вспомогательный метод HTML, имя поля формы и атрибуты HTML.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "checkbox".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Возвращает элемент input типа "флажок", используя заданные вспомогательный метод HTML, имя поля формы и атрибуты HTML.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "checkbox".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>Возвращает элемент input типа "флажок" для каждого свойства объекта, представленного указанным выражением.</summary>
      <returns>HTML-элемент input, атрибут type которого имеет значение "checkbox" для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент input типа "флажок" для каждого свойства объекта, представленного указанным выражением, используя заданные атрибуты HTML.</summary>
      <returns>HTML-элемент input, атрибут type которого имеет значение "checkbox" для каждого свойства объекта, представленного указанным выражением (элемент возвращается с использованием заданных атрибутов HTML).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="htmlAttributes">Словарь, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Object)">
      <summary>Возвращает элемент input типа "флажок" для каждого свойства объекта, представленного указанным выражением, используя заданные атрибуты HTML.</summary>
      <returns>HTML-элемент input, атрибут type которого имеет значение "checkbox" для каждого свойства объекта, представленного указанным выражением (элемент возвращается с использованием заданных атрибутов HTML).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Возвращает скрытый элемент input, используя заданные вспомогательный метод HTML и имя поля формы.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "hidden".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Возвращает скрытый элемент input, используя заданные вспомогательный метод HTML, имя поля формы и значение.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "hidden".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение скрытого элемента input.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает скрытый элемент input, используя заданные вспомогательный метод HTML, имя поля формы, значение и атрибуты HTML.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "hidden".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение скрытого элемента input.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Возвращает скрытый элемент input, используя заданные вспомогательный метод HTML, имя поля формы, значение и атрибуты HTML.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "hidden".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение скрытого элемента input.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Возвращает скрытый HTML-элемент input для каждого свойства объекта, представленного указанным выражением.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "hidden" для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает скрытый HTML-элемент input для каждого свойства объекта, представленного указанным выражением, используя указанные атрибуты HTML.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "hidden" для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Возвращает скрытый HTML-элемент input для каждого свойства объекта, представленного указанным выражением, используя указанные атрибуты HTML.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "hidden" для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Возвращает элемент input типа "пароль", используя заданные вспомогательный метод HTML и имя поля формы.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "password".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Возвращает элемент input типа "пароль", используя заданные вспомогательный метод HTML, имя поля формы и значение.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "password".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение элемента input типа "пароль".Если значение для этого параметра не указано, атрибут value в атрибутах html используется для получения значения.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент input типа "пароль", используя заданные вспомогательный метод HTML, имя поля формы, значение и атрибуты HTML.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "password".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение элемента input типа "пароль".Если значение для этого параметра не указано, атрибут value в атрибутах html используется для получения значения.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Возвращает элемент input типа "пароль", используя заданные вспомогательный метод HTML, имя поля формы, значение и атрибуты HTML.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "password".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение элемента input типа "пароль".Если значение для этого параметра не указано, атрибут value в атрибутах html используется для получения значения.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Возвращает элемент input типа "пароль" для каждого свойства объекта, представленного указанным выражением.</summary>
      <returns>HTML-элемент input, атрибут type которого имеет значение "password" для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент input типа "пароль" для каждого свойства объекта, представленного указанным выражением, используя указанные атрибуты HTML.</summary>
      <returns>HTML-элемент input, атрибут type которого имеет значение "password" для каждого свойства объекта, представленного указанным выражением (элемент возвращается с использованием заданных атрибутов HTML).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="htmlAttributes">Словарь, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Возвращает элемент input типа "пароль" для каждого свойства объекта, представленного указанным выражением, используя указанные атрибуты HTML.</summary>
      <returns>HTML-элемент input, атрибут type которого имеет значение "password" для каждого свойства объекта, представленного указанным выражением (элемент возвращается с использованием заданных атрибутов HTML).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Возвращает элемент input типа "переключатель", который предоставляет возможность выбора из нескольких взаимоисключающих вариантов.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "radio".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение выбранного переключателя.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean)">
      <summary>Возвращает элемент input типа "переключатель", который предоставляет возможность выбора из нескольких взаимоисключающих вариантов.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "radio".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение выбранного переключателя.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <param name="isChecked">Значение true, чтобы установить переключатель; в противном случае — значение false.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент input типа "переключатель", который предоставляет возможность выбора из нескольких взаимоисключающих вариантов.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "radio".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение выбранного переключателя.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <param name="isChecked">Значение true, чтобы установить переключатель; в противном случае — значение false.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Object)">
      <summary>Возвращает элемент input типа "переключатель", который предоставляет возможность выбора из нескольких взаимоисключающих вариантов.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "radio".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение выбранного переключателя.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <param name="isChecked">Значение true, чтобы установить переключатель; в противном случае — значение false.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент input типа "переключатель", который предоставляет возможность выбора из нескольких взаимоисключающих вариантов.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "radio".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение выбранного переключателя.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Возвращает элемент input типа "переключатель", который предоставляет возможность выбора из нескольких взаимоисключающих вариантов.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "radio".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение выбранного переключателя.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Возвращает элемент input типа "переключатель" для каждого свойства объекта, представленного указанным выражением.</summary>
      <returns>HTML-элемент input, атрибут type которого имеет значение "radio" для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="value">Значение выбранного переключателя.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент input типа "переключатель" для каждого свойства объекта, представленного указанным выражением, используя заданные атрибуты HTML.</summary>
      <returns>HTML-элемент input, атрибут type которого имеет значение "radio" для каждого свойства объекта, представленного указанным выражением (элемент возвращается с использованием заданных атрибутов HTML).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="value">Значение выбранного переключателя.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <param name="htmlAttributes">Словарь, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Object)">
      <summary>Возвращает элемент input типа "переключатель" для каждого свойства объекта, представленного указанным выражением, используя заданные атрибуты HTML.</summary>
      <returns>HTML-элемент input, атрибут type которого имеет значение "radio" для каждого свойства объекта, представленного указанным выражением (элемент возвращается с использованием заданных атрибутов HTML).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="value">Значение выбранного переключателя.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Возвращает текстовый элемент input, используя заданные вспомогательный метод HTML и имя поля формы.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "text".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Возвращает текстовый элемент input, используя заданные вспомогательный метод HTML, имя поля формы и значение.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "text".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение текстового элемента input.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает текстовый элемент input, используя заданные вспомогательный метод HTML, имя поля формы, значение и атрибуты HTML.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "text".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение текстового элемента input.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Возвращает текстовый элемент input, используя заданные вспомогательный метод HTML, имя поля формы, значение и атрибуты HTML.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "text".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение текстового элемента input.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)">
      <summary>Возвращает текстовый элемент input.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "text".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы.</param>
      <param name="value">Значение текстового элемента input.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <param name="format">Строка, которая используется для форматирования ввода.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает текстовый элемент input.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "text".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение текстового элемента input.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <param name="format">Строка, которая используется для форматирования ввода.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Object)">
      <summary>Возвращает текстовый элемент input.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "text".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя поля формы и ключ <see cref="T:System.Web.Mvc.ViewDataDictionary" />, который используется для поиска значения.</param>
      <param name="value">Значение текстового элемента input.Значение получается в следующем порядке: объект <see cref="T:System.Web.Mvc.ModelStateDictionary" />, значение этого параметра, объект <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и, наконец, атрибут value в атрибутах html.</param>
      <param name="format">Строка, которая используется для форматирования ввода.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Возвращает текстовый элемент ввода input для каждого свойства объекта, представленного указанным выражением.</summary>
      <returns>HTML-элемент input, атрибут type которого имеет значение "text" для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="expression" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает текстовый элемент input для каждого свойства объекта, представленного указанным выражением, используя указанные атрибуты HTML.</summary>
      <returns>HTML-элемент input, атрибут type которого имеет значение "text" для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="htmlAttributes">Словарь, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="expression" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Возвращает текстовый элемент input для каждого свойства объекта, представленного указанным выражением, используя указанные атрибуты HTML.</summary>
      <returns>HTML-элемент input, атрибут type которого имеет значение "text" для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="expression" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Возвращает текстовый элемент input.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "text".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="format">Строка, которая используется для форматирования ввода.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает текстовый элемент input.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "text".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="format">Строка, которая используется для форматирования ввода.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Возвращает текстовый элемент input.</summary>
      <returns>Элемент input, атрибут type которого имеет значение "text".</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="format">Строка, которая используется для форматирования ввода.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.LabelExtensions">
      <summary>Представляет поддержку для HTML-элемента label в представлении MVC ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет свойство для отображения.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет свойство для отображения.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет свойство для отображения.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением, с использованием текста подписи.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет свойство для отображения.</param>
      <param name="labelText">Текст подписи для отображения.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет свойство для отображения.</param>
      <param name="labelText">Текст подписи.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет свойство для отображения.</param>
      <param name="labelText">Текст подписи.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет свойство для отображения.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет свойство для отображения.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет свойство для отображения.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Значение.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением, с использованием текста подписи.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет свойство для отображения.</param>
      <param name="labelText">Текст подписи для отображения.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет свойство для отображения.</param>
      <param name="labelText">Текст подписи для отображения.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет свойство для отображения.</param>
      <param name="labelText">Текст подписи.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TValue">Значение.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного моделью.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного моделью.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением, с использованием текста подписи.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="labelText">Текст подписи для отображения.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="labelText">Текст подписи.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Возвращает HTML-элемент label и имя свойства для свойства, представленного указанным выражением.</summary>
      <returns>HTML-элемент label и имя свойства для свойства, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="labelText">Текст подписи.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.LinkExtensions">
      <summary>Представляет поддержку для ссылок HTML в приложении.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Возвращает элемент привязки (элемент a) для указанного текста ссылки и действия.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя действия.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Возвращает элемент привязки (элемент a) для указанного текста ссылки, действия и значений маршрута.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя действия.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Возвращает элемент привязки (элемент a) для указанного текста ссылки, действия, значений маршрута и атрибутов HTML.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя действия.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента.Атрибуты извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Возвращает элемент привязки (элемент a) для указанного текста ссылки, действия и контроллера.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Возвращает элемент привязки (элемент a) для указанного текста ссылки, действия, контроллера, значений маршрута и атрибутов HTML.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Возвращает элемент привязки (элемент a) для указанного текста ссылки, действия, контроллера, протокола, имени узла, фрагмента URL-адреса, значений маршрута и атрибутов HTML.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="protocol">Протокол для URL-адреса, например "http" или "https".</param>
      <param name="hostName">Имя узла для URL-адреса.</param>
      <param name="fragment">Имя фрагмента URL-адреса (имя привязки).</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент привязки (элемент a) для указанного текста ссылки, действия, контроллера, протокола, имени узла, фрагмента URL-адреса, значений маршрута в виде словаря значений маршрута и атрибутов HTML в виде словаря.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="protocol">Протокол для URL-адреса, например "http" или "https".</param>
      <param name="hostName">Имя узла для URL-адреса.</param>
      <param name="fragment">Имя фрагмента URL-адреса (имя привязки).</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент привязки (элемент a) для указанного текста ссылки, действия, контроллера, значений маршрута в виде словаря значений маршрута и атрибутов HTML в виде словаря.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя действия.</param>
      <param name="controllerName">Имя контроллера.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Возвращает элемент привязки (элемент a) для указанного текста ссылки, действия и значений маршрута в виде словаря значений маршрута.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя действия.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент привязки (элемент a) для указанного текста ссылки, действия, значений маршрута в виде словаря значений маршрута и атрибутов HTML в виде словаря.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="actionName">Имя действия.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Возвращает элемент привязки (элемент a), содержащий виртуальный путь к указанному действию.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Возвращает элемент привязки (элемент a), содержащий виртуальный путь к указанному действию.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Возвращает элемент привязки (элемент a), содержащий виртуальный путь к указанному действию.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeName">Имя маршрута, используемого для возврата виртуального пути.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Возвращает элемент привязки (элемент a), содержащий виртуальный путь к указанному действию.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeName">Имя маршрута, используемого для возврата виртуального пути.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Возвращает элемент привязки (элемент a), содержащий виртуальный путь к указанному действию.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeName">Имя маршрута, используемого для возврата виртуального пути.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Возвращает элемент привязки (элемент a), содержащий виртуальный путь к указанному действию.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeName">Имя маршрута, используемого для возврата виртуального пути.</param>
      <param name="protocol">Протокол для URL-адреса, например "http" или "https".</param>
      <param name="hostName">Имя узла для URL-адреса.</param>
      <param name="fragment">Имя фрагмента URL-адреса (имя привязки).</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.Параметры извлекаются через отражение путем проверки свойств объекта.Объект обычно создается с использованием синтаксиса инициализатора объектов.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент привязки (элемент a), содержащий виртуальный путь к указанному действию.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeName">Имя маршрута, используемого для возврата виртуального пути.</param>
      <param name="protocol">Протокол для URL-адреса, например "http" или "https".</param>
      <param name="hostName">Имя узла для URL-адреса.</param>
      <param name="fragment">Имя фрагмента URL-адреса (имя привязки).</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Возвращает элемент привязки (элемент a), содержащий виртуальный путь к указанному действию.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeName">Имя маршрута, используемого для возврата виртуального пути.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент привязки (элемент a), содержащий виртуальный путь к указанному действию.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeName">Имя маршрута, используемого для возврата виртуального пути.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута. </param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Возвращает элемент привязки (элемент a), содержащий виртуальный путь к указанному действию.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент привязки (элемент a), содержащий виртуальный путь к указанному действию.</summary>
      <returns>Элемент привязки (элемент a).</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="linkText">Внутренний текст элемента привязки.</param>
      <param name="routeValues">Объект, содержащий параметры для маршрута.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="linkText" /> имеет значение null или пуст.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.MvcForm">
      <summary>Представляет элемент HTML form в представлении MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.HttpResponseBase)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Html.MvcForm" />, используя указанный объект HTTP-ответа.</summary>
      <param name="httpResponse">Объект HTTP-ответа.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="httpResponse " /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.Mvc.ViewContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Html.MvcForm" />, используя указанный контекст представления.</summary>
      <param name="viewContext">Объект, инкапсулирующий сведения, необходимые для отображения представления.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="viewContext" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Web.Mvc.Html.MvcForm" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы и, если это задано, управляемые ресурсы, используемые текущим экземпляром класса <see cref="T:System.Web.Mvc.Html.MvcForm" />.</summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.EndForm">
      <summary>Заканчивает форму и освобождает все ее ресурсы.</summary>
    </member>
    <member name="T:System.Web.Mvc.Html.NameExtensions">
      <summary>Получает HTML-атрибуты идентификатора и имени строки <see cref="T:System.Web.Mvc.HtmlHelper" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.Id(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Получает идентификатор строки <see cref="T:System.Web.Mvc.HtmlHelper" />.</summary>
      <returns>Значение HTML-атрибута идентификатора для объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Выражение, которое определяет объект, содержащий идентификатор.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.IdFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary> Получает идентификатор строки <see cref="T:System.Web.Mvc.HtmlHelper`1" />.</summary>
      <returns>Значение HTML-атрибута идентификатора для объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий идентификатор.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.IdForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Получает идентификатор строки <see cref="T:System.Web.Mvc.HtmlHelper" />.</summary>
      <returns>Значение HTML-атрибута идентификатора для объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.Name(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Получает полное имя HTML-поля для объекта, представленного выражением.</summary>
      <returns>Полное имя HTML-поля для объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Выражение, которое определяет объект, содержащий имя.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.NameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Получает полное имя HTML-поля для объекта, представленного выражением.</summary>
      <returns>Полное имя HTML-поля для объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий имя.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.NameForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Получает полное имя HTML-поля для объекта, представленного выражением.</summary>
      <returns>Полное имя HTML-поля для объекта, представленного выражением.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.PartialExtensions">
      <summary>Представляет функциональную возможность преобразования частичного представления в строку в кодировке HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Преобразует заданное частичное представление в строку в кодировке HTML.</summary>
      <returns>Частичное представление, отображаемое в виде строки в кодировке HTML.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="partialViewName">Имя отображаемого частичного представления.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Преобразует заданное частичное представление в строку в кодировке HTML.</summary>
      <returns>Частичное представление, отображаемое в виде строки в кодировке HTML.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="partialViewName">Имя отображаемого частичного представления.</param>
      <param name="model">Модель для частичного представления.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Преобразует заданное частичное представление в строку в кодировке HTML.</summary>
      <returns>Частичное представление, отображаемое в виде строки в кодировке HTML.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="partialViewName">Имя частичного представления.</param>
      <param name="model">Модель для частичного представления.</param>
      <param name="viewData">Словарь данных представления для частичного представления.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Преобразует заданное частичное представление в строку в кодировке HTML.</summary>
      <returns>Частичное представление, отображаемое в виде строки в кодировке HTML.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="partialViewName">Имя отображаемого частичного представления.</param>
      <param name="viewData">Словарь данных представления для частичного представления.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.RenderPartialExtensions">
      <summary>Обеспечивает поддержку визуализации частичного представления.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Выполняет визуализацию указанного частичного представления, используя заданный вспомогательный метод HTML.</summary>
      <param name="htmlHelper">Вспомогательный объект технологии HTML.</param>
      <param name="partialViewName">Имя частичного представления.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Выполняет визуализацию заданного частичного представления, передавая ему копию текущего объекта <see cref="T:System.Web.Mvc.ViewDataDictionary" />, в свойстве Model которого задана указанная модель.</summary>
      <param name="htmlHelper">Вспомогательный объект технологии HTML.</param>
      <param name="partialViewName">Имя частичного представления.</param>
      <param name="model">Модель.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Выполняет визуализацию заданного частичного представления, заменяя свойство ViewData частичного представления указанным объектом <see cref="T:System.Web.Mvc.ViewDataDictionary" /> и задавая указанную модель в качестве значения свойства Model данных представления.</summary>
      <param name="htmlHelper">Вспомогательный объект технологии HTML.</param>
      <param name="partialViewName">Имя частичного представления.</param>
      <param name="model">Модель для частичного представления.</param>
      <param name="viewData">Данные представления для частичного представления.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Выполняет визуализацию заданного частичного представления, заменяя его свойство ViewData заданным объектом <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <param name="htmlHelper">Вспомогательный объект технологии HTML.</param>
      <param name="partialViewName">Имя частичного представления.</param>
      <param name="viewData">Данные представления.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.SelectExtensions">
      <summary>Представляет поддержку выбора из списка.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Возвращает элемент select с единственным выбором, используя указанные вспомогательный метод HTML и имя поля формы.</summary>
      <returns>HTML-элемент select.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Возвращает элемент select с единственным выбором, используя указанные вспомогательный метод HTML, имя поля формы и заданные элементы списка.</summary>
      <returns>HTML-элемент select с подэлементом option для каждого элемента списка.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент select с единственным выбором, используя указанные вспомогательный метод HTML, имя поля формы, элементы списка и атрибуты HTML.</summary>
      <returns>HTML-элемент select с подэлементом option для каждого элемента списка.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Возвращает элемент select с единственным выбором, используя указанные вспомогательный метод HTML, имя поля формы, элементы списка и атрибуты HTML.</summary>
      <returns>HTML-элемент select с подэлементом option для каждого элемента списка.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>Возвращает элемент select с единственным выбором, используя указанные вспомогательный метод HTML, имя поля формы, элементы списка и метку варианта.</summary>
      <returns>HTML-элемент select с подэлементом option для каждого элемента списка.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <param name="optionLabel">Текст для пустого элемента по умолчанию.Этот параметр может иметь значение null.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент select с единственным выбором, используя указанные вспомогательный метод HTML, имя поля формы, элементы списка, метку варианта и атрибуты HTML.</summary>
      <returns>HTML-элемент select с подэлементом option для каждого элемента списка.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <param name="optionLabel">Текст для пустого элемента по умолчанию.Этот параметр может иметь значение null.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>Возвращает элемент select с единственным выбором, используя указанные вспомогательный метод HTML, имя поля формы, элементы списка, метку варианта и атрибуты HTML.</summary>
      <returns>HTML-элемент select с подэлементом option для каждого элемента списка.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <param name="optionLabel">Текст для пустого элемента по умолчанию.Этот параметр может иметь значение null.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Возвращает элемент select с единственным выбором, используя указанные вспомогательный метод HTML, имя поля формы и метку варианта.</summary>
      <returns>HTML-элемент select с подэлементом option для каждого элемента списка.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="optionLabel">Текст для пустого элемента по умолчанию.Этот параметр может иметь значение null.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Возвращает HTML-элемент select для каждого свойства объекта, представленного указанным выражением, используя указанные элементы списка.</summary>
      <returns>HTML-элемент select для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает HTML-элемент select для каждого свойства объекта, представленного указанным выражением, используя указанные элементы списка и атрибуты HTML.</summary>
      <returns>HTML-элемент select для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Возвращает HTML-элемент select для каждого свойства объекта, представленного указанным выражением, используя указанные элементы списка и атрибуты HTML.</summary>
      <returns>HTML-элемент select для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>Возвращает HTML-элемент select для каждого свойства объекта, представленного указанным выражением, используя указанные элементы списка и метку варианта.</summary>
      <returns>HTML-элемент select для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <param name="optionLabel">Текст для пустого элемента по умолчанию.Этот параметр может иметь значение null.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает HTML-элемент select для каждого свойства объекта, представленного указанным выражением, используя указанные элементы списка, метку варианта и атрибуты HTML.</summary>
      <returns>HTML-элемент select для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <param name="optionLabel">Текст для пустого элемента по умолчанию.Этот параметр может иметь значение null.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>Возвращает HTML-элемент select для каждого свойства объекта, представленного указанным выражением, используя указанные элементы списка, метку варианта и атрибуты HTML.</summary>
      <returns>HTML-элемент select для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <param name="optionLabel">Текст для пустого элемента по умолчанию.Этот параметр может иметь значение null.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип значения.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Возвращает HTML-элемент select для каждого значения перечисления, представленного указанным выражением.</summary>
      <returns>HTML-элемент select для каждого значения перечисления, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий значения для отображения.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TEnum">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает HTML-элемент select для каждого значения перечисления, представленного указанным выражением.</summary>
      <returns>HTML-элемент select для каждого значения перечисления, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий значения для отображения.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TEnum">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Возвращает HTML-элемент select для каждого значения перечисления, представленного указанным выражением.</summary>
      <returns>HTML-элемент select для каждого значения перечисления, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий значения для отображения.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TEnum">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Возвращает HTML-элемент select для каждого значения перечисления, представленного указанным выражением.</summary>
      <returns>HTML-элемент select для каждого значения перечисления, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий значения для отображения.</param>
      <param name="optionLabel">Текст для пустого элемента по умолчанию.Этот параметр может иметь значение null.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TEnum">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает HTML-элемент select для каждого значения перечисления, представленного указанным выражением.</summary>
      <returns>HTML-элемент select для каждого значения перечисления, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий значения для отображения.</param>
      <param name="optionLabel">Текст для пустого элемента по умолчанию.Этот параметр может иметь значение null.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TEnum">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Возвращает HTML-элемент select для каждого значения перечисления, представленного указанным выражением.</summary>
      <returns>HTML-элемент select для каждого значения перечисления, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий значения для отображения.</param>
      <param name="optionLabel">Текст для пустого элемента по умолчанию.Этот параметр может иметь значение null.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TEnum">Тип значения.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Возвращает элемент select с множественным выбором, используя указанные вспомогательный метод HTML и имя поля формы.</summary>
      <returns>HTML-элемент select.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Возвращает элемент select с множественным выбором, используя указанные вспомогательный метод HTML, имя поля формы и заданные элементы списка.</summary>
      <returns>HTML-элемент select с подэлементом option для каждого элемента списка.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает элемент select с множественным выбором, используя указанные вспомогательный метод HTML, имя поля формы, элементы списка и атрибуты HTML.</summary>
      <returns>HTML-элемент select с подэлементом option для каждого элемента списка.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Возвращает элемент select с множественным выбором, используя указанные вспомогательный метод HTML, имя поля формы и заданные элементы списка.</summary>
      <returns>HTML-элемент select с подэлементом option для каждого элемента списка.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или пуст.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Возвращает HTML-элемент select для каждого свойства объекта, представленного указанным выражением, используя указанные элементы списка.</summary>
      <returns>HTML-элемент select для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает HTML-элемент select для каждого свойства объекта, представленного указанным выражением, используя указанные элементы списка и атрибуты HTML.</summary>
      <returns>HTML-элемент select для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Возвращает HTML-элемент select для каждого свойства объекта, представленного указанным выражением, используя указанные элементы списка и атрибуты HTML.</summary>
      <returns>HTML-элемент select для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="selectList">Коллекция объектов <see cref="T:System.Web.Mvc.SelectListItem" />, которые используются для заполнения раскрывающегося списка.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.TextAreaExtensions">
      <summary>Представляет поддержку для HTML-элементов управления textarea.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Возвращает указанный элемент textarea, используя заданные вспомогательный метод HTML и имя поля формы.</summary>
      <returns>Элемент textarea.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает указанный элемент textarea, используя заданные вспомогательный метод HTML, имя поля формы и атрибуты HTML.</summary>
      <returns>Элемент textarea.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Возвращает указанный элемент textarea, используя заданные вспомогательный метод HTML и атрибуты HTML.</summary>
      <returns>Элемент textarea.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Возвращает указанный элемент textarea, используя заданные вспомогательный метод HTML, имя поля формы и текстовое содержимое.</summary>
      <returns>Элемент textarea.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="value">Текстовое содержимое.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает указанный элемент textarea, используя заданные вспомогательный метод HTML, имя поля формы, текстовое содержимое и атрибуты HTML.</summary>
      <returns>Элемент textarea.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="value">Текстовое содержимое.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает указанный элемент textarea, используя заданные вспомогательный метод HTML, имя поля формы, текстовое содержимое, число строк и столбцов и атрибуты HTML.</summary>
      <returns>Элемент textarea.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="value">Текстовое содержимое.</param>
      <param name="rows">Количество строк.</param>
      <param name="columns">Количество столбцов.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Object)">
      <summary>Возвращает указанный элемент textarea, используя заданные вспомогательный метод HTML, имя поля формы, текстовое содержимое, число строк и столбцов и атрибуты HTML.</summary>
      <returns>Элемент textarea.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="value">Текстовое содержимое.</param>
      <param name="rows">Количество строк.</param>
      <param name="columns">Количество столбцов.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Возвращает указанный элемент textarea, используя заданные вспомогательный метод HTML, имя поля формы, текстовое содержимое и атрибуты HTML.</summary>
      <returns>Элемент textarea.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя возвращаемого поля формы.</param>
      <param name="value">Текстовое содержимое.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML, которые следует задать для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Возвращает HTML-элемент textarea для каждого свойства объекта, представленного указанным выражением.</summary>
      <returns>HTML-элемент textarea для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает HTML-элемент textarea для каждого свойства объекта, представленного указанным выражением, используя указанные атрибуты HTML.</summary>
      <returns>HTML-элемент textarea для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="htmlAttributes">Словарь, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает HTML-элемент textarea для каждого свойства объекта, представленного указанным выражением, используя указанные атрибуты HTML и количество строк и столбцов.</summary>
      <returns>HTML-элемент textarea для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="rows">Количество строк.</param>
      <param name="columns">Количество столбцов.</param>
      <param name="htmlAttributes">Словарь, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Object)">
      <summary>Возвращает HTML-элемент textarea для каждого свойства объекта, представленного указанным выражением, используя указанные атрибуты HTML и количество строк и столбцов.</summary>
      <returns>HTML-элемент textarea для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="rows">Количество строк.</param>
      <param name="columns">Количество столбцов.</param>
      <param name="htmlAttributes">Словарь, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Возвращает HTML-элемент textarea для каждого свойства объекта, представленного указанным выражением, используя указанные атрибуты HTML.</summary>
      <returns>HTML-элемент textarea для каждого свойства объекта, представленного выражением.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="htmlAttributes">Словарь, содержащий атрибуты HTML, которые следует задать для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> равен null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.ValidationExtensions">
      <summary>Обеспечивает поддержку проверки входных данных из HTML-формы.</summary>
    </member>
    <member name="P:System.Web.Mvc.Html.ValidationExtensions.ResourceClassKey">
      <summary>Получает или задает имя файла ресурсов (ключа класса), содержащего локализованные значения строк.</summary>
      <returns>Имя файла ресурсов (ключа класса).</returns>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.Validate(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Извлекает метаданные проверки для указанной модели и применяет каждое из правил к полю данных.</summary>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="modelName">Имя проверяемого свойства или объекта модели.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="modelName" /> равен null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidateFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Извлекает метаданные проверки для указанной модели и применяет каждое из правил к полю данных.</summary>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Отображает сообщение проверки, если для указанного поля объекта <see cref="T:System.Web.Mvc.ModelStateDictionary" /> обнаружена ошибка.</summary>
      <returns>Если свойство или объект допустимы, пустая строка; в противном случае — элемент span, содержащий сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="modelName">Имя проверяемого свойства или объекта модели.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Отображает сообщение проверки, если для указанного поля объекта <see cref="T:System.Web.Mvc.ModelStateDictionary" /> обнаружена ошибка.</summary>
      <returns>Если свойство или объект допустимы, пустая строка; в противном случае — элемент span, содержащий сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="modelName">Имя проверяемого свойства или объекта модели.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>Отображает сообщение проверки, если для указанной записи объекта <see cref="T:System.Web.Mvc.ModelStateDictionary" /> обнаружена ошибка.</summary>
      <returns>Значение NULL, если запись допустима и проверка клиента отключена.В противном случае элемент <paramref name="tag" />, который содержит сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, на котором работает этот метод.</param>
      <param name="modelName">Имя проверяемой записи.</param>
      <param name="htmlAttributes">Объект <see cref="T:System.Collections.Generic.IDictionary`2" />, содержащий атрибуты HTML для элемента.</param>
      <param name="tag">Тег, который будет задан для помещения элемента HTML сообщения проверки в оболочку.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Отображает сообщение проверки, если для указанного поля объекта <see cref="T:System.Web.Mvc.ModelStateDictionary" /> обнаружена ошибка.</summary>
      <returns>Если свойство или объект допустимы, пустая строка; в противном случае — элемент span, содержащий сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="modelName">Имя проверяемого свойства или объекта модели.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)">
      <summary>Отображает сообщение проверки, если для указанной записи объекта <see cref="T:System.Web.Mvc.ModelStateDictionary" /> обнаружена ошибка.</summary>
      <returns>Значение NULL, если запись допустима и проверка клиента отключена.В противном случае элемент <paramref name="tag" />, который содержит сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, на котором работает этот метод.</param>
      <param name="modelName">Имя проверяемой записи.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента.</param>
      <param name="tag">Тег, который будет задан для помещения элемента HTML сообщения проверки в оболочку.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Отображает сообщение проверки, если для указанного поля объекта <see cref="T:System.Web.Mvc.ModelStateDictionary" /> обнаружена ошибка.</summary>
      <returns>Если свойство или объект допустимы, пустая строка; в противном случае — элемент span, содержащий сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="modelName">Имя проверяемого свойства или объекта модели.</param>
      <param name="validationMessage">Сообщение, отображаемое, если в указанном поле содержится ошибка.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Отображает сообщение проверки, если для указанного поля объекта <see cref="T:System.Web.Mvc.ModelStateDictionary" /> обнаружена ошибка.</summary>
      <returns>Если свойство или объект допустимы, пустая строка; в противном случае — элемент span, содержащий сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="modelName">Имя проверяемого свойства или объекта модели.</param>
      <param name="validationMessage">Сообщение, отображаемое, если в указанном поле содержится ошибка.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>Отображает сообщение проверки, если для указанной записи объекта <see cref="T:System.Web.Mvc.ModelStateDictionary" /> обнаружена ошибка.</summary>
      <returns>Значение NULL, если объект модели допустим и проверка клиента отключена.В противном случае элемент <paramref name="tag" />, который содержит сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, на котором работает этот метод.</param>
      <param name="modelName">Имя проверяемого объекта модели.</param>
      <param name="validationMessage">Сообщение, отображаемое, если в указанной записи содержится ошибка.</param>
      <param name="htmlAttributes">Объект <see cref="T:System.Collections.Generic.IDictionary`2" />, содержащий атрибуты HTML для элемента.</param>
      <param name="tag">Тег, который будет задан для помещения элемента HTML сообщения проверки в оболочку.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Отображает сообщение проверки, если для указанного поля объекта <see cref="T:System.Web.Mvc.ModelStateDictionary" /> обнаружена ошибка.</summary>
      <returns>Если свойство или объект допустимы, пустая строка; в противном случае — элемент span, содержащий сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="modelName">Имя проверяемого свойства или объекта модели.</param>
      <param name="validationMessage">Сообщение, отображаемое, если в указанном поле содержится ошибка.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.String)">
      <summary>Отображает сообщение проверки, если для указанной записи объекта <see cref="T:System.Web.Mvc.ModelStateDictionary" /> обнаружена ошибка.</summary>
      <returns>Значение NULL, если запись допустима и проверка клиента отключена.В противном случае элемент <paramref name="tag" />, который содержит сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, на котором работает этот метод.</param>
      <param name="modelName">Имя проверяемой записи.</param>
      <param name="validationMessage">Сообщение, отображаемое, если в указанной записи содержится ошибка.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента.</param>
      <param name="tag">Тег, который будет задан для помещения элемента HTML сообщения проверки в оболочку.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Отображает сообщение проверки, если для указанной записи объекта <see cref="T:System.Web.Mvc.ModelStateDictionary" /> обнаружена ошибка.</summary>
      <returns>Значение NULL, если запись допустима и проверка клиента отключена.В противном случае элемент <paramref name="tag" />, который содержит сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, на котором работает этот метод.</param>
      <param name="modelName">Имя проверяемой записи.</param>
      <param name="validationMessage">Сообщение, отображаемое, если в указанной записи содержится ошибка.</param>
      <param name="tag">Тег, который будет задан для помещения элемента HTML сообщения проверки в оболочку.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Возвращает разметку HTML для сообщения об ошибке проверки для каждого поля данных, представленного указанным выражением.</summary>
      <returns>Если свойство или объект допустимы, пустая строка; в противном случае — элемент span, содержащий сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Возвращает разметку HTML для сообщения об ошибке проверки для каждого поля данных, представленного указанным выражением, используя указанное сообщение.</summary>
      <returns>Если свойство или объект допустимы, пустая строка; в противном случае — элемент span, содержащий сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="validationMessage">Сообщение, отображаемое, если в указанном поле содержится ошибка.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает разметку HTML для сообщения об ошибке проверки для каждого поля данных, представленного указанным выражением, используя указанное сообщение и атрибуты HTM.</summary>
      <returns>Если свойство или объект допустимы, пустая строка; в противном случае — элемент span, содержащий сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="validationMessage">Сообщение, отображаемое, если в указанном поле содержится ошибка.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>Возвращает разметку HTML для сообщения об ошибке проверки для указанного выражения.</summary>
      <returns>Значение NULL, если объект модели допустим и проверка клиента отключена.В противном случае элемент <paramref name="tag" />, который содержит сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, на котором работает этот метод.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="validationMessage">Сообщение, отображаемое если появляется ошибка проверки.</param>
      <param name="htmlAttributes">Объект <see cref="T:System.Collections.Generic.IDictionary`2" />, содержащий атрибуты HTML для элемента.</param>
      <param name="tag">Тег, который будет задан для помещения элемента HTML сообщения проверки в оболочку.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Возвращает разметку HTML для сообщения об ошибке проверки для каждого поля данных, представленного указанным выражением, используя указанное сообщение и атрибуты HTM.</summary>
      <returns>Если свойство или объект допустимы, пустая строка; в противном случае — элемент span, содержащий сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="validationMessage">Сообщение, отображаемое, если в указанном поле содержится ошибка.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object,System.String)">
      <summary>Возвращает разметку HTML для сообщения об ошибке проверки для указанного выражения.</summary>
      <returns>Значение NULL, если объект модели допустим и проверка клиента отключена.В противном случае элемент <paramref name="tag" />, который содержит сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, на котором работает этот метод.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="validationMessage">Сообщение, отображаемое если появляется ошибка проверки.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента.</param>
      <param name="tag">Тег, который будет задан для помещения элемента HTML сообщения проверки в оболочку.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Возвращает разметку HTML для сообщения об ошибке проверки для указанного выражения.</summary>
      <returns>Значение NULL, если объект модели допустим и проверка клиента отключена.В противном случае элемент <paramref name="tag" />, который содержит сообщение об ошибке.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, на котором работает этот метод.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="validationMessage">Сообщение, отображаемое если появляется ошибка проверки.</param>
      <param name="tag">Тег, который будет задан для помещения элемента HTML сообщения проверки в оболочку.</param>
      <typeparam name="TModel">Тип модели.</typeparam>
      <typeparam name="TProperty">Тип свойства.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)">
      <summary>Возвращает неупорядоченный список (элемент ul) сообщений проверки, содержащихся в объекте <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Строка, которая содержит неупорядоченный список (элемент ul) сообщений проверки.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean)">
      <summary>Возвращает неупорядоченный список (элемент ul) сообщений проверки, находящихся в объекте <see cref="T:System.Web.Mvc.ModelStateDictionary" />, и (необязательно) отображает только ошибки уровня модели.</summary>
      <returns>Строка, которая содержит неупорядоченный список (элемент ul) сообщений проверки.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="excludePropertyErrors">Значение true, чтобы в сводке отображались только ошибки уровня модели; значение false, чтобы в сводке отображались все ошибки.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String)">
      <summary>Возвращает неупорядоченный список (элемент ul) сообщений проверки, находящихся в объекте <see cref="T:System.Web.Mvc.ModelStateDictionary" />, и (необязательно) отображает только ошибки уровня модели.</summary>
      <returns>Строка, которая содержит неупорядоченный список (элемент ul) сообщений проверки.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="excludePropertyErrors">Значение true, чтобы в сводке отображались только ошибки уровня модели; значение false, чтобы в сводке отображались все ошибки.</param>
      <param name="message">Сообщение, которое должно отображаться со сводкой проверки.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает неупорядоченный список (элемент ul) сообщений проверки, находящихся в объекте <see cref="T:System.Web.Mvc.ModelStateDictionary" />, и (необязательно) отображает только ошибки уровня модели.</summary>
      <returns>Строка, которая содержит неупорядоченный список (элемент ul) сообщений проверки.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="excludePropertyErrors">Значение true, чтобы в сводке отображались только ошибки уровня модели; значение false, чтобы в сводке отображались все ошибки.</param>
      <param name="message">Сообщение, которое должно отображаться со сводкой проверки.</param>
      <param name="htmlAttributes">Словарь, содержащий атрибуты HTML для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object)">
      <summary>Возвращает неупорядоченный список (элемент ul) сообщений проверки, находящихся в объекте <see cref="T:System.Web.Mvc.ModelStateDictionary" />, и (необязательно) отображает только ошибки уровня модели.</summary>
      <returns>Строка, которая содержит неупорядоченный список (элемент ul) сообщений проверки.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="excludePropertyErrors">Значение true, чтобы в сводке отображались только ошибки уровня модели; значение false, чтобы в сводке отображались все ошибки.</param>
      <param name="message">Сообщение, которое должно отображаться со сводкой проверки.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object,System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Возвращает неупорядоченный список (элемент ul) сообщений проверки, содержащихся в объекте <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Строка, которая содержит неупорядоченный список (элемент ul) сообщений проверки.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного приложения HMTL, который расширяется данным методом.</param>
      <param name="message">Сообщение, отображаемое, если в указанном поле содержится ошибка.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает неупорядоченный список (элемент ul) сообщений проверки, содержащихся в объекте <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Строка, которая содержит неупорядоченный список (элемент ul) сообщений проверки.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="message">Сообщение, отображаемое, если в указанном поле содержится ошибка.</param>
      <param name="htmlAttributes">Словарь, содержащий атрибуты HTML для элемента.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Возвращает неупорядоченный список (элемент ul) сообщений проверки, содержащихся в объекте <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Строка, которая содержит неупорядоченный список (элемент ul) сообщений проверки.</returns>
      <param name="htmlHelper">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="message">Сообщение, отображаемое, если в указанном поле содержится ошибка.</param>
      <param name="htmlAttributes">Объект, содержащий атрибуты HTML для элемента. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.String)"></member>
    <member name="T:System.Web.Mvc.Html.ValueExtensions">
      <summary>Предоставляет механизм для создания настраиваемой HTML-разметки, совместимой со связывателями модели и шаблонами ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Предоставляет механизм для создания настраиваемой HTML-разметки, совместимой со связывателями модели и шаблонами ASP.NET MVC.</summary>
      <returns>HTML-разметка значения.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя модели.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Предоставляет механизм для создания настраиваемой HTML-разметки, совместимой со связывателями модели и шаблонами ASP.NET MVC.</summary>
      <returns>HTML-разметка значения.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="name">Имя модели.</param>
      <param name="format">Строка формата.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Предоставляет механизм для создания настраиваемой HTML-разметки, совместимой со связывателями модели и шаблонами ASP.NET MVC.</summary>
      <returns>HTML-разметка значения.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <typeparam name="TModel">Модель.</typeparam>
      <typeparam name="TProperty">Свойство.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Предоставляет механизм для создания настраиваемой HTML-разметки, совместимой со связывателями модели и шаблонами ASP.NET MVC.</summary>
      <returns>HTML-разметка значения.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="expression">Выражение, которое определяет объект, содержащий свойства для отображения.</param>
      <param name="format">Строка формата.</param>
      <typeparam name="TModel">Модель.</typeparam>
      <typeparam name="TProperty">Свойство.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Предоставляет механизм для создания настраиваемой HTML-разметки, совместимой со связывателями модели и шаблонами ASP.NET MVC.</summary>
      <returns>HTML-разметка значения.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Предоставляет механизм для создания настраиваемой HTML-разметки, совместимой со связывателями модели и шаблонами ASP.NET MVC.</summary>
      <returns>HTML-разметка значения.</returns>
      <param name="html">Экземпляр вспомогательного метода HTML, который расширяется данным методом.</param>
      <param name="format">Строка формата.</param>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser">
      <summary>Компилирует представления Razor ASP.NET в классы.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.#ctor" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.InheritsDirective">
      <summary>Директива наследования.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.ModelDirective">
      <summary>Директива модели.</summary>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser">
      <summary>Расширяет класс VBCodeParser, добавляя поддержку ключевого слова @model.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.InheritsStatement">
      <summary>Задает значение, которое определяет, нужно ли наследовать текущий блок кода и модель.</summary>
      <returns>Значение true, если блок кода и модель наследуются; в противном случае — false.</returns>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.ModelTypeDirective">
      <summary>Директива типа модели.</summary>
      <returns>Возвращает пустое значение.</returns>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcWebPageRazorHost">
      <summary>Конфигурирует средство синтаксического анализа и генератор кода Razor ASP.NET для определенного файла.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Razor.MvcWebPageRazorHost" />. </summary>
      <param name="virtualPath">Виртуальный путь к файлу ASP.NET Razor.</param>
      <param name="physicalPath">Физический путь к файлу ASP.NET Razor.</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeGenerator(System.Web.Razor.Generator.RazorCodeGenerator)">
      <summary>Возвращает генератор кода Razor, соответствующий языку ASP.NET MVC.</summary>
      <returns>Генератор кода Razor, соответствующий языку ASP.NET MVC.</returns>
      <param name="incomingCodeGenerator">Генератор кода C# или Visual Basic.</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeParser(System.Web.Razor.Parser.ParserBase)">
      <summary>Возвращает средство синтаксического анализа кода Razor, соответствующее языку ASP.NET MVC, используя средство синтаксического анализа указанного языка.</summary>
      <returns>Средство синтаксического анализа кода Razor, соответствующее языку ASP.NET MVC.</returns>
      <param name="incomingCodeParser">Синтаксический анализатор кода C# или Visual Basic.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.DefaultDirectRouteProvider"></member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionDirectRoutes(System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Создает экземпляры <see cref="T:System.Web.Mvc.Routing.RouteEntry" /> на основе указанных фабрик и действия.Записи маршрута указывают прямые маршруты к предоставленному действию.</summary>
      <returns>Набор записей маршрута.</returns>
      <param name="actionDescriptor">Дескриптор действия.</param>
      <param name="factories">Фабрики прямого маршрута.</param>
      <param name="constraintResolver">Сопоставитель ограничений.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionRouteFactories(System.Web.Mvc.ActionDescriptor)">
      <summary>Получает набор фабрик маршрута для указанного дескриптора действия.</summary>
      <returns>Набор фабрик маршрута.</returns>
      <param name="actionDescriptor">Дескриптор действия.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetAreaPrefix(System.Web.Mvc.ControllerDescriptor)">
      <summary>Получает префикс области от указанного контроллера.</summary>
      <returns>Префикс области или NULL.</returns>
      <param name="controllerDescriptor">Дескриптор контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Создает экземпляры <see cref="T:System.Web.Mvc.Routing.RouteEntry" /> на основе указанных фабрик, контроллера и действий.Записи маршрута, которые предоставляют прямые маршруты для указанного контроллера и могут достичь набора указанных действий.</summary>
      <returns>Набор записей маршрута.</returns>
      <param name="controllerDescriptor">Дескриптор контроллера.</param>
      <param name="actionDescriptors">Дескрипторы действия.</param>
      <param name="factories">Фабрики прямого маршрута.</param>
      <param name="constraintResolver">Сопоставитель ограничений.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerRouteFactories(System.Web.Mvc.ControllerDescriptor)">
      <summary>Получает фабрики маршрута для указанного дескриптора контроллера.</summary>
      <returns>Набор фабрик маршрута.</returns>
      <param name="controllerDescriptor">Дескриптор контроллера.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Получает прямые маршруты для указанного дескриптора контроллера и дескрипторов действия на основе атрибутов <see cref="T:System.Web.Mvc.Routing.IDirectRouteFactory" />.</summary>
      <returns>Набор записей маршрута.</returns>
      <param name="controllerDescriptor">Дескриптор контроллера.</param>
      <param name="actionDescriptors">Дескрипторы действия для всех действий.</param>
      <param name="constraintResolver">Сопоставитель ограничений.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetRoutePrefix(System.Web.Mvc.ControllerDescriptor)">
      <summary>Получает префикс маршрута от указанного контроллера.</summary>
      <returns>Префикс маршрута или NULL.</returns>
      <param name="controllerDescriptor">Дескриптор контроллера.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.DefaultInlineConstraintResolver">
      <summary>Реализация <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" /> по умолчанию.Сопоставляет ограничения, обрабатывая ключ и аргументы ограничений, используя карту для сопоставления типа ограничения и вызывая соответствующий конструктор для типа ограничения.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.#ctor"></member>
    <member name="P:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.ConstraintMap">
      <summary>Получает изменяемый словарь, сопоставляющий ключи ограничения с определенным типом ограничения.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.ResolveConstraint(System.String)"></member>
    <member name="T:System.Web.Mvc.Routing.DirectRouteFactoryContext">
      <summary>Представляет контекст, обеспечивающий создание прямого маршрута.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.DirectRouteFactoryContext" />.</summary>
      <param name="areaPrefix">Префикс маршрута (если имеется), определенный областью.</param>
      <param name="controllerPrefix">Префикс маршрута (если имеется), определенный контроллером.</param>
      <param name="actions">Дескрипторы действий для создания маршрута.</param>
      <param name="inlineConstraintResolver">Сопоставитель встроенных ограничений.</param>
      <param name="targetIsAction">Значение, указывающее, настроен ли маршрут на уровне действий или контроллера.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.Actions">
      <summary>Получает дескрипторы действий для создания маршрута.</summary>
      <returns>Дескрипторы действий для создания маршрута.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.AreaPrefix">
      <summary>Получает префикс маршрута (если имеется), определенный областью.</summary>
      <returns>Префикс маршрута (если имеется), определенный областью.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.ControllerPrefix">
      <summary>Получает префикс маршрута (если имеется), определенный контроллером.</summary>
      <returns>Префикс маршрута (если имеется), определенный контроллером.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.CreateBuilder(System.String)">
      <summary>Создает построитель маршрутов, который может создать маршрут, соответствующий данному контексту.</summary>
      <returns>Построитель маршрутов, который может создать маршрут, соответствующий данному контексту.</returns>
      <param name="template">Шаблон маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.CreateBuilder(System.String,System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Создает построитель маршрутов, который может создать маршрут, соответствующий данному контексту.</summary>
      <returns>Построитель маршрутов, который может создать маршрут, соответствующий данному контексту.</returns>
      <param name="template">Шаблон маршрута.</param>
      <param name="constraintResolver">Используемый сопоставитель встроенных ограничений, если имеется; в противном случае — значение NULL.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.InlineConstraintResolver">
      <summary>Получает сопоставитель встроенных ограничений.</summary>
      <returns>Сопоставитель встроенных ограничений.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.TargetIsAction">
      <summary>Получает значение, указывающее, настроен ли маршрут на уровне действий или контроллера.</summary>
      <returns>Значение true, если маршрут настроен на уровне действий. Если маршрут настроен на уровне контроллера — значение false.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteBuilder">
      <summary>Определяет построитель, который создает прямые маршруты к действиям (маршруты атрибутов).</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Actions">
      <summary>Получает дескрипторы действий для создания маршрута.</summary>
      <returns>Дескрипторы действий для создания маршрута.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteBuilder.Build">
      <summary>Создает запись маршрута на основании текущих значений свойств.</summary>
      <returns>Созданная запись маршрута.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Constraints">
      <summary>Получает или задает ограничения маршрута.</summary>
      <returns>Ограничения маршрута.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.DataTokens">
      <summary>Получает или задает маркеры данных маршрута.</summary>
      <returns>Маркеры данных маршрута.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Defaults">
      <summary>Получает или задает используемые по умолчанию значения маршрута.</summary>
      <returns>Значения маршрута по умолчанию.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Name">
      <summary>Получает или задает имя маршрута.</summary>
      <returns>Имя маршрута или NULL, если имя не указано.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Order">
      <summary>Получает или задает порядок маршрута.</summary>
      <returns>Порядок маршрута.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Precedence">
      <summary>Получает или задает очередность маршрута.</summary>
      <returns>Очередность маршрута.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.TargetIsAction">
      <summary>Получает значение, указывающее, настроен ли маршрут на уровне действий или контроллера.</summary>
      <returns>Значение true, если маршрут настроен на уровне действий. Если маршрут настроен на уровне контроллера — значение false.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Template">
      <summary>Получает или задает шаблон маршрута.</summary>
      <returns>Шаблон маршрута.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteFactory">
      <summary>Определяет фабрику, которая создает маршрут напрямую к набору дескрипторов действия (маршрут атрибута).</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteFactory.CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>Создает запись прямого маршрута.</summary>
      <returns>Запись прямого маршрута.</returns>
      <param name="context">Контекст, используемый при создании маршрута.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteProvider">
      <summary>Определяет поставщика для маршрутов, который непосредственно назначает дескрипторы действия (маршруты атрибута).</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Получает прямые маршруты для контроллера.</summary>
      <returns>Набор записей маршрута для контроллера.</returns>
      <param name="controllerDescriptor">Дескриптор контроллера.</param>
      <param name="actionDescriptors">Дескрипторы действия.</param>
      <param name="constraintResolver">Сопоставитель встроенных ограничений.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IInlineConstraintResolver">
      <summary>Определяет абстракцию для сопоставления встроенных ограничений как экземпляров <see cref="T:System.Web.Routing.IRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)">
      <summary>Сопоставляет встроенное ограничение.</summary>
      <returns>Объект <see cref="T:System.Web.Routing.IRouteConstraint" />, в которое было сопоставлено встроенное ограничение.</returns>
      <param name="inlineConstraint">Встроенное ограничение для сопоставления.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IRouteInfoProvider">
      <summary>Предоставляет информацию для создания System.Web.Routing.Route.</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRouteInfoProvider.Name">
      <summary>Получает шаблон маршрута, описывающий шаблон URI для сопоставления.</summary>
      <returns>Шаблон маршрута, описывающий шаблон URI для сопоставления.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRouteInfoProvider.Template">
      <summary>Получает имя создаваемого маршрута.</summary>
      <returns>Имя создаваемого маршрута.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IRoutePrefix">
      <summary>Определяет префикс маршрута.</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRoutePrefix.Prefix">
      <summary>Получает префикс маршрута.</summary>
      <returns>Префикс маршрута.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteBuilder">
      <summary>Выполняет построение экземпляров <see cref="T:System.Web.Routing.Route" /> на основе информации о маршруте.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.RouteBuilder" />, используя сопоставитель ограничений по умолчанию.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.#ctor(System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.RouteBuilder" />.</summary>
      <param name="constraintResolver">
        <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" /> для сопоставления встроенных ограничений.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Reflection.MethodInfo,System.String)">
      <summary>Выполняет построение <see cref="T:System.Web.Routing.Route" /> для определенного метода.</summary>
      <returns>Созданный <see cref="T:System.Web.Routing.Route" />.</returns>
      <param name="routeTemplate">Шаблон маршрута с маркером.</param>
      <param name="allowedMethods">Методы HTTP, поддерживаемые маршрутом.Значение null указывает, что поддерживаются все возможные методы.</param>
      <param name="controllerName">Имя связанного контроллера.</param>
      <param name="actionName">Имя связанного действия.</param>
      <param name="targetMethod">Метод, к которому был применен атрибут маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Выполняет построение <see cref="T:System.Web.Routing.Route" /> для определенного метода.</summary>
      <returns>Созданный маршрут.</returns>
      <param name="routeTemplate">Шаблон маршрута с маркером.</param>
      <param name="controllerDescriptor">Контроллер, к которому был применен атрибут маршрута.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.String,System.Reflection.MethodInfo)">
      <summary>Выполняет построение <see cref="T:System.Web.Routing.Route" />.</summary>
      <returns>Созданный <see cref="T:System.Web.Routing.Route" />.</returns>
      <param name="defaults">Значения маршрута по умолчанию.</param>
      <param name="constraints">Ограничения маршрута.</param>
      <param name="routeTemplate">Шаблон маршрута без маркера.</param>
      <param name="targetMethod">Метод, к которому был применен атрибут маршрута.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteBuilder.ConstraintResolver">
      <summary>Получает сопоставитель для сопоставления встроенных ограничений.</summary>
      <returns>Сопоставитель для сопоставления встроенных ограничений.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteEntry">
      <summary>Представляет именованный маршрут.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteEntry.#ctor(System.String,System.Web.Routing.Route)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.RouteEntry" />.</summary>
      <param name="name">Имя маршрута.</param>
      <param name="route">Маршрут.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteEntry.Name">
      <summary>Получает имя маршрута.</summary>
      <returns>Имя маршрута, если имеется; в противном случае — значение NULL.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteEntry.Route">
      <summary>Получает маршрут.</summary>
      <returns>Маршрут.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteFactoryAttribute">
      <summary>Представляет маршрут атрибута, который может содержать настраиваемые ограничения.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteFactoryAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.RouteFactoryAttribute" />.</summary>
      <param name="template">Шаблон маршрута.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Constraints">
      <summary>Получает ограничения маршрута.</summary>
      <returns>Ограничения маршрута, если имеются; в противном случае — значение NULL.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteFactoryAttribute.CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>Создает запись прямого маршрута.</summary>
      <returns>Запись прямого маршрута.</returns>
      <param name="context">Контекст, используемый при создании маршрута.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.DataTokens">
      <summary>Получает маркеры данных маршрута.</summary>
      <returns>Маркеры данных маршрута, если имеются; в противном случае — значение NULL.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Defaults">
      <summary>Получает используемые по умолчанию значения маршрута.</summary>
      <returns>Используемые по умолчанию значения маршрута, если имеются; в противном случае — значение NULL.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Name">
      <summary>Получает или задает имя маршрута.</summary>
      <returns>Имя маршрута, если имеется; в противном случае — значение NULL.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Order">
      <summary>Получает или задает порядок маршрута.</summary>
      <returns>Порядок маршрута.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Template">
      <summary>Получает шаблон маршрута.</summary>
      <returns>Шаблон маршрута.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint">
      <summary>Ограничивает параметр маршрута так, чтобы он содержат только строчные или прописные буквы A-Z английского алфавита.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint">
      <summary>Ограничивает параметр маршрута только для представления логических значений.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint">
      <summary>Ограничивает маршрут с помощью нескольких дочерних ограничений.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.#ctor(System.Collections.Generic.IList{System.Web.Routing.IRouteConstraint})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint" />.</summary>
      <param name="constraints">Дочерние ограничение, которые должны совпадать для этого ограничения.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.Constraints">
      <summary>Получает дочерние ограничение, которые должны совпадать для этого ограничения.</summary>
      <returns>Дочерние ограничение, которые должны совпадать для этого ограничения.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Определяет, равен ли данный экземпляр указанному маршруту.</summary>
      <returns>Значение true, если данный экземпляр равен указанному маршруту; в противном случае — false.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="route">Маршрут для сравнения.</param>
      <param name="parameterName">Имя параметра.</param>
      <param name="values">Список значений параметров.</param>
      <param name="routeDirection">Направление маршрута.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint">
      <summary>Ограничивает параметр маршрута только для представления значений <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Определяет, равен ли данный экземпляр указанному маршруту.</summary>
      <returns>Значение true, если данный экземпляр равен указанному маршруту; в противном случае — false.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="route">Маршрут для сравнения.</param>
      <param name="parameterName">Имя параметра.</param>
      <param name="values">Список значений параметров.</param>
      <param name="routeDirection">Направление маршрута.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint">
      <summary>Ограничивает параметр маршрута только для представления десятичных значений.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Определяет, равен ли данный экземпляр указанному маршруту.</summary>
      <returns>Значение true, если данный экземпляр равен указанному маршруту; в противном случае — false.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="route">Маршрут для сравнения.</param>
      <param name="parameterName">Имя параметра.</param>
      <param name="values">Список значений параметров.</param>
      <param name="routeDirection">Направление маршрута.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint">
      <summary>Ограничивает параметр маршрута только для представления 64-разрядных значений с плавающей запятой.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Определяет, равен ли данный экземпляр указанному маршруту.</summary>
      <returns>Значение true, если данный экземпляр равен указанному маршруту; в противном случае — false.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="route">Маршрут для сравнения.</param>
      <param name="parameterName">Имя параметра.</param>
      <param name="values">Список значений параметров.</param>
      <param name="routeDirection">Направление маршрута.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint">
      <summary>Ограничивает параметр маршрута только для представления 32-разрядных значений с плавающей запятой.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint">
      <summary>Ограничивает параметр маршрута только для представления значений <see cref="T:System.Guid" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Определяет, равен ли данный экземпляр указанному маршруту.</summary>
      <returns>Значение true, если данный экземпляр равен указанному маршруту; в противном случае — false.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="route">Маршрут для сравнения.</param>
      <param name="parameterName">Имя параметра.</param>
      <param name="values">Список значений параметров.</param>
      <param name="routeDirection">Направление маршрута.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.IntRouteConstraint">
      <summary>Ограничивает параметр маршрута только для представления 32-разрядных целочисленных значений.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.IntRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.IntRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint">
      <summary>Ограничивает параметр маршрута для представления строки заданной длины или строки в заданном диапазоне длин.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint" />, который принудительно задает параметр маршрута как тип string заданной длины.</summary>
      <param name="minLength">Минимальная длина параметра маршрута.</param>
      <param name="maxLength">Максимальная длина параметра маршрута.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.Length">
      <summary>Получает длину параметра маршрута, если он задан.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.MaxLength">
      <summary>Получает максимальную длину параметра маршрута, если он задан.</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.MinLength">
      <summary>Получает минимальную длину параметра маршрута, если он задан.</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.LongRouteConstraint">
      <summary>Ограничивает параметр маршрута только для представления 64-разрядных целочисленных значений.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LongRouteConstraint.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.Constraints.LongRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LongRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Определяет, равен ли данный экземпляр указанному маршруту.</summary>
      <returns>Значение true, если данный экземпляр равен указанному маршруту; в противном случае — false.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="route">Маршрут для сравнения.</param>
      <param name="parameterName">Имя параметра.</param>
      <param name="values">Список значений параметров.</param>
      <param name="routeDirection">Направление маршрута.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint">
      <summary>Ограничивает параметр маршрута для представления строковых значений с максимальной длиной.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.MaxLength">
      <summary>Получает максимальную длину параметра маршрута.</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint">
      <summary>Ограничивает параметр маршрута для представления целых чисел с максимальным значением.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.#ctor(System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint" />.</summary>
      <param name="max">Максимальное значение.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Определяет, равен ли данный экземпляр указанному маршруту.</summary>
      <returns>Значение true, если данный экземпляр равен указанному маршруту; в противном случае — false.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="route">Маршрут для сравнения.</param>
      <param name="parameterName">Имя параметра.</param>
      <param name="values">Список значений параметров.</param>
      <param name="routeDirection">Направление маршрута.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.Max">
      <summary>Получает максимальное значение параметра маршрута.</summary>
      <returns>Максимальное значение параметра маршрута.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint">
      <summary>Ограничивает параметр маршрута для представления строковых значений с максимальной длиной.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint" />.</summary>
      <param name="minLength">Минимальная длина.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Определяет, равен ли данный экземпляр указанному маршруту.</summary>
      <returns>Значение true, если данный экземпляр равен указанному маршруту; в противном случае — false.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="route">Маршрут для сравнения.</param>
      <param name="parameterName">Имя сравнения.</param>
      <param name="values">Список значений параметров.</param>
      <param name="routeDirection">Направление маршрута.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.MinLength">
      <summary>Получает минимальную длину параметра маршрута.</summary>
      <returns>Минимальная длина параметра маршрута.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MinRouteConstraint">
      <summary>Ограничивает параметр маршрута для представления типа long с минимальным значением.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.#ctor(System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.Constraints.MinRouteConstraint" />.</summary>
      <param name="min">Минимальное значение.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Определяет, равен ли данный экземпляр указанному маршруту.</summary>
      <returns>Значение true, если данный экземпляр равен указанному маршруту; в противном случае — false.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="route">Маршрут для сравнения.</param>
      <param name="parameterName">Имя параметра.</param>
      <param name="values">Список значений параметров.</param>
      <param name="routeDirection">Направление маршрута.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.Min">
      <summary>Получает минимальное значение параметра маршрута.</summary>
      <returns>Минимальное значение параметра маршрута.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint">
      <summary>Ограничивает маршрут с помощью внутреннего ограничения, которое выполняется, если для дополнительного параметра задано значение по умолчанию.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.#ctor(System.Web.Routing.IRouteConstraint)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint" />.</summary>
      <param name="innerConstraint">Внутреннее ограничение для сопоставления, если параметр не является необязательным параметром без значения</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.InnerConstraint">
      <summary>Получает внутреннее ограничение для сопоставления, если параметр не является необязательным параметром без значения.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint">
      <summary>Ограничивает параметр маршрута для представления целых чисел с заданным диапазоном значений.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.#ctor(System.Int64,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint" />.</summary>
      <param name="min">Минимальное значение.</param>
      <param name="max">Максимальное значение.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Определяет, равен ли данный экземпляр указанному маршруту.</summary>
      <returns>Значение true, если данный экземпляр равен указанному маршруту; в противном случае — false.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="route">Маршрут для сравнения.</param>
      <param name="parameterName">Имя параметра.</param>
      <param name="values">Список значений параметров.</param>
      <param name="routeDirection">Направление маршрута.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Max">
      <summary>Получает максимальное значение параметра маршрута.</summary>
      <returns>Максимальное значение параметра маршрута.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Min">
      <summary>Получает минимальное значение параметра маршрута.</summary>
      <returns>Минимальное значение параметра маршрута.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint">
      <summary>Ограничивает параметр маршрута для сопоставления с регулярным выражением.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint" /> с указанным шаблоном.</summary>
      <param name="pattern">Шаблон для сопоставления.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Определяет, равен ли данный экземпляр указанному маршруту.</summary>
      <returns>Значение true, если данный экземпляр равен указанному маршруту; в противном случае — false.</returns>
      <param name="httpContext">Контекст HTTP.</param>
      <param name="route">Маршрут для сравнения.</param>
      <param name="parameterName">Имя параметра.</param>
      <param name="values">Список значений параметров.</param>
      <param name="routeDirection">Направление маршрута.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.Pattern">
      <summary>Получает шаблон регулярного выражения для сопоставления.</summary>
      <returns>Шаблон регулярного выражения для сопоставления.</returns>
    </member>
  </members>
</doc>